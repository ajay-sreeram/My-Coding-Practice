<!DOCTYPE html>
<!-- saved from url=(0111)http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <title>algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow</title>
    <link rel="shortcut icon" href="http://cdn.sstatic.net/stackoverflow/img/favicon.ico?v=038622610830">
    <link rel="apple-touch-icon image_src" href="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=fd7230a85918">
    <link rel="search" type="application/opensearchdescription+xml" title="Stack Overflow" href="http://stackoverflow.com/opensearch.xml">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:domain" content="stackoverflow.com">
    <meta name="og:type" content="website">
    <meta name="og:image" content="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=fde65a5a78c6">
    <meta name="og:title" content="How to find list of possible words from a letter matrix [Boggle Solver]">
    <meta name="og:description" content="Lately I have been playing a game on my iPhone called Scramble. Some of you may know this game as Boggle. Essentially, when the game starts you get a matrix of letters like so:

F X I E
A M L O
E W...">
    <meta name="og:url" content="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver">
    <link rel="canonical" href="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow.htm">

    
    
    <script async="" src="http://edge.quantserve.com/quant.js"></script><script async="" src="http://b.scorecardresearch.com/beacon.js"></script><script async="" src="http://www.google-analytics.com/analytics.js"></script><script type="text/javascript" async="" src="http://static.adzerk.net/ados.js"></script><script src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/jquery.min.js"></script><style type="text/css"></style>
    <script src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/stub.en.js"></script>
    <link rel="stylesheet" type="text/css" href="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/all.css">
    
    <link rel="alternate" type="application/atom+xml" title="Feed for question &#39;How to find list of possible words from a letter matrix [Boggle Solver]&#39;" href="http://stackoverflow.com/feeds/question/746082">
    <script>
        
        StackExchange.ready(function () {

            StackExchange.using("postValidation", function () {
                StackExchange.postValidation.initOnBlurAndSubmit($('#post-form'), 2, 'answer');
            });

            
            StackExchange.question.init({showAnswerHelp:true,totalCommentCount:12,shownCommentCount:5,highlightColor:'#F4A83D',backgroundColor:'#FFF',questionId:746082});

            styleCode();

                StackExchange.realtime.subscribeToQuestion('1', '746082');
            
                    });
    </script>


    <script>
        StackExchange.init({"locale":"en","stackAuthUrl":"https://stackauth.com","serverTime":1409736233,"networkMetaHostname":"meta.stackexchange.com","styleCode":true,"enableUserHovercards":true,"site":{"name":"Stack Overflow","description":"Q&A for professional and enthusiast programmers","isNoticesTabEnabled":true,"recaptchaPublicKey":"6LdchgIAAAAAAJwGpIzRQSOFaO0pU6s44Xt8aTwc","recaptchaAudioLang":"en","enableNewTagCreationWarning":true,"nonAsciiTags":true,"enableSocialMediaInSharePopup":true,"useGoogleOAuth2":true},"user":{"fkey":"5c93136ff0ff9b8bc296d89cc67f2c5b","isAnonymous":true}});
        StackExchange.using.setCacheBreakers({"js/prettify-full.en.js":"f15f31506151","js/moderator.en.js":"3bf88d4bfb80","js/full-anon.en.js":"5e12ee6d57da","js/full.en.js":"12f1208008c4","js/wmd.en.js":"b2432ce646f6","js/third-party/jquery.autocomplete.min.js":"e5f01e97f7c3","js/third-party/jquery.autocomplete.min.en.js":"","js/mobile.en.js":"1b05e243a7ff","js/help.en.js":"56d0a3a560ae","js/tageditor.en.js":"1269fefb7796","js/tageditornew.en.js":"028373c088a2","js/inline-tag-editing.en.js":"21223186b436","js/revisions.en.js":"989c474e85a9","js/review.en.js":"27d253fef075","js/tagsuggestions.en.js":"b278f9a0b23b","js/post-validation.en.js":"ed0675ed4b73","js/explore-qlist.en.js":"24424eb238e8","js/events.en.js":"bb29d0b254c5","js/keyboard-shortcuts.en.js":"fa91427c737f","js/external-editor.en.js":"bec608fb04b6"});
        StackExchange.using("gps", function() {
             StackExchange.gps.init(true);
        });
    </script>
    
        <script>
            StackExchange.ready(function () {
                $('#nav-tour').click(function () {
                    StackExchange.using("gps", function() {
                        StackExchange.gps.track("aboutpage.click", { aboutclick_location: "headermain" }, true);
                    });
                });
            });
        </script>
<script async="" src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/full-anon.en.js"></script><script async="" src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/post-validation.en.js"></script><script async="" src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/prettify-full.en.js"></script></head>
<body class="question-page new-topbar" itemscope="" itemtype="http://schema.org/QAPage">
    <noscript>&lt;div id="noscript-padding"&gt;&lt;/div&gt;</noscript>
    <div id="notify-container"></div>
    <div id="overlay-header"></div>
    <div id="custom-header"></div>
<div class="topbar">
    <div class="topbar-wrapper">
        
        <div class="js-topbar-dialog-corral">

<div class="topbar-dialog siteSwitcher-dialog dno">
    <div class="header">
        <h3><a href="http://stackoverflow.com/">current community</a></h3>
    </div>
    <div class="modal-content current-site-container">
        <ul class="current-site">
                <li>
                        <div class="related-links">
            <a href="http://chat.stackoverflow.com/" class="js-gps-track" data-gps-track="site_switcher.click({ item_type:6 })">chat</a>
                    <a href="http://blog.stackoverflow.com/" class="js-gps-track" data-gps-track="site_switcher.click({ item_type:7 })">blog</a>
            </div>




    <a href="http://stackoverflow.com/" class="current-site-link site-link js-gps-track" data-id="1" data-gps-track="
        site_switcher.click({ item_type:3 })">
        <div class="site-icon favicon favicon-stackoverflow" title="Stack Overflow"></div>
        Stack Overflow
    </a>

                </li>
                <li class="related-site">
                        <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                    



    <a href="http://meta.stackoverflow.com/" class="site-link js-gps-track" data-id="552" data-gps-track="
            site.switch({ target_site:552, item_type:3 }),
        site_switcher.click({ item_type:4 })">
        <div class="site-icon favicon favicon-stackoverflowmeta" title="Meta Stack Overflow"></div>
        Meta Stack Overflow
    </a>

                </li>
                            <li class="related-site">
                        <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                    <a class="site-link js-gps-track" href="http://careers.stackoverflow.com/" data-gps-track="site_switcher.click({ item_type:9 })">
                        <div class="site-icon favicon favicon-careers" title="Stack Overflow Careers"></div>
                        Careers 2.0
                    </a>
                </li>
        </ul>
    </div>
    
    <div class="header" id="your-communities-header">
        <h3>
your communities        </h3>
            
    </div>
    <div class="modal-content" id="your-communities-section">
            
            <div class="call-to-login">
                        <a href="https://stackoverflow.com/users/signup?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f746082%2fhow-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver" class="js-gps-track" data-gps-track="site_switcher.click({ item_type:10 })">Sign up</a>
                    or
                    <a href="https://stackoverflow.com/users/login?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f746082%2fhow-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver" class="js-gps-track" data-gps-track="site_switcher.click({ item_type:11 })">log in</a>

                    to customize your list.
            </div>
    </div>
    
    <div class="header">
        <h3><a href="http://stackexchange.com/sites">more stack exchange communities</a></h3>
    </div>
    <div class="modal-content">
            <div class="child-content"></div>
    </div>
</div>
        </div>

        <div class="network-items">
            
            <a href="http://stackexchange.com/" class="topbar-icon icon-site-switcher yes-hover js-site-switcher-button js-gps-track" data-gps-track="site_switcher.show" title="A list of all 131 Stack Exchange sites">
                <span class="hidden-text">Stack Exchange</span>
            </a>
            
        </div>

        <div class="topbar-links">
            
                <div class="links-container">
                    <span class="topbar-menu-links">
                            <a href="https://stackoverflow.com/users/signup?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f746082%2fhow-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver" class="login-link">sign up</a>
                            <a href="https://stackoverflow.com/users/login?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f746082%2fhow-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver" class="login-link">log in</a>
                            <a href="http://stackoverflow.com/tour">tour</a>

                            <a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" class="icon-help js-help-button" title="Help Center and other resources">
        help
        <span class="triangle"></span>
    </a>
    <div class="topbar-dialog help-dialog js-help-dialog dno">
        <div class="modal-content">
            <ul>
                                    <li>
                        <a href="http://stackoverflow.com/tour" class="js-gps-track" data-gps-track="help_popup.click({ item_type:1 })">
                            Tour
                            <span class="item-summary">
                                Start here for a quick overview of the site
                            </span>
                        </a>
                    </li>
                <li>
                    <a href="http://stackoverflow.com/help" class="js-gps-track" data-gps-track="help_popup.click({ item_type:4 })">
                        Help Center
                        <span class="item-summary">
                            Detailed answers to any questions you might have
                        </span>
                    </a>
                </li>
                    <li>
                        <a href="http://meta.stackoverflow.com/" class="js-gps-track" data-gps-track="help_popup.click({ item_type:2 })">
                            Meta
                            <span class="item-summary">
                                Discuss the workings and policies of this site
                            </span>
                        </a>
                    </li>
            </ul>
        </div>
    </div>

                            <a href="http://careers.stackoverflow.com/">careers 2.0</a>
                    </span>
                </div>

			<div class="search-container">
                <form id="search" action="http://stackoverflow.com/search" method="get" autocomplete="off">
                    <input name="q" type="text" placeholder="search" value="" tabindex="1" autocomplete="off" maxlength="240">
                </form>
			</div>
            	
        </div>      
    </div> 
</div>
<script>
    StackExchange.ready(function () { StackExchange.topbar.init(); });
</script>
    <div class="container">
        <div id="header" class="headeranon">
            <br class="cbt">
            <div id="hlogo">
                <a href="http://stackoverflow.com/">
                    Stack Overflow
                </a>
            </div>
            <div id="hmenus">
                <div class="nav mainnavs mainnavsanon">
                    <ul>
                        <li class="youarehere"><a id="nav-questions" href="http://stackoverflow.com/questions">Questions</a></li>
                        <li><a id="nav-tags" href="http://stackoverflow.com/tags">Tags</a></li>
                        <li><a id="nav-users" href="http://stackoverflow.com/users">Users</a></li>
                        <li><a id="nav-badges" href="http://stackoverflow.com/help/badges">Badges</a></li>
                        <li><a id="nav-unanswered" href="http://stackoverflow.com/unanswered">Unanswered</a></li>
                    </ul>
                </div>
                <div class="nav askquestion">
                    <ul>
                        <li>
                            <a id="nav-askquestion" href="http://stackoverflow.com/questions/ask">Ask Question</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        



        <div id="content">
            

<div itemscope="" itemtype="http://schema.org/Question">
	<link itemprop="image" href="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png">
			<!--googleoff: all-->

<div id="herobox-mini">
    <div id="hero-content">
        <span id="controls">
            <a href="http://stackoverflow.com/tour" id="tell-me-more" class="button">Take the 2-minute tour</a>
            <span id="close"><a title="click to dismiss">×</a></span>
        </span>
        <div id="blurb">
            Stack Overflow is a question and answer site for professional and enthusiast programmers. It's 100% free, no registration required.
        </div>        
    </div>
    <script>
        $('#tell-me-more').click(function () {
            var clickSource = $("body").attr("class") + '-mini';
            if ($("body").hasClass("questions-page")) {
                clickSource = 'questionpagemini';
            } else if ($("body").hasClass("question-page")) {
                clickSource = 'questionpagemini';
            } else if ($("body").hasClass("home-page")) {
                clickSource = 'homepagemini';
            }

            StackExchange.using("gps", function () {
                StackExchange.gps.track("aboutpage.click", { aboutclick_location: clickSource } , true);
            });
        });
        $('#herobox-mini #close').click(function () {
            StackExchange.using("gps", function () {
                StackExchange.gps.track("hero.action", { hero_action_type: "close" }, true);
            });
            $.cookie("hero", "none", { path: "/", expires: 365 });
            var $hero = $("#herobox-mini");
            $hero.slideUp('fast', function () { $hero.remove(); });
            return false;
        });
    </script>
</div>
			<!--googleon: all-->
			<div id="question-header">
			<h1 itemprop="name"><a href="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow.htm" class="question-hyperlink">How to find list of possible words from a letter matrix [Boggle Solver]</a></h1>
		</div>
			<div id="mainbar">

			

<div class="question" data-questionid="746082" id="question">

    <script>
                var ados = ados || {};ados.run = ados.run || [];
                ados.run.push(function() { ados_add_placement(22,8277,"adzerk913044221",4).setZone(43) ; });                    
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk913044221">
            </div>    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746082">
    <a class="vote-up-off" title="This question shows research effort; it is useful and clear">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">290</span>
    <a class="vote-down-off" title="This question does not show any research effort; it is unclear or not useful">down vote</a>
    
    <a class="star-off" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" title="This is a favorite question (click again to undo)">favorite</a>
    <div class="favoritecount"><b>229</b></div>   

</div>

            </td>
            
<td class="postcell">
<div>
    <div class="post-text" itemprop="text">

        <p>Lately I have been playing a game on my iPhone called Scramble. Some of you may know this game as Boggle. Essentially, when the game starts you get a matrix of letters like so:</p>

<pre><code>F X I E
A M L O
E W B X
A S T U
</code></pre>

<p>The goal of the game is to find as many words as you can that can be formed by chaining letters together. You can start with any letter, and all the letters that surround it are fair game, and then once you move on to the next letter, all the letters that surround that letter are fair game, <strong>except for any previously used letters</strong>. So in the grid above, for example, I could come up with the words <code>LOB</code>, <code>TUX</code>, <code>SEA</code>, <code>FAME</code>, etc. Words must be at least 3 characters, and no more than NxN characters, which would be 16 in this game but can vary in some implementations.  While this game is fun and addictive, I am apparently not very good at it and I wanted to cheat a little bit by making a program that would give me the best possible words (the longer the word the more points you get).</p>

<p><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/sample.gif" alt="Sample Boggle"></p>

<p>I am, unfortunately, not very good with algorithms or their efficiencies and so forth. My first attempt uses a dictionary <a href="http://www.freebsd.org/cgi/cvsweb.cgi/src/share/dict/web2?rev=1.12;content-type=text%2Fplain">such as this one</a> (~2.3MB) and does a linear search trying to match combinations with dictionary entries. This takes a <em>very</em> long time to find the possible words, and since you only get 2 minutes per round, it is simply not adequate.</p>

<p>I am interested to see if any Stackoverflowers can come up with more efficient solutions. I am mostly looking for solutions using the Big 3 Ps: Python, PHP, and Perl, although anything with Java or C++ is cool too, since speed is essential.</p>

<p><strong>CURRENT SOLUTIONS</strong>:</p>

<ul>
<li><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#746102">Adam Rosenfield</a>, Python, ~20s  </li>
<li><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#746345">John Fouhy</a>, Python, ~3s  </li>
<li><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#746955">Kent Fredric</a>, Perl, ~1s  </li>
<li><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#750012">Darius Bacon</a>, Python, ~1s  </li>
<li><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#750722">rvarcher</a>, VB.NET <a href="http://www.myvrad.com/boggle/default.aspx">(live link)</a>, ~1s</li>
<li><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#757165">Paolo Bergantino</a>, PHP <a href="http://www.rootspot.com/stackoverflow/boggle.php">(live link)</a>, ~5s (~2s locally)</li>
</ul>

<p><strong>BOUNTY</strong>:</p>

<p>I am adding a bounty to this question as my way of saying thanks to all the people who pitched in with their programs. Unfortunately I can only give the accepted answer to one of you, so I'll measure who has the fastest boggle solver 7 days from now and award the winner the bounty.</p>

<p>Bounty awarded. Thanks to everyone that participated.</p>

    </div>
    <div class="post-taglist">
        <a href="http://stackoverflow.com/questions/tagged/algorithm" class="post-tag js-gps-track" title="show questions tagged &#39;algorithm&#39;" rel="tag">algorithm</a> <a href="http://stackoverflow.com/questions/tagged/puzzle" class="post-tag js-gps-track" title="show questions tagged &#39;puzzle&#39;" rel="tag">puzzle</a> 
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/q/746082" title="short permalink to this question" class="short-link" id="link-post-746082">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746082/edit" class="suggest-edit-post" title="">improve this question</a></div>        
    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/746082/revisions" title="show all edits to this post">edited <span title="2011-05-10 07:56:00Z" class="relativetime">May 10 '11 at 7:56</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
    <td class="post-signature">
        <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Jun 28 &#39;09 at 22:43. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-746082" href="http://stackoverflow.com/posts/746082/revisions" title="show revision history for this post">
        15 revs, 3 users 100%<br></a><a href="http://stackoverflow.com/users/16417">Paolo Bergantino</a>

        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</div>
</td>
        </tr>
                
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746082" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="7" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-559605" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="warm">10</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">feature request MOAR PUZZLES</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment559605_746082"><span title="2009-04-14 16:14:28Z" class="relativetime-clean">Apr 14 '09 at 16:14</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-561371" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="warm">6</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">In regards to the timings: in my solution, practically all of the time is spent building the trie.  Once the trie is built, it can be reused many times.  If only solving one puzzle, it would be more efficient to use a simpler data structure (such as a set of all words and all prefixes).</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/9530/adam-rosenfield" title="178351 reputation" class="comment-user">Adam Rosenfield</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment561371_746082"><span title="2009-04-15 02:02:23Z" class="relativetime-clean">Apr 15 '09 at 2:02</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-888042" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Also, Adam's has a larger dictionary, evidenced by the number of longer words that his solution uses. They should all be tested based on a common dictionary.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16511/rich-bradshaw" title="34347 reputation" class="comment-user">Rich Bradshaw</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment888042_746082"><span title="2009-07-02 16:08:59Z" class="relativetime-clean">Jul 2 '09 at 16:08</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-15526531" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I guess no one plays much Boggle?  "Qu" is one "letter" and I'm not sure how many of the solutions caught that little detail.  It looks like some of them would allow you to use the "u" independently, among other problems.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1510590/qsario" title="646 reputation" class="comment-user">Qsario</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment15526531_746082"><span title="2012-07-29 00:45:23Z" class="relativetime-clean">Jul 29 '12 at 0:45</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-21605931" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I recently had this as an interview question and got nicely stuck in the details. I was treating it as a graph problem, which is fine, but the solutions here use far less space. I am coding up my own solution now. Well done to all who contributed!</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1198203/peter-friend" title="180 reputation" class="comment-user">Peter Friend</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment21605931_746082"><span title="2013-03-09 03:14:04Z" class="relativetime-clean">Mar 9 '13 at 3:14</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746082" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid answering questions in comments."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>7</b> more comments</a>
            </div>
    </td>
</tr>        </tbody></table>
</div>

			<div id="answers">

				<a name="tab-top"></a>
				<div id="answers-header">
					<div class="subheader answers-subheader">
						<h2>
								27 Answers
                                <span style="display:none;" itemprop="answerCount">27</span>
						</h2>
						<div>
							<div id="tabs">
        <a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver?answertab=active#tab-top" title="Answers with the latest activity first">active</a>
        <a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver?answertab=oldest#tab-top" title="Answers in the order they were provided">oldest</a>
        <a class="youarehere" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver?answertab=votes#tab-top" title="Answers with the highest score first">votes</a>
</div>
						</div>
					</div>    
				</div>    




  
<a name="750012"></a>
<div id="answer-750012" class="answer accepted-answer" data-answerid="750012" itemscope="" itemtype="http://schema.org/Answer" itemprop="acceptedAnswer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="750012">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">103</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


        <span class="vote-accepted-on load-accepted-answer-date" title="loading when this answer was accepted...">accepted</span>
<div class="bounty-award-container"><span class="bounty-award" title="This answer has been awarded bounties worth 150 reputation by Paolo Bergantino">+150</span></div></div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>My answer works like the others here, but I'll post it because it looks a bit faster than the other Python solutions, from setting up the dictionary faster. (I checked this against John Fouhy's solution.) After setup, the time to solve is down in the noise.</p>

<pre class="lang-python prettyprint prettyprinted"><code><span class="pln">grid </span><span class="pun">=</span><span class="pln"> </span><span class="str">"fxie amlo ewbx astu"</span><span class="pun">.</span><span class="pln">split</span><span class="pun">()</span><span class="pln">
nrows</span><span class="pun">,</span><span class="pln"> ncols </span><span class="pun">=</span><span class="pln"> len</span><span class="pun">(</span><span class="pln">grid</span><span class="pun">),</span><span class="pln"> len</span><span class="pun">(</span><span class="pln">grid</span><span class="pun">[</span><span class="lit">0</span><span class="pun">])</span><span class="pln">

</span><span class="com"># A dictionary word that could be a solution must use only the grid's</span><span class="pln">
</span><span class="com"># letters and have length &gt;= 3. (With a case-insensitive match.)</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> re
alphabet </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">.</span><span class="pln">join</span><span class="pun">(</span><span class="pln">set</span><span class="pun">(</span><span class="str">''</span><span class="pun">.</span><span class="pln">join</span><span class="pun">(</span><span class="pln">grid</span><span class="pun">)))</span><span class="pln">
bogglable </span><span class="pun">=</span><span class="pln"> re</span><span class="pun">.</span><span class="pln">compile</span><span class="pun">(</span><span class="str">'['</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> alphabet </span><span class="pun">+</span><span class="pln"> </span><span class="str">']{3,}$'</span><span class="pun">,</span><span class="pln"> re</span><span class="pun">.</span><span class="pln">I</span><span class="pun">).</span><span class="pln">match

words </span><span class="pun">=</span><span class="pln"> set</span><span class="pun">(</span><span class="pln">word</span><span class="pun">.</span><span class="pln">rstrip</span><span class="pun">(</span><span class="str">'\n'</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">for</span><span class="pln"> word </span><span class="kwd">in</span><span class="pln"> open</span><span class="pun">(</span><span class="str">'words'</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> bogglable</span><span class="pun">(</span><span class="pln">word</span><span class="pun">))</span><span class="pln">
prefixes </span><span class="pun">=</span><span class="pln"> set</span><span class="pun">(</span><span class="pln">word</span><span class="pun">[:</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="kwd">for</span><span class="pln"> word </span><span class="kwd">in</span><span class="pln"> words
               </span><span class="kwd">for</span><span class="pln"> i </span><span class="kwd">in</span><span class="pln"> range</span><span class="pun">(</span><span class="lit">2</span><span class="pun">,</span><span class="pln"> len</span><span class="pun">(</span><span class="pln">word</span><span class="pun">)+</span><span class="lit">1</span><span class="pun">))</span><span class="pln">

</span><span class="kwd">def</span><span class="pln"> solve</span><span class="pun">():</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> row </span><span class="kwd">in</span><span class="pln"> enumerate</span><span class="pun">(</span><span class="pln">grid</span><span class="pun">):</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> letter </span><span class="kwd">in</span><span class="pln"> enumerate</span><span class="pun">(</span><span class="pln">row</span><span class="pun">):</span><span class="pln">
            </span><span class="kwd">for</span><span class="pln"> result </span><span class="kwd">in</span><span class="pln"> extending</span><span class="pun">(</span><span class="pln">letter</span><span class="pun">,</span><span class="pln"> </span><span class="pun">((</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">),)):</span><span class="pln">
                </span><span class="kwd">yield</span><span class="pln"> result

</span><span class="kwd">def</span><span class="pln"> extending</span><span class="pun">(</span><span class="pln">prefix</span><span class="pun">,</span><span class="pln"> path</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> prefix </span><span class="kwd">in</span><span class="pln"> words</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">yield</span><span class="pln"> </span><span class="pun">(</span><span class="pln">prefix</span><span class="pun">,</span><span class="pln"> path</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="pln">nx</span><span class="pun">,</span><span class="pln"> ny</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> neighbors</span><span class="pun">(</span><span class="pln">path</span><span class="pun">[-</span><span class="lit">1</span><span class="pun">]):</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">nx</span><span class="pun">,</span><span class="pln"> ny</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">not</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> path</span><span class="pun">:</span><span class="pln">
            prefix1 </span><span class="pun">=</span><span class="pln"> prefix </span><span class="pun">+</span><span class="pln"> grid</span><span class="pun">[</span><span class="pln">ny</span><span class="pun">][</span><span class="pln">nx</span><span class="pun">]</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> prefix1 </span><span class="kwd">in</span><span class="pln"> prefixes</span><span class="pun">:</span><span class="pln">
                </span><span class="kwd">for</span><span class="pln"> result </span><span class="kwd">in</span><span class="pln"> extending</span><span class="pun">(</span><span class="pln">prefix1</span><span class="pun">,</span><span class="pln"> path </span><span class="pun">+</span><span class="pln"> </span><span class="pun">((</span><span class="pln">nx</span><span class="pun">,</span><span class="pln"> ny</span><span class="pun">),)):</span><span class="pln">
                    </span><span class="kwd">yield</span><span class="pln"> result

</span><span class="kwd">def</span><span class="pln"> neighbors</span><span class="pun">((</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">)):</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> nx </span><span class="kwd">in</span><span class="pln"> range</span><span class="pun">(</span><span class="pln">max</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">-</span><span class="lit">1</span><span class="pun">),</span><span class="pln"> min</span><span class="pun">(</span><span class="pln">x</span><span class="pun">+</span><span class="lit">2</span><span class="pun">,</span><span class="pln"> ncols</span><span class="pun">)):</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> ny </span><span class="kwd">in</span><span class="pln"> range</span><span class="pun">(</span><span class="pln">max</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">-</span><span class="lit">1</span><span class="pun">),</span><span class="pln"> min</span><span class="pun">(</span><span class="pln">y</span><span class="pun">+</span><span class="lit">2</span><span class="pun">,</span><span class="pln"> nrows</span><span class="pun">)):</span><span class="pln">
            </span><span class="kwd">yield</span><span class="pln"> </span><span class="pun">(</span><span class="pln">nx</span><span class="pun">,</span><span class="pln"> ny</span><span class="pun">)</span></code></pre>

<p>Sample usage:</p>

<pre><code># Print a maximal-length word and its path:
print max(solve(), key=lambda (word, path): len(word))
</code></pre>

<p><strong>Edit:</strong> Filter out words less than 3 letters long.</p>

<p><strong>Edit 2:</strong> I was curious why Kent Fredric's Perl solution was faster; it turns out to use regular-expression matching instead of a set of characters. Doing the same in Python about doubles the speed.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/750012" title="short permalink to this answer" class="short-link" id="link-post-750012">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/750012/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info user-hover">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/750012/revisions" title="show all edits to this post">edited <span title="2012-11-11 16:55:53Z" class="relativetime">Nov 11 '12 at 16:55</span></a>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/102441/eric"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/cf1b41a0f134b54597bf8a618be7880f" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/102441/eric">Eric</a><br>
        <span class="reputation-score" title="reputation score 36687" dir="ltr">36.7k</span><span title="10 gold badges"><span class="badge1"></span><span class="badgecount">10</span></span><span title="74 silver badges"><span class="badge2"></span><span class="badgecount">74</span></span><span title="160 bronze badges"><span class="badge3"></span><span class="badgecount">160</span></span>
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-04-15 02:00:37Z" class="relativetime">Apr 15 '09 at 2:00</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/27024/darius-bacon"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/1aae9883d2921230028d55beaca477b0" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/27024/darius-bacon">Darius Bacon</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">9,801</span><span title="2 gold badges"><span class="badge1"></span><span class="badgecount">2</span></span><span title="28 silver badges"><span class="badge2"></span><span class="badgecount">28</span></span><span title="43 bronze badges"><span class="badge3"></span><span class="badgecount">43</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-750012" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="2" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-561395" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The program is only giving me 1 word. How come?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment561395_750012"><span title="2009-04-15 02:18:57Z" class="relativetime-clean">Apr 15 '09 at 2:18</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-561430" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I didn't want to drown in output. See the comment at the bottom.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/27024/darius-bacon" title="9801 reputation" class="comment-user">Darius Bacon</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment561430_750012"><span title="2009-04-15 02:38:56Z" class="relativetime-clean">Apr 15 '09 at 2:38</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-561433" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="warm">6</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Or get all the words without the paths: print ' '.join(sorted(set(word for (word, path) in solve())))</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/27024/darius-bacon" title="9801 reputation" class="comment-user">Darius Bacon</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment561433_750012"><span title="2009-04-15 02:40:10Z" class="relativetime-clean">Apr 15 '09 at 2:40</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-4432433" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Much of the time is spent just parsing the dictionary.  I pre-parsed that out into a "wordlines.py" file that is just a list with each word being an element.  Because it's a .py file, that will get turned into a .pyc file.  So then I do an import of that instead of the read().splitlines().  With that, on my box, I'm solving it in around a tenth of a second.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/267126/sean-reifschneider" title="882 reputation" class="comment-user">Sean Reifschneider</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment4432433_750012"><span title="2010-11-06 23:00:06Z" class="relativetime-clean">Nov 6 '10 at 23:00</span></a></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-20894675" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@shellscape, it's Python 2 code. Python 3 dropped the ability to deconstruct arguments, like <code>def neighbors((x, y))</code> (pointlessly, as far as I can see). Also it requires parentheses around the argument to <code>print</code>.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/27024/darius-bacon" title="9801 reputation" class="comment-user">Darius Bacon</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment20894675_750012"><span title="2013-02-15 15:33:46Z" class="relativetime-clean">Feb 15 '13 at 15:33</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-750012" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>2</b> more comments</a>
            </div>
    </td>
</tr>    </tbody></table>
</div>
<script>
                var ados = ados || {};ados.run = ados.run || [];
                ados.run.push(function() { ados_add_placement(22,8277,"adzerk584779720",4).setZone(44) ; });                    
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk584779720">
            </div>
  
<a name="746102"></a>
<div id="answer-746102" class="answer" data-answerid="746102" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746102">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">98</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>The fastest solution you're going to get will probably involve storing your dictionary in a <a href="http://en.wikipedia.org/wiki/Trie">trie</a>.  Then, create a queue of triplets (<em>x</em>, <em>y</em>, <em>s</em>), where each element in the queue corresponds to a prefix <em>s</em> of a word which can be spelled in the grid, ending at location (<em>x</em>, <em>y</em>).  Initialize the queue with <em>N</em> x <em>N</em> elements (where <em>N</em> is the size of your grid), one element for each square in the grid.  Then, the algorithm proceeds as follows:</p>

<pre>While the queue is not empty:
  Dequeue a triple (x, y, s)
  For each square (x', y') with letter c adjacent to (x, y):
    If s+c is a word, output s+c
    If s+c is a prefix of a word, insert (x', y', s+c) into the queue
</pre>

<p>If you store your dictionary in a trie, testing if <em>s</em>+<em>c</em> is a word or a prefix of a word can be done in constant time (provided you also keep some extra metadata in each queue datum, such as a pointer to the current node in the trie), so the running time of this algorithm is O(number of words that can be spelled).</p>

<p><strong>[Edit]</strong> Here's an implementation in Python that I just coded up:</p>

<pre><code>#!/usr/bin/python

class TrieNode:
    def __init__(self, parent, value):
        self.parent = parent
        self.children = [None] * 26
        self.isWord = False
        if parent is not None:
            parent.children[ord(value) - 97] = self

def MakeTrie(dictfile):
    dict = open(dictfile)
    root = TrieNode(None, '')
    for word in dict:
        curNode = root
        for letter in word.lower():
            if 97 &lt;= ord(letter) &lt; 123:
                nextNode = curNode.children[ord(letter) - 97]
                if nextNode is None:
                    nextNode = TrieNode(curNode, letter)
                curNode = nextNode
        curNode.isWord = True
    return root

def BoggleWords(grid, dict):
    rows = len(grid)
    cols = len(grid[0])
    queue = []
    words = []
    for y in range(cols):
        for x in range(rows):
            c = grid[y][x]
            node = dict.children[ord(c) - 97]
            if node is not None:
                queue.append((x, y, c, node))
    while queue:
        x, y, s, node = queue[0]
        del queue[0]
        for dx, dy in ((1, 0), (1, -1), (0, -1), (-1, -1), (-1, 0), (-1, 1), (0, 1), (1, 1)):
            x2, y2 = x + dx, y + dy
            if 0 &lt;= x2 &lt; cols and 0 &lt;= y2 &lt; rows:
                s2 = s + grid[y2][x2]
                node2 = node.children[ord(grid[y2][x2]) - 97]
                if node2 is not None:
                    if node2.isWord:
                        words.append(s2)
                    queue.append((x2, y2, s2, node2))

    return words
</code></pre>

<p>Example usage:</p>

<pre><code>d = MakeTrie('/usr/share/dict/words')
print(BoggleWords(['fxie','amlo','ewbx','astu'], d))
</code></pre>

<p>Output:</p>

<blockquote>
  <p>['fa', 'xi', 'ie', 'io', 'el', 'am', 'ax', 'ae', 'aw', 'mi', 'ma', 'me', 'lo', 'li', 'oe', 'ox', 'em', 'ea', 'ea', 'es', 'wa', 'we', 'wa', 'bo', 'bu', 'as', 'aw', 'ae', 'st', 'se', 'sa', 'tu', 'ut', 'fam', 'fae', 'imi', 'eli', 'elm', 'elb', 'ami', 'ama', 'ame', 'aes', 'awl', 'awa', 'awe', 'awa', 'mix', 'mim', 'mil', 'mam', 'max', 'mae', 'maw', 'mew', 'mem', 'mes', 'lob', 'lox', 'lei', 'leo', 'lie', 'lim', 'oil', 'olm', 'ewe', 'eme', 'wax', 'waf', 'wae', 'waw', 'wem', 'wea', 'wea', 'was', 'waw', 'wae', 'bob', 'blo', 'bub', 'but', 'ast', 'ase', 'asa', 'awl', 'awa', 'awe', 'awa', 'aes', 'swa', 'swa', 'sew', 'sea', 'sea', 'saw', 'tux', 'tub', 'tut', 'twa', 'twa', 'tst', 'utu', 'fama', 'fame', 'ixil', 'imam', 'amli', 'amil', 'ambo', 'axil', 'axle', 'mimi', 'mima', 'mime', 'milo', 'mile', 'mewl', 'mese', 'mesa', 'lolo', 'lobo', 'lima', 'lime', 'limb', 'lile', 'oime', 'oleo', 'olio', 'oboe', 'obol', 'emim', 'emil', 'east', 'ease', 'wame', 'wawa', 'wawa', 'weam', 'west', 'wese', 'wast', 'wase', 'wawa', 'wawa', 'boil', 'bolo', 'bole', 'bobo', 'blob', 'bleo', 'bubo', 'asem', 'stub', 'stut', 'swam', 'semi', 'seme', 'seam', 'seax', 'sasa', 'sawt', 'tutu', 'tuts', 'twae', 'twas', 'twae', 'ilima', 'amble', 'axile', 'awest', 'mamie', 'mambo', 'maxim', 'mease', 'mesem', 'limax', 'limes', 'limbo', 'limbu', 'obole', 'emesa', 'embox', 'awest', 'swami', 'famble', 'mimble', 'maxima', 'embolo', 'embole', 'wamble', 'semese', 'semble', 'sawbwa', 'sawbwa']</p>
</blockquote>

<p>Notes: This program doesn't output 1-letter words, or filter by word length at all.  That's easy to add but not really relevant to the problem.  It also outputs some words multiple times if they can be spelled in multiple ways.  If a given word can be spelled in many different ways (worst case: every letter in the grid is the same (e.g. 'A') and a word like 'aaaaaaaaaa' is in your dictionary), then the running time will get horribly exponential.  Filtering out duplicates and sorting is trivial to due after the algorithm has finished.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746102" title="short permalink to this answer" class="short-link" id="link-post-746102">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746102/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/746102/revisions" title="show all edits to this post">edited <span title="2009-04-14 03:02:06Z" class="relativetime">Apr 14 '09 at 3:02</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-04-14 02:19:18Z" class="relativetime">Apr 14 '09 at 2:19</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/9530/adam-rosenfield"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/924800e76876546c5c575c0175e1f434" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/9530/adam-rosenfield">Adam Rosenfield</a><br>
        <span class="reputation-score" title="reputation score 178351" dir="ltr">178k</span><span title="38 gold badges"><span class="badge1"></span><span class="badgecount">38</span></span><span title="284 silver badges"><span class="badge2"></span><span class="badgecount">284</span></span><span title="413 bronze badges"><span class="badge3"></span><span class="badgecount">413</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746102" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="6" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-557637" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Nice. I also implemented a Boggle solver using tries.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/90308/foglebird" title="23843 reputation" class="comment-user">FogleBird</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment557637_746102"><span title="2009-04-14 02:58:41Z" class="relativetime-clean">Apr 14 '09 at 2:58</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-557642" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="warm">9</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Ooo. I'm glad someone stepped up to the plate. Although this works, it doesn't "remember" the letter it has already used, and comes up with words that would require using the same letter twice which is not allowed. As I'm an idiot, how would I go about fixing that?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment557642_746102"><span title="2009-04-14 03:02:53Z" class="relativetime-clean">Apr 14 '09 at 3:02</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-557644" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">True, it doesn't remember what letters have been visited, but that wasn't specified in your spec =).  To fix that, you'd have to add to each queue datum a list of all the visited locations, and then check that list before adding the next character.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/9530/adam-rosenfield" title="178351 reputation" class="comment-user">Adam Rosenfield</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment557644_746102"><span title="2009-04-14 03:04:54Z" class="relativetime-clean">Apr 14 '09 at 3:04</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-873885" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I did this too when I got sick of playing Scramble.  I think the recursive (DFS instead of BFS) solution is more sexy, as you can just keep a set of active cells (so you don't visit the same cell twice).  Much neater then keeping a bunch of lists.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/123870/justin-scheiner" title="141 reputation" class="comment-user">Justin Scheiner</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment873885_746102"><span title="2009-06-30 04:59:28Z" class="relativetime-clean">Jun 30 '09 at 4:59</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-17450108" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Shouldn't this fall into an infinite loop? I mean, say for <code>(x,y)</code>, a possible follower is <code>(x+1,y+1)</code>. Then <code>(x+1,y+1)</code> is pushed to the queue. However <code>(x,y)</code> will too be a follower for <code>(x+1,y+1)</code>, so won't that lead to an unending bouncing back between them?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1469954/cupidvogel" title="990 reputation" class="comment-user">Cupidvogel</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment17450108_746102"><span title="2012-10-14 21:31:15Z" class="relativetime-clean">Oct 14 '12 at 21:31</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746102" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>6</b> more comments</a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746955"></a>
<div id="answer-746955" class="answer" data-answerid="746955" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746955">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">35</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>For a dictionary speedup, there is one general transformation/process you can do to greatly reduce the dictionary comparisons ahead of time. </p>

<p>Given that the above grid contains only 16 characters, some of them duplicate, you can greatly reduce the number of total keys in your dictionary by simply filtering out entries that have unattainable characters. </p>

<p>I thought this was the obvious optimization but seeing nobody did it I'm mentioning it. </p>

<p>It reduced me from a dictionary of 200,000 keys to only 2,000 keys simply during the input pass. This at the very least reduces memory overhead, and that's sure to map to a speed increase somewhere as memory isn't infinitely fast. </p>

<h2>Perl Implementation</h2>

<p>My implementation is a bit top-heavy because I placed importance on being able to know the exact path of every extracted string, not just the validity therein. </p>

<p>I also have a few adaptions in there that would theoretically permit a grid with holes in it to function, and grids with different sized lines ( assuming you get the input right and it lines up somehow ). </p>

<p>The early-filter is by far the most <em>significant</em> bottleneck in my application, as suspected earlier, commenting out that line bloats it from 1.5s to 7.5s. </p>

<p>Upon execution it appears to think all the single digits are on their own valid words,  but I'm pretty sure thats due to how the dictionary file works. </p>

<p>Its a bit bloated, but at least I reuse <a href="http://p3rl.org/Tree%3a%3aTrie" rel="nofollow">Tree::Trie</a> from cpan</p>

<p>Some of it was inspired partially by the existing implementations, some of it I had in mind already. </p>

<p>Constructive Criticism and ways it could be improved welcome ( /me notes he never <a href="http://p3rl.org/Games%3a%3aBoggle" rel="nofollow">searched CPAN for a boggle solver</a>, but this was more fun to work out ) </p>

<p><strong>updated for new criteria</strong></p>

<pre class="lang-perl prettyprint prettyprinted"><code><span class="com">#!/usr/bin/perl </span><span class="pln">

</span><span class="kwd">use</span><span class="pln"> strict</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">use</span><span class="pln"> warnings</span><span class="pun">;</span><span class="pln">

</span><span class="pun">{</span><span class="pln">

  </span><span class="com"># this package manages a given path through the grid.</span><span class="pln">
  </span><span class="com"># Its an array of matrix-nodes in-order with</span><span class="pln">
  </span><span class="com"># Convenience functions for pretty-printing the paths</span><span class="pln">
  </span><span class="com"># and for extending paths as new paths.</span><span class="pln">

  </span><span class="com"># Usage:</span><span class="pln">
  </span><span class="com"># my $p = Prefix-&gt;new(path=&gt;[ $startnode ]);</span><span class="pln">
  </span><span class="com"># my $c = $p-&gt;child( $extensionNode );</span><span class="pln">
  </span><span class="com"># print $c-&gt;current_word ;</span><span class="pln">

  </span><span class="kwd">package</span><span class="pln"> </span><span class="typ">Prefix</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">use</span><span class="pln"> </span><span class="typ">Moose</span><span class="pun">;</span><span class="pln">

  has path </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
      isa     </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'ArrayRef[MatrixNode]'</span><span class="pun">,</span><span class="pln">
      is      </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln">
      default </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">sub</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">
  </span><span class="pun">);</span><span class="pln">
  has current_word </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
      isa        </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'Str'</span><span class="pun">,</span><span class="pln">
      is         </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln">
      lazy_build </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
  </span><span class="pun">);</span><span class="pln">

  </span><span class="com"># Create a clone of this object</span><span class="pln">
  </span><span class="com"># with a longer path</span><span class="pln">

  </span><span class="com"># $o-&gt;child( $successive-node-on-graph );</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> child </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $newNode </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $f       </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Prefix</span><span class="pun">-&gt;</span><span class="pln">new</span><span class="pun">();</span><span class="pln">

      </span><span class="com"># Have to do this manually or other recorded paths get modified</span><span class="pln">
      push </span><span class="pun">@{</span><span class="pln"> $f</span><span class="pun">-&gt;{</span><span class="pln">path</span><span class="pun">}</span><span class="pln"> </span><span class="pun">},</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;{</span><span class="pln">path</span><span class="pun">}</span><span class="pln"> </span><span class="pun">},</span><span class="pln"> $newNode</span><span class="pun">;</span><span class="pln">
      return $f</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># Traverses $o-&gt;path left-to-right to get the string it represents.</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _build_current_word </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return join q</span><span class="pun">{},</span><span class="pln"> map </span><span class="pun">{</span><span class="pln"> $_</span><span class="pun">-&gt;{</span><span class="pln">value</span><span class="pun">}</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;{</span><span class="pln">path</span><span class="pun">}</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># Returns  the rightmost node on this path</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> tail </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return $self</span><span class="pun">-&gt;{</span><span class="pln">path</span><span class="pun">}-&gt;[-</span><span class="lit">1</span><span class="pun">];</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># pretty-format $o-&gt;path</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> pp_path </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@path</span><span class="pln"> </span><span class="pun">=</span><span class="pln">
        map </span><span class="pun">{</span><span class="pln"> </span><span class="str">'['</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> $_</span><span class="pun">-&gt;{</span><span class="pln">x_position</span><span class="pun">}</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> </span><span class="str">','</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> $_</span><span class="pun">-&gt;{</span><span class="pln">y_position</span><span class="pun">}</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> </span><span class="str">']'</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;{</span><span class="pln">path</span><span class="pun">}</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
      return </span><span class="str">"["</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> join</span><span class="pun">(</span><span class="pln"> </span><span class="str">","</span><span class="pun">,</span><span class="pln"> </span><span class="lit">@path</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> </span><span class="str">"]"</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># pretty-format $o</span><span class="pln">
  </span><span class="kwd">sub</span><span class="pln"> pp </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return $self</span><span class="pun">-&gt;</span><span class="pln">current_word </span><span class="pun">.</span><span class="pln"> </span><span class="str">' =&gt; '</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">pp_path</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  __PACKAGE__</span><span class="pun">-&gt;</span><span class="pln">meta</span><span class="pun">-&gt;</span><span class="pln">make_immutable</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="pun">{</span><span class="pln">

  </span><span class="com"># Basic package for tracking node data</span><span class="pln">
  </span><span class="com"># without having to look on the grid.</span><span class="pln">
  </span><span class="com"># I could have just used an array or a hash, but that got ugly.</span><span class="pln">

</span><span class="com"># Once the matrix is up and running it doesn't really care so much about rows/columns,</span><span class="pln">
</span><span class="com"># Its just a sea of points and each point has adjacent points.</span><span class="pln">
</span><span class="com"># Relative positioning is only really useful to map it back to userspace</span><span class="pln">

  </span><span class="kwd">package</span><span class="pln"> </span><span class="typ">MatrixNode</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">use</span><span class="pln"> </span><span class="typ">Moose</span><span class="pun">;</span><span class="pln">

  has x_position </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> isa </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'Int'</span><span class="pun">,</span><span class="pln"> is </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  has y_position </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> isa </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'Int'</span><span class="pun">,</span><span class="pln"> is </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  has value      </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> isa </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'Str'</span><span class="pun">,</span><span class="pln"> is </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln"> required </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  has siblings   </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
      isa     </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'ArrayRef[MatrixNode]'</span><span class="pun">,</span><span class="pln">
      is      </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln">
      default </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">sub</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">);</span><span class="pln">

</span><span class="com"># Its not implicitly uni-directional joins. It would be more effient in therory</span><span class="pln">
</span><span class="com"># to make the link go both ways at the same time, but thats too hard to program around.</span><span class="pln">
</span><span class="com"># and besides, this isn't slow enough to bother caring about.</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> add_sibling </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $sibling </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      push </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">siblings </span><span class="pun">},</span><span class="pln"> $sibling</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># Convenience method to derive a path starting at this node</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> to_path </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return </span><span class="typ">Prefix</span><span class="pun">-&gt;</span><span class="pln">new</span><span class="pun">(</span><span class="pln"> path </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">[</span><span class="pln">$self</span><span class="pun">]</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  __PACKAGE__</span><span class="pun">-&gt;</span><span class="pln">meta</span><span class="pun">-&gt;</span><span class="pln">make_immutable</span><span class="pun">;</span><span class="pln">

</span><span class="pun">}</span><span class="pln">

</span><span class="pun">{</span><span class="pln">

  </span><span class="kwd">package</span><span class="pln"> </span><span class="typ">Matrix</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">use</span><span class="pln"> </span><span class="typ">Moose</span><span class="pun">;</span><span class="pln">

  has rows </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
      isa     </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'ArrayRef'</span><span class="pun">,</span><span class="pln">
      is      </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln">
      default </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">sub</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">
  </span><span class="pun">);</span><span class="pln">

  has regex </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
      isa        </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'Regexp'</span><span class="pun">,</span><span class="pln">
      is         </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln">
      lazy_build </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
  </span><span class="pun">);</span><span class="pln">

  has cells </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
      isa        </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'ArrayRef'</span><span class="pun">,</span><span class="pln">
      is         </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'rw'</span><span class="pun">,</span><span class="pln">
      lazy_build </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
  </span><span class="pun">);</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> add_row </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      push </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">rows </span><span class="pun">},</span><span class="pln"> </span><span class="pun">[</span><span class="lit">@_</span><span class="pun">];</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># Most of these functions from here down are just builder functions,</span><span class="pln">
  </span><span class="com"># or utilities to help build things.</span><span class="pln">
  </span><span class="com"># Some just broken out to make it easier for me to process.</span><span class="pln">
  </span><span class="com"># All thats really useful is add_row</span><span class="pln">
  </span><span class="com"># The rest will generally be computed, stored, and ready to go</span><span class="pln">
  </span><span class="com"># from -&gt;cells by the time either -&gt;cells or -&gt;regex are called.</span><span class="pln">

  </span><span class="com"># traverse all cells and make a regex that covers them.</span><span class="pln">
  </span><span class="kwd">sub</span><span class="pln"> _build_regex </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self  </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $chars </span><span class="pun">=</span><span class="pln"> q</span><span class="pun">{};</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $cell </span><span class="pun">(</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">cells </span><span class="pun">}</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          $chars </span><span class="pun">.=</span><span class="pln"> $cell</span><span class="pun">-&gt;</span><span class="pln">value</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      $chars </span><span class="pun">=</span><span class="pln"> </span><span class="str">"[^$chars]"</span><span class="pun">;</span><span class="pln">
      return qr</span><span class="pun">/</span><span class="pln">$chars</span><span class="pun">/</span><span class="pln">i</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># convert a plain cell ( ie: [x][y] = 0 )</span><span class="pln">
  </span><span class="com"># to an intelligent cell ie: [x][y] = object( x, y )</span><span class="pln">
  </span><span class="com"># we only really keep them in this format temporarily</span><span class="pln">
  </span><span class="com"># so we can go through and tie in neighbouring information.</span><span class="pln">
  </span><span class="com"># after the neigbouring is done, the grid should be considered inoperative.</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _convert </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $x    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $y    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $v    </span><span class="pun">=</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">_read</span><span class="pun">(</span><span class="pln"> $x</span><span class="pun">,</span><span class="pln"> $y </span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $n    </span><span class="pun">=</span><span class="pln"> </span><span class="typ">MatrixNode</span><span class="pun">-&gt;</span><span class="pln">new</span><span class="pun">(</span><span class="pln">
          x_position </span><span class="pun">=&gt;</span><span class="pln"> $x</span><span class="pun">,</span><span class="pln">
          y_position </span><span class="pun">=&gt;</span><span class="pln"> $y</span><span class="pun">,</span><span class="pln">
          value      </span><span class="pun">=&gt;</span><span class="pln"> $v</span><span class="pun">,</span><span class="pln">
      </span><span class="pun">);</span><span class="pln">
      $self</span><span class="pun">-&gt;</span><span class="pln">_write</span><span class="pun">(</span><span class="pln"> $x</span><span class="pun">,</span><span class="pln"> $y</span><span class="pun">,</span><span class="pln"> $n </span><span class="pun">);</span><span class="pln">
      return $n</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

</span><span class="com"># go through the rows/collums presently available and freeze them into objects.</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _build_cells </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@out</span><span class="pln">  </span><span class="pun">=</span><span class="pln"> </span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@rows</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $x </span><span class="pun">(</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">..</span><span class="pln"> $</span><span class="com">#rows ) {</span><span class="pln">
          </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">unless</span><span class="pln"> defined $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">];</span><span class="pln">
          </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@col</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">]</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
          </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $y </span><span class="pun">(</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">..</span><span class="pln"> $</span><span class="com">#col ) {</span><span class="pln">
              </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">unless</span><span class="pln"> defined $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">]-&gt;[</span><span class="pln">$y</span><span class="pun">];</span><span class="pln">
              push </span><span class="lit">@out</span><span class="pun">,</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">_convert</span><span class="pun">(</span><span class="pln"> $x</span><span class="pun">,</span><span class="pln"> $y </span><span class="pun">);</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $c </span><span class="pun">(</span><span class="lit">@out</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $n </span><span class="pun">(</span><span class="pln"> $self</span><span class="pun">-&gt;</span><span class="pln">_neighbours</span><span class="pun">(</span><span class="pln"> $c</span><span class="pun">-&gt;</span><span class="pln">x_position</span><span class="pun">,</span><span class="pln"> $c</span><span class="pun">-&gt;</span><span class="pln">y_position </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
              $c</span><span class="pun">-&gt;</span><span class="pln">add_sibling</span><span class="pun">(</span><span class="pln"> $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln"> $n</span><span class="pun">-&gt;[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">]-&gt;[</span><span class="pln"> $n</span><span class="pun">-&gt;[</span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      return \@out</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com"># given x,y , return array of points that refer to valid neighbours.</span><span class="pln">
  </span><span class="kwd">sub</span><span class="pln"> _neighbours </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $x    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $y    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@out</span><span class="pln">  </span><span class="pun">=</span><span class="pln"> </span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $sx </span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> $sx </span><span class="pun">+</span><span class="pln"> $x </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
          </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> not defined $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln"> $sx </span><span class="pun">+</span><span class="pln"> $x </span><span class="pun">];</span><span class="pln">
          </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $sy </span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
              </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> $sx </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> $sy </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
              </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> $sy </span><span class="pun">+</span><span class="pln"> $y </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
              </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> not defined $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln"> $sx </span><span class="pun">+</span><span class="pln"> $x </span><span class="pun">]-&gt;[</span><span class="pln"> $sy </span><span class="pun">+</span><span class="pln"> $y </span><span class="pun">];</span><span class="pln">
              push </span><span class="lit">@out</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> $sx </span><span class="pun">+</span><span class="pln"> $x</span><span class="pun">,</span><span class="pln"> $sy </span><span class="pun">+</span><span class="pln"> $y </span><span class="pun">];</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      return </span><span class="lit">@out</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _has_row </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $x    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return defined $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">];</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _has_cell </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $x    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $y    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return defined $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">]-&gt;[</span><span class="pln">$y</span><span class="pun">];</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _read </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $x    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $y    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      return $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">]-&gt;[</span><span class="pln">$y</span><span class="pun">];</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">sub</span><span class="pln"> _write </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $self </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $x    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $y    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $v    </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
      $self</span><span class="pun">-&gt;{</span><span class="pln">rows</span><span class="pun">}-&gt;[</span><span class="pln">$x</span><span class="pun">]-&gt;[</span><span class="pln">$y</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> $v</span><span class="pun">;</span><span class="pln">
      return $v</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  __PACKAGE__</span><span class="pun">-&gt;</span><span class="pln">meta</span><span class="pun">-&gt;</span><span class="pln">make_immutable</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">use</span><span class="pln"> </span><span class="typ">Tree</span><span class="pun">::</span><span class="typ">Trie</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">sub</span><span class="pln"> readDict </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $fn </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $re </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $d  </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Tree</span><span class="pun">::</span><span class="typ">Trie</span><span class="pun">-&gt;</span><span class="pln">new</span><span class="pun">();</span><span class="pln">

  </span><span class="com"># Dictionary Loading</span><span class="pln">
  open </span><span class="kwd">my</span><span class="pln"> $fh</span><span class="pun">,</span><span class="pln"> </span><span class="str">'&lt;'</span><span class="pun">,</span><span class="pln"> $fn</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $line </span><span class="pun">=</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln">$fh</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      chomp</span><span class="pun">(</span><span class="pln">$line</span><span class="pun">);</span><span class="pln">

 </span><span class="com"># Commenting the next line makes it go from 1.5 seconds to 7.5 seconds. EPIC.</span><span class="pln">
      </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> $line </span><span class="pun">=~</span><span class="pln"> $re</span><span class="pun">;</span><span class="pln">    </span><span class="com"># Early Filter</span><span class="pln">
      $d</span><span class="pun">-&gt;</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> uc</span><span class="pun">(</span><span class="pln">$line</span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  return $d</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">sub</span><span class="pln"> traverseGraph </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $d     </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $m     </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $min   </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $max   </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@words</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">();</span><span class="pln">

  </span><span class="com"># Inject all grid nodes into the processing queue.</span><span class="pln">

  </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@queue</span><span class="pln"> </span><span class="pun">=</span><span class="pln">
    grep </span><span class="pun">{</span><span class="pln"> $d</span><span class="pun">-&gt;</span><span class="pln">lookup</span><span class="pun">(</span><span class="pln"> $_</span><span class="pun">-&gt;</span><span class="pln">current_word </span><span class="pun">)</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
    map  </span><span class="pun">{</span><span class="pln"> $_</span><span class="pun">-&gt;</span><span class="pln">to_path </span><span class="pun">}</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $m</span><span class="pun">-&gt;</span><span class="pln">cells </span><span class="pun">};</span><span class="pln">

  </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="lit">@queue</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $item </span><span class="pun">=</span><span class="pln"> shift </span><span class="lit">@queue</span><span class="pun">;</span><span class="pln">

      </span><span class="com"># put the dictionary into "exact match" mode.</span><span class="pln">

      $d</span><span class="pun">-&gt;</span><span class="pln">deepsearch</span><span class="pun">(</span><span class="str">'exact'</span><span class="pun">);</span><span class="pln">

      </span><span class="kwd">my</span><span class="pln"> $cword </span><span class="pun">=</span><span class="pln"> $item</span><span class="pun">-&gt;</span><span class="pln">current_word</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $l     </span><span class="pun">=</span><span class="pln"> length</span><span class="pun">(</span><span class="pln">$cword</span><span class="pun">);</span><span class="pln">

      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> $l </span><span class="pun">&gt;=</span><span class="pln"> $min </span><span class="pun">&amp;&amp;</span><span class="pln"> $d</span><span class="pun">-&gt;</span><span class="pln">lookup</span><span class="pun">(</span><span class="pln">$cword</span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          push </span><span class="lit">@words</span><span class="pun">,</span><span class="pln">
            $item</span><span class="pun">;</span><span class="pln">    </span><span class="com"># push current path into "words" if it exactly matches.</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      </span><span class="kwd">next</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> $l </span><span class="pun">&gt;</span><span class="pln"> $max</span><span class="pun">;</span><span class="pln">

      </span><span class="com"># put the dictionary into "is-a-prefix" mode.</span><span class="pln">
      $d</span><span class="pun">-&gt;</span><span class="pln">deepsearch</span><span class="pun">(</span><span class="str">'boolean'</span><span class="pun">);</span><span class="pln">

    siblingloop</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">foreach</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $sibling </span><span class="pun">(</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $item</span><span class="pun">-&gt;</span><span class="pln">tail</span><span class="pun">-&gt;</span><span class="pln">siblings </span><span class="pun">}</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          </span><span class="kwd">foreach</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $visited </span><span class="pun">(</span><span class="pln"> </span><span class="pun">@{</span><span class="pln"> $item</span><span class="pun">-&gt;{</span><span class="pln">path</span><span class="pun">}</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
              </span><span class="kwd">next</span><span class="pln"> siblingloop </span><span class="kwd">if</span><span class="pln"> $sibling </span><span class="pun">==</span><span class="pln"> $visited</span><span class="pun">;</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">

          </span><span class="com"># given path y , iterate for all its end points</span><span class="pln">
          </span><span class="kwd">my</span><span class="pln"> $subpath </span><span class="pun">=</span><span class="pln"> $item</span><span class="pun">-&gt;</span><span class="pln">child</span><span class="pun">(</span><span class="pln">$sibling</span><span class="pun">);</span><span class="pln">

          </span><span class="com"># create a new path for each end-point</span><span class="pln">
          </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> $d</span><span class="pun">-&gt;</span><span class="pln">lookup</span><span class="pun">(</span><span class="pln"> $subpath</span><span class="pun">-&gt;</span><span class="pln">current_word </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

             </span><span class="com"># if the new path is a prefix, add it to the bottom of the queue.</span><span class="pln">
              push </span><span class="lit">@queue</span><span class="pun">,</span><span class="pln"> $subpath</span><span class="pun">;</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  return \@words</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">sub</span><span class="pln"> setup_predetermined </span><span class="pun">{</span><span class="pln"> 
  </span><span class="kwd">my</span><span class="pln"> $m </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln"> 
  </span><span class="kwd">my</span><span class="pln"> $gameNo </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> $gameNo </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> F X I E </span><span class="pun">));</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> A M L O </span><span class="pun">));</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> E W B X </span><span class="pun">));</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> A S T U </span><span class="pun">));</span><span class="pln">
      return $m</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> $gameNo </span><span class="pun">==</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> D G H I </span><span class="pun">));</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> K L P S </span><span class="pun">));</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> Y E U T </span><span class="pun">));</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln">qw</span><span class="pun">(</span><span class="pln"> E O R N </span><span class="pun">));</span><span class="pln">
      return $m</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">sub</span><span class="pln"> setup_random </span><span class="pun">{</span><span class="pln"> 
  </span><span class="kwd">my</span><span class="pln"> $m </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln"> 
  </span><span class="kwd">my</span><span class="pln"> $seed </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  srand $seed</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@letters</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">'A'</span><span class="pln"> </span><span class="pun">..</span><span class="pln"> </span><span class="str">'Z'</span><span class="pln"> </span><span class="pun">;</span><span class="pln"> 
  </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">..</span><span class="pln"> </span><span class="lit">4</span><span class="pln"> </span><span class="pun">){</span><span class="pln"> 
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@r</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">..</span><span class="pln"> </span><span class="lit">4</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
          push </span><span class="lit">@r</span><span class="pln"> </span><span class="pun">,</span><span class="pln"> $letters</span><span class="pun">[</span><span class="pln">int</span><span class="pun">(</span><span class="pln">rand</span><span class="pun">(</span><span class="lit">25</span><span class="pun">))];</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      $m</span><span class="pun">-&gt;</span><span class="pln">add_row</span><span class="pun">(</span><span class="pln"> </span><span class="lit">@r</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="com"># Here is where the real work starts.</span><span class="pln">

</span><span class="kwd">my</span><span class="pln"> $m </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Matrix</span><span class="pun">-&gt;</span><span class="pln">new</span><span class="pun">();</span><span class="pln">
setup_predetermined</span><span class="pun">(</span><span class="pln"> $m</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
</span><span class="com">#setup_random( $m, 5 );</span><span class="pln">

</span><span class="kwd">my</span><span class="pln"> $d </span><span class="pun">=</span><span class="pln"> readDict</span><span class="pun">(</span><span class="pln"> </span><span class="str">'dict.txt'</span><span class="pun">,</span><span class="pln"> $m</span><span class="pun">-&gt;</span><span class="pln">regex </span><span class="pun">);</span><span class="pln">
</span><span class="kwd">my</span><span class="pln"> $c </span><span class="pun">=</span><span class="pln"> scalar </span><span class="pun">@{</span><span class="pln"> $m</span><span class="pun">-&gt;</span><span class="pln">cells </span><span class="pun">};</span><span class="pln">    </span><span class="com"># get the max, as per spec</span><span class="pln">

</span><span class="kwd">print</span><span class="pln"> join </span><span class="str">",\n"</span><span class="pun">,</span><span class="pln"> map </span><span class="pun">{</span><span class="pln"> $_</span><span class="pun">-&gt;</span><span class="pln">pp </span><span class="pun">}</span><span class="pln"> </span><span class="pun">@{</span><span class="pln">
  traverseGraph</span><span class="pun">(</span><span class="pln"> $d</span><span class="pun">,</span><span class="pln"> $m</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> $c </span><span class="pun">)</span><span class="pln"> </span><span class="pun">;</span><span class="pln">
</span><span class="pun">};</span></code></pre>

<p>Arch/execution info for comparison:</p>

<pre><code>model name      : Intel(R) Core(TM)2 Duo CPU     T9300  @ 2.50GHz
cache size      : 6144 KB
Memory usage summary: heap total: 77057577, heap peak: 11446200, stack peak: 26448
       total calls   total memory   failed calls
 malloc|     947212       68763684              0
realloc|      11191        1045641              0  (nomove:9063, dec:4731, free:0)
 calloc|     121001        7248252              0
   free|     973159       65854762

Histogram for block sizes:
  0-15         392633  36% ==================================================
 16-31          43530   4% =====
 32-47          50048   4% ======
 48-63          70701   6% =========
 64-79          18831   1% ==
 80-95          19271   1% ==
 96-111        238398  22% ==============================
112-127          3007  &lt;1% 
128-143        236727  21% ==============================
</code></pre>

<h2>More Mumblings on that Regex Optimization</h2>

<p>The regex optimization I use is useless for multi-solve dictionaries, and for multi-solve you'll want a full dictionary, not a pre-trimmed one. </p>

<p>However, that said, for one-off solves, its really fast. ( Perl regex are in C! :)  )</p>

<p>Here is some varying code additions:  </p>

<pre class="lang-perl prettyprint prettyprinted"><code><span class="kwd">sub</span><span class="pln"> readDict_nofilter </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $fn </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $re </span><span class="pun">=</span><span class="pln"> shift</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $d  </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Tree</span><span class="pun">::</span><span class="typ">Trie</span><span class="pun">-&gt;</span><span class="pln">new</span><span class="pun">();</span><span class="pln">

  </span><span class="com"># Dictionary Loading</span><span class="pln">
  open </span><span class="kwd">my</span><span class="pln"> $fh</span><span class="pun">,</span><span class="pln"> </span><span class="str">'&lt;'</span><span class="pun">,</span><span class="pln"> $fn</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">my</span><span class="pln"> $line </span><span class="pun">=</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln">$fh</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      chomp</span><span class="pun">(</span><span class="pln">$line</span><span class="pun">);</span><span class="pln">
      $d</span><span class="pun">-&gt;</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> uc</span><span class="pun">(</span><span class="pln">$line</span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  return $d</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">sub</span><span class="pln"> benchmark_io </span><span class="pun">{</span><span class="pln"> 
  </span><span class="kwd">use</span><span class="pln"> </span><span class="typ">Benchmark</span><span class="pln"> qw</span><span class="pun">(</span><span class="pln"> cmpthese </span><span class="pun">:</span><span class="pln">hireswallclock </span><span class="pun">);</span><span class="pln">
   </span><span class="com"># generate a random 16 character string </span><span class="pln">
   </span><span class="com"># to simulate there being an input grid. </span><span class="pln">
  </span><span class="kwd">my</span><span class="pln"> $regexen </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">sub</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@letters</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">'A'</span><span class="pln"> </span><span class="pun">..</span><span class="pln"> </span><span class="str">'Z'</span><span class="pln"> </span><span class="pun">;</span><span class="pln"> 
      </span><span class="kwd">my</span><span class="pln"> </span><span class="lit">@lo</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.</span><span class="pun">.</span><span class="lit">16</span><span class="pln"> </span><span class="pun">){</span><span class="pln"> 
          push </span><span class="lit">@lo</span><span class="pln"> </span><span class="pun">,</span><span class="pln"> $_ </span><span class="pun">;</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
      </span><span class="kwd">my</span><span class="pln"> $c  </span><span class="pun">=</span><span class="pln"> join </span><span class="str">''</span><span class="pun">,</span><span class="pln"> </span><span class="lit">@lo</span><span class="pun">;</span><span class="pln">
      $c </span><span class="pun">=</span><span class="pln"> </span><span class="str">"[^$c]"</span><span class="pun">;</span><span class="pln">
      return qr</span><span class="pun">/</span><span class="pln">$c</span><span class="pun">/</span><span class="pln">i</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">};</span><span class="pln">
  cmpthese</span><span class="pun">(</span><span class="pln"> </span><span class="lit">200</span><span class="pln"> </span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      filtered </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">sub</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
          readDict</span><span class="pun">(</span><span class="str">'dict.txt'</span><span class="pun">,</span><span class="pln"> $regexen</span><span class="pun">-&gt;()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      </span><span class="pun">},</span><span class="pln"> 
      unfiltered </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">sub</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          readDict_nofilter</span><span class="pun">(</span><span class="str">'dict.txt'</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">});</span><span class="pln">
</span><span class="pun">}</span></code></pre>

<pre>           s/iter unfiltered   filtered
unfiltered   8.16         --       -94%
filtered    0.464      1658%         --
</pre>

<p><sub>ps: 8.16 * 200 = 27 minutes. </sub></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746955" title="short permalink to this answer" class="short-link" id="link-post-746955">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746955/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/746955/revisions" title="show all edits to this post">edited <span title="2014-05-09 05:21:09Z" class="relativetime">May 9 at 5:21</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Apr 14 &#39;09 at 15:47. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-746955" href="http://stackoverflow.com/posts/746955/revisions" title="show revision history for this post">
        14 revs<br></a><a href="http://stackoverflow.com/users/15614">Kent Fredric</a>
        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746955" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="17" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-558345" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I know I'm failing the optimization club, but I had speed issues before I got to the real work of the code, and reducing input time from 2s to 1.2s means a lot to me.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment558345_746955"><span title="2009-04-14 10:04:48Z" class="relativetime-clean">Apr 14 '09 at 10:04</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-558349" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">/me noted it odd now it took <i>less</i> time to regex and skip entries than it took to add keys to a hash.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment558349_746955"><span title="2009-04-14 10:05:37Z" class="relativetime-clean">Apr 14 '09 at 10:05</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-558837" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Nice, a Perl implementation! I'll go run it now.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment558837_746955"><span title="2009-04-14 13:20:07Z" class="relativetime-clean">Apr 14 '09 at 13:20</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-558964" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Blerg, having a hard time installing Tree::Trie on my webserver. :(</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment558964_746955"><span title="2009-04-14 13:46:53Z" class="relativetime-clean">Apr 14 '09 at 13:46</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-559594" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">How did you generate that last report (arch/execution info)? Looks useful.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1480/jmanning2k" title="3444 reputation" class="comment-user">jmanning2k</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment559594_746955"><span title="2009-04-14 16:13:19Z" class="relativetime-clean">Apr 14 '09 at 16:13</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746955" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>17</b> more comments</a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746345"></a>
<div id="answer-746345" class="answer" data-answerid="746345" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746345">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">25</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>You could split the problem up into two pieces:</p>

<ol>
<li>Some kind of search algorithm that will enumerate possible strings in the grid.</li>
<li>A way of testing whether a string is a valid word.</li>
</ol>

<p>Ideally, (2) should also include a way of testing whether a string is a prefix of a valid word – this will allow you to prune your search and save a whole heap of time.</p>

<p>Adam Rosenfield's Trie is a solution to (2).  It's elegant and probably what your algorithms specialist would prefer, but with modern languages and modern computers, we can be a bit lazier.  Also, as Kent suggests, we can reduce our dictionary size by discarding words that have letters not present in the grid.  Here's some python:</p>

<pre><code>def make_lookups(grid, fn='dict.txt'):
    # Make set of valid characters.
    chars = set()
    for word in grid:
        chars.update(word)

    words = set(x.strip() for x in open(fn) if set(x.strip()) &lt;= chars)
    prefixes = set()
    for w in words:
        for i in range(len(w)+1):
            prefixes.add(w[:i])

    return words, prefixes
</code></pre>

<p>Wow; constant-time prefix testing.  It takes a couple of seconds to load the dictionary you linked, but only a couple :-) (notice that <code>words &lt;= prefixes</code>)</p>

<p>Now, for part (1), I'm inclined to think in terms of graphs.  So I'll build a dictionary that looks something like this:</p>

<pre><code>graph = { (x, y):set([(x0,y0), (x1,y1), (x2,y2)]), }
</code></pre>

<p>i.e. <code>graph[(x, y)]</code> is the set of coordinates that you can reach from position <code>(x, y)</code>.  I'll also add a dummy node <code>None</code> which will connect to everything.</p>

<p>Building it's a bit clumsy, because there's 8 possible positions and you have to do bounds checking.  Here's some correspondingly-clumsy python code:</p>

<pre><code>def make_graph(grid):
    root = None
    graph = { root:set() }
    chardict = { root:'' }

    for i, row in enumerate(grid):
        for j, char in enumerate(row):
            chardict[(i, j)] = char
            node = (i, j)
            children = set()
            graph[node] = children
            graph[root].add(node)
            add_children(node, children, grid)

    return graph, chardict

def add_children(node, children, grid):
    x0, y0 = node
    for i in [-1,0,1]:
        x = x0 + i
        if not (0 &lt;= x &lt; len(grid)):
            continue
        for j in [-1,0,1]:
            y = y0 + j
            if not (0 &lt;= y &lt; len(grid[0])) or (i == j == 0):
                continue

            children.add((x,y))
</code></pre>

<p>This code also builds up a dictionary mapping <code>(x,y)</code> to the corresponding character.  This lets me turn a list of positions into a word:</p>

<pre><code>def to_word(chardict, pos_list):
    return ''.join(chardict[x] for x in pos_list)
</code></pre>

<p>Finally, we do a depth-first search.  The basic procedure is:</p>

<ol>
<li>The search arrives at a particular node.</li>
<li>Check if the path so far could be part of a word.  If not, don't explore this branch any further.</li>
<li>Check if the path so far is a word.  If so, add to the list of results.</li>
<li>Explore all children not part of the path so far.</li>
</ol>

<p>Python:</p>

<pre><code>def find_words(graph, chardict, position, prefix, results, words, prefixes):
    """ Arguments:
      graph :: mapping (x,y) to set of reachable positions
      chardict :: mapping (x,y) to character
      position :: current position (x,y) -- equals prefix[-1]
      prefix :: list of positions in current string
      results :: set of words found
      words :: set of valid words in the dictionary
      prefixes :: set of valid words or prefixes thereof
    """
    word = to_word(chardict, prefix)

    if word not in prefixes:
        return

    if word in words:
        results.add(word)

    for child in graph[position]:
        if child not in prefix:
            find_words(graph, chardict, child, prefix+[child], results, words, prefixes)
</code></pre>

<p>Run the code as:</p>

<pre><code>grid = ['fxie', 'amlo', 'ewbx', 'astu']
g, c = make_graph(grid)
w, p = make_lookups(grid)
res = set()
find_words(g, c, None, [], res, w, p)
</code></pre>

<p>and inspect <code>res</code> to see the answers.  Here's a list of words found for your example, sorted by size:</p>

<pre><code> ['a', 'b', 'e', 'f', 'i', 'l', 'm', 'o', 's', 't',
 'u', 'w', 'x', 'ae', 'am', 'as', 'aw', 'ax', 'bo',
 'bu', 'ea', 'el', 'em', 'es', 'fa', 'ie', 'io', 'li',
 'lo', 'ma', 'me', 'mi', 'oe', 'ox', 'sa', 'se', 'st',
 'tu', 'ut', 'wa', 'we', 'xi', 'aes', 'ame', 'ami',
 'ase', 'ast', 'awa', 'awe', 'awl', 'blo', 'but', 'elb',
 'elm', 'fae', 'fam', 'lei', 'lie', 'lim', 'lob', 'lox',
 'mae', 'maw', 'mew', 'mil', 'mix', 'oil', 'olm', 'saw',
 'sea', 'sew', 'swa', 'tub', 'tux', 'twa', 'wae', 'was',
 'wax', 'wem', 'ambo', 'amil', 'amli', 'asem', 'axil',
 'axle', 'bleo', 'boil', 'bole', 'east', 'fame', 'limb',
 'lime', 'mesa', 'mewl', 'mile', 'milo', 'oime', 'sawt',
 'seam', 'seax', 'semi', 'stub', 'swam', 'twae', 'twas',
 'wame', 'wase', 'wast', 'weam', 'west', 'amble', 'awest',
 'axile', 'embox', 'limbo', 'limes', 'swami', 'embole',
 'famble', 'semble', 'wamble']
</code></pre>

<p>The code takes (literally) a couple of seconds to load the dictionary, but the rest is instant on my machine.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746345" title="short permalink to this answer" class="short-link" id="link-post-746345">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746345/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/746345/revisions" title="show all edits to this post">edited <span title="2009-04-15 00:33:03Z" class="relativetime">Apr 15 '09 at 0:33</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2009-04-14 04:27:46Z" class="relativetime">Apr 14 '09 at 4:27</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/15154/john-fouhy"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/cdca0dc45085388c1b753104ce4c8648" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/15154/john-fouhy">John Fouhy</a><br>
        <span class="reputation-score" title="reputation score 14873" dir="ltr">14.9k</span><span title="3 gold badges"><span class="badge1"></span><span class="badgecount">3</span></span><span title="36 silver badges"><span class="badge2"></span><span class="badgecount">36</span></span><span title="57 bronze badges"><span class="badge3"></span><span class="badgecount">57</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746345" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="3" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-557833" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Very nice! Very fast, too. I'm going to wait around to see if anyone else steps up to the plate, but your answer is looking good so far.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment557833_746345"><span title="2009-04-14 04:39:58Z" class="relativetime-clean">Apr 14 '09 at 4:39</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-558906" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I'm confused why "embole" is your only 6-letter word, I got 10 different words for that. It appears you prohibit visiting the same node twice, and as the OP stated, that's fair game.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment558906_746345"><span title="2009-04-14 13:34:37Z" class="relativetime-clean">Apr 14 '09 at 13:34</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-559092" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">No, it actually isn't, I need to update my question.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment559092_746345"><span title="2009-04-14 14:13:43Z" class="relativetime-clean">Apr 14 '09 at 14:13</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-559428" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">ok, hes still possibly got a bug as hes discarding "FAMBLE" "WAMBLE" and "SEMBLE", which don't share characters.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment559428_746345"><span title="2009-04-14 15:31:16Z" class="relativetime-clean">Apr 14 '09 at 15:31</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-560911" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Well spotted!  The bug was in the creation of the prefixes set: I needed to use <code>range(len(w)+1)</code> instead of <code>range(len(w))</code>.  I claimed that <code>words &lt;= prefixes</code> but apparently I didn't test that :-/</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15154/john-fouhy" title="14873 reputation" class="comment-user">John Fouhy</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment560911_746345"><span title="2009-04-14 22:00:30Z" class="relativetime-clean">Apr 14 '09 at 22:00</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746345" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>3</b> more comments</a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="1067067"></a>
<div id="answer-1067067" class="answer" data-answerid="1067067" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1067067">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">19</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>My attempt in Java. It takes about 2 s to read file and build trie, and around 50 ms to solve the puzzle.  I used the dictionary linked in the question (it has a few words that I didn't know exist in English such as fae, ima)</p>

<pre><code>0 [main] INFO gineer.bogglesolver.util.Util  - Reading the dictionary
2234 [main] INFO gineer.bogglesolver.util.Util  - Finish reading the dictionary
2234 [main] INFO gineer.bogglesolver.Solver  - Found: FAM
2234 [main] INFO gineer.bogglesolver.Solver  - Found: FAME
2234 [main] INFO gineer.bogglesolver.Solver  - Found: FAMBLE
2234 [main] INFO gineer.bogglesolver.Solver  - Found: FAE
2234 [main] INFO gineer.bogglesolver.Solver  - Found: IMA
2234 [main] INFO gineer.bogglesolver.Solver  - Found: ELI
2234 [main] INFO gineer.bogglesolver.Solver  - Found: ELM
2234 [main] INFO gineer.bogglesolver.Solver  - Found: ELB
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AXIL
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AXILE
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AXLE
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AMI
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AMIL
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AMLI
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AME
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AMBLE
2234 [main] INFO gineer.bogglesolver.Solver  - Found: AMBO
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AES
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWEST
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MIX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MIL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MILE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MILO
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MAX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MAE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MAW
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MEW
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MEWL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MES
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MESA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: MWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIMA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIMAX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIME
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIMES
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIMB
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIMBO
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LIMBU
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LEI
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LEO
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LOB
2250 [main] INFO gineer.bogglesolver.Solver  - Found: LOX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: OIME
2250 [main] INFO gineer.bogglesolver.Solver  - Found: OIL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: OLE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: OLM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: EMIL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: EMBOLE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: EMBOX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: EAST
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAF
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAME
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAMBLE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WEA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WEAM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WEM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WEA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WES
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WEST
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAS
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WASE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: WAST
2250 [main] INFO gineer.bogglesolver.Solver  - Found: BLEO
2250 [main] INFO gineer.bogglesolver.Solver  - Found: BLO
2250 [main] INFO gineer.bogglesolver.Solver  - Found: BOIL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: BOLE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: BUT
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AES
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWL
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AWEST
2250 [main] INFO gineer.bogglesolver.Solver  - Found: ASE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: ASEM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: AST
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEAX
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEAM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEMI
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEMBLE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEW
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SEA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SWAM
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SWAMI
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SAW
2250 [main] INFO gineer.bogglesolver.Solver  - Found: SAWT
2250 [main] INFO gineer.bogglesolver.Solver  - Found: STU
2250 [main] INFO gineer.bogglesolver.Solver  - Found: STUB
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TWAE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TWA
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TWAE
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TWAS
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TUB
2250 [main] INFO gineer.bogglesolver.Solver  - Found: TUX
</code></pre>

<p>Source code consists of 6 classes.  I'll post them below (if this is not the right practice on StackOverflow, please tell me).</p>

<h3>gineer.bogglesolver.Main</h3>

<pre><code>package gineer.bogglesolver;

import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Logger;

public class Main
{
    private final static Logger logger = Logger.getLogger(Main.class);

    public static void main(String[] args)
    {
        BasicConfigurator.configure();

        Solver solver = new Solver(4,
                        "FXIE" +
                        "AMLO" +
                        "EWBX" +
                        "ASTU");
        solver.solve();

    }
}
</code></pre>

<h3>gineer.bogglesolver.Solver</h3>

<pre><code>package gineer.bogglesolver;

import gineer.bogglesolver.trie.Trie;
import gineer.bogglesolver.util.Constants;
import gineer.bogglesolver.util.Util;
import org.apache.log4j.Logger;

public class Solver
{
    private char[] puzzle;
    private int maxSize;

    private boolean[] used;
    private StringBuilder stringSoFar;

    private boolean[][] matrix;
    private Trie trie;

    private final static Logger logger = Logger.getLogger(Solver.class);

    public Solver(int size, String puzzle)
    {
        trie = Util.getTrie(size);
        matrix = Util.connectivityMatrix(size);

        maxSize = size * size;
        stringSoFar = new StringBuilder(maxSize);
        used = new boolean[maxSize];

        if (puzzle.length() == maxSize)
        {
            this.puzzle = puzzle.toCharArray();
        }
        else
        {
            logger.error("The puzzle size does not match the size specified: " + puzzle.length());
            this.puzzle = puzzle.substring(0, maxSize).toCharArray();
        }
    }

    public void solve()
    {
        for (int i = 0; i &lt; maxSize; i++)
        {
            traverseAt(i);
        }
    }

    private void traverseAt(int origin)
    {
        stringSoFar.append(puzzle[origin]);
        used[origin] = true;

        //Check if we have a valid word
        if ((stringSoFar.length() &gt;= Constants.MINIMUM_WORD_LENGTH) &amp;&amp; (trie.containKey(stringSoFar.toString())))
        {
            logger.info("Found: " + stringSoFar.toString());
        }

        //Find where to go next
        for (int destination = 0; destination &lt; maxSize; destination++)
        {
            if (matrix[origin][destination] &amp;&amp; !used[destination] &amp;&amp; trie.containPrefix(stringSoFar.toString() + puzzle[destination]))
            {
                traverseAt(destination);
            }
        }

        used[origin] = false;
        stringSoFar.deleteCharAt(stringSoFar.length() - 1);
    }

}
</code></pre>

<h3>gineer.bogglesolver.trie.Node</h3>

<pre><code>package gineer.bogglesolver.trie;

import gineer.bogglesolver.util.Constants;

class Node
{
    Node[] children;
    boolean isKey;

    public Node()
    {
        isKey = false;
        children = new Node[Constants.NUMBER_LETTERS_IN_ALPHABET];
    }

    public Node(boolean key)
    {
        isKey = key;
        children = new Node[Constants.NUMBER_LETTERS_IN_ALPHABET];
    }

    /**
     Method to insert a string to Node and its children

     @param key the string to insert (the string is assumed to be uppercase)
     @return true if the node or one of its children is changed, false otherwise
     */
    public boolean insert(String key)
    {
        //If the key is empty, this node is a key
        if (key.length() == 0)
        {
            if (isKey)
                return false;
            else
            {
                isKey = true;
                return true;
            }
        }
        else
        {//otherwise, insert in one of its child

            int childNodePosition = key.charAt(0) - Constants.LETTER_A;
            if (children[childNodePosition] == null)
            {
                children[childNodePosition] = new Node();
                children[childNodePosition].insert(key.substring(1));
                return true;
            }
            else
            {
                return children[childNodePosition].insert(key.substring(1));
            }
        }
    }

    /**
     Returns whether key is a valid prefix for certain key in this trie.
     For example: if key "hello" is in this trie, tests with all prefixes "hel", "hell", "hello" return true

     @param prefix the prefix to check
     @return true if the prefix is valid, false otherwise
     */
    public boolean containPrefix(String prefix)
    {
        //If the prefix is empty, return true
        if (prefix.length() == 0)
        {
            return true;
        }
        else
        {//otherwise, check in one of its child
            int childNodePosition = prefix.charAt(0) - Constants.LETTER_A;
            return children[childNodePosition] != null &amp;&amp; children[childNodePosition].containPrefix(prefix.substring(1));
        }
    }

    /**
     Returns whether key is a valid key in this trie.
     For example: if key "hello" is in this trie, tests with all prefixes "hel", "hell" return false

     @param key the key to check
     @return true if the key is valid, false otherwise
     */
    public boolean containKey(String key)
    {
        //If the prefix is empty, return true
        if (key.length() == 0)
        {
            return isKey;
        }
        else
        {//otherwise, check in one of its child
            int childNodePosition = key.charAt(0) - Constants.LETTER_A;
            return children[childNodePosition] != null &amp;&amp; children[childNodePosition].containKey(key.substring(1));
        }
    }

    public boolean isKey()
    {
        return isKey;
    }

    public void setKey(boolean key)
    {
        isKey = key;
    }
}
</code></pre>

<h3>gineer.bogglesolver.trie.Trie</h3>

<pre><code>package gineer.bogglesolver.trie;

public class Trie
{
    Node root;

    public Trie()
    {
        this.root = new Node();
    }

    /**
     Method to insert a string to Node and its children

     @param key the string to insert (the string is assumed to be uppercase)
     @return true if the node or one of its children is changed, false otherwise
     */
    public boolean insert(String key)
    {
        return root.insert(key.toUpperCase());
    }

    /**
     Returns whether key is a valid prefix for certain key in this trie.
     For example: if key "hello" is in this trie, tests with all prefixes "hel", "hell", "hello" return true

     @param prefix the prefix to check
     @return true if the prefix is valid, false otherwise
     */
    public boolean containPrefix(String prefix)
    {
        return root.containPrefix(prefix.toUpperCase());
    }

    /**
     Returns whether key is a valid key in this trie.
     For example: if key "hello" is in this trie, tests with all prefixes "hel", "hell" return false

     @param key the key to check
     @return true if the key is valid, false otherwise
     */
    public boolean containKey(String key)
    {
        return root.containKey(key.toUpperCase());
    }


}
</code></pre>

<h3>gineer.bogglesolver.util.Constants</h3>

<pre><code>package gineer.bogglesolver.util;

public class Constants
{

    public static final int NUMBER_LETTERS_IN_ALPHABET = 26;
    public static final char LETTER_A = 'A';
    public static final int MINIMUM_WORD_LENGTH = 3;
    public static final int DEFAULT_PUZZLE_SIZE = 4;
}
</code></pre>

<h3>gineer.bogglesolver.util.Util</h3>

<pre><code>package gineer.bogglesolver.util;

import gineer.bogglesolver.trie.Trie;
import org.apache.log4j.Logger;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Util
{
    private final static Logger logger = Logger.getLogger(Util.class);
    private static Trie trie;
    private static int size = Constants.DEFAULT_PUZZLE_SIZE;

    /**
     Returns the trie built from the dictionary.  The size is used to eliminate words that are too long.

     @param size the size of puzzle.  The maximum lenght of words in the returned trie is (size * size)
     @return the trie that can be used for puzzle of that size
     */
    public static Trie getTrie(int size)
    {
        if ((trie != null) &amp;&amp; size == Util.size)
            return trie;

        trie = new Trie();
        Util.size = size;

        logger.info("Reading the dictionary");
        final File file = new File("dictionary.txt");
        try
        {
            Scanner scanner = new Scanner(file);
            final int maxSize = size * size;
            while (scanner.hasNext())
            {
                String line = scanner.nextLine().replaceAll("[^\\p{Alpha}]", "");

                if (line.length() &lt;= maxSize)
                    trie.insert(line);
            }
        }
        catch (FileNotFoundException e)
        {
            logger.error("Cannot open file", e);
        }

        logger.info("Finish reading the dictionary");
        return trie;
    }

    static boolean[] connectivityRow(int x, int y, int size)
    {
        boolean[] squares = new boolean[size * size];
        for (int offsetX = -1; offsetX &lt;= 1; offsetX++)
        {
            for (int offsetY = -1; offsetY &lt;= 1; offsetY++)
            {
                final int calX = x + offsetX;
                final int calY = y + offsetY;
                if ((calX &gt;= 0) &amp;&amp; (calX &lt; size) &amp;&amp; (calY &gt;= 0) &amp;&amp; (calY &lt; size))
                    squares[calY * size + calX] = true;
            }
        }

        squares[y * size + x] = false;//the current x, y is false

        return squares;
    }

    /**
     Returns the matrix of connectivity between two points.  Point i can go to point j iff matrix[i][j] is true
     Square (x, y) is equivalent to point (size * y + x).  For example, square (1,1) is point 5 in a puzzle of size 4

     @param size the size of the puzzle
     @return the connectivity matrix
     */
    public static boolean[][] connectivityMatrix(int size)
    {
        boolean[][] matrix = new boolean[size * size][];
        for (int x = 0; x &lt; size; x++)
        {
            for (int y = 0; y &lt; size; y++)
            {
                matrix[y * size + x] = connectivityRow(x, y, size);
            }
        }
        return matrix;
    }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/1067067" title="short permalink to this answer" class="short-link" id="link-post-1067067">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/1067067/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/1067067/revisions" title="show all edits to this post">edited <span title="2009-07-01 03:03:12Z" class="relativetime">Jul 1 '09 at 3:03</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Jul 1 &#39;09 at 2:52. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1067067" href="http://stackoverflow.com/posts/1067067/revisions" title="show revision history for this post">
        3 revs, 2 users 72%<br></a><a href="http://stackoverflow.com/users/114987">gineer</a>

        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1067067" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-879341" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Indent code 4 spaces to show it as code</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment879341_1067067"><span title="2009-07-01 02:58:34Z" class="relativetime-clean">Jul 1 '09 at 2:58</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-880070" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I was comparing my output with outputs from other StackOverflowers, and it seems Adam, John, and rvarcher's outputs were missing some words.  For example, "Mwa" is in the dictionary (yeah!), but it is not returned in outputs from Adam, John, and rvarcher.  It is returned twice in Paolo's PHP link.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/114987/gineer" title="33 reputation" class="comment-user">gineer</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment880070_1067067"><span title="2009-07-01 08:04:02Z" class="relativetime-clean">Jul 1 '09 at 8:04</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-18194515" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I tried this one by copy pasting it. It says "Reading..." and "Finish reading...", but nothing appears after that. No matches are displayed.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1279334/mikkop" title="826 reputation" class="comment-user">MikkoP</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment18194515_1067067"><span title="2012-11-11 19:02:26Z" class="relativetime-clean">Nov 11 '12 at 19:02</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-1067067" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="757165"></a>
<div id="answer-757165" class="answer" data-answerid="757165" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="757165">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">17</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Surprisingly, no one attempted a PHP version of this.</p>

<p>This is a working PHP version of <a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#746345">John Fouhy</a>'s Python solution.</p>

<p>Although I took some pointers from everyone else's answers, this is mostly copied from John. </p>

<pre><code>$boggle = "fxie
           amlo
           ewbx
           astu";

$alphabet = str_split(str_replace(array("\n", " ", "\r"), "", strtolower($boggle)));
$rows = array_map('trim', explode("\n", $boggle));
$dictionary = file("C:/dict.txt");
$prefixes = array(''=&gt;'');
$words = array();
$regex = '/[' . implode('', $alphabet) . ']{3,}$/S';
foreach($dictionary as $k=&gt;$value) {
    $value = trim(strtolower($value));
    $length = strlen($value);
    if(preg_match($regex, $value)) {
        for($x = 0; $x &lt; $length; $x++) {
            $letter = substr($value, 0, $x+1);
            if($letter == $value) {
                $words[$value] = 1;
            } else {
                $prefixes[$letter] = 1;
            }
        }
    }
}

$graph = array();
$chardict = array();
$positions = array();
$c = count($rows);
for($i = 0; $i &lt; $c; $i++) {
    $l = strlen($rows[$i]);
    for($j = 0; $j &lt; $l; $j++) {
        $chardict[$i.','.$j] = $rows[$i][$j];
        $children = array();
        $pos = array(-1,0,1);
        foreach($pos as $z) {
            $xCoord = $z + $i;
            if($xCoord &lt; 0 || $xCoord &gt;= count($rows)) {
                continue;
            }
            $len = strlen($rows[0]);
            foreach($pos as $w) {
                $yCoord = $j + $w;
                if(($yCoord &lt; 0 || $yCoord &gt;= $len) || ($z == 0 &amp;&amp; $w == 0)) {
                    continue;
                }
                $children[] = array($xCoord, $yCoord);
            }
        }
        $graph['None'][] = array($i, $j);
        $graph[$i.','.$j] = $children;
    }
}

function to_word($chardict, $prefix) {
    $word = array();
    foreach($prefix as $v) {
        $word[] = $chardict[$v[0].','.$v[1]];
    }
    return implode("", $word);
}

function find_words($graph, $chardict, $position, $prefix, $prefixes, &amp;$results, $words) {
    $word = to_word($chardict, $prefix);
    if(!isset($prefixes[$word])) return false;

    if(isset($words[$word])) {
        $results[] = $word;
    }

    foreach($graph[$position] as $child) {
        if(!in_array($child, $prefix)) {
            $newprefix = $prefix;
            $newprefix[] = $child;
            find_words($graph, $chardict, $child[0].','.$child[1], $newprefix, $prefixes, $results, $words);
        }
    }
}

$solution = array();
find_words($graph, $chardict, 'None', array(), $prefixes, $solution);
print_r($solution);
</code></pre>

<p>Here is a <a href="http://www.rootspot.com/stackoverflow/boggle.php">live link</a> if you want to try it out. Although it takes ~2s in my local machine, it takes ~5s on my webserver. In either case, it is not very fast.  Still, though, it is quite hideous so I can imagine the time can be reduced significantly. Any pointers on how to accomplish that would be appreciated. PHP's lack of tuples made the coordinates weird to work with and my inability to comprehend just what the hell is going on didn't help at all.</p>

<p><strong>EDIT</strong>: A few fixes make it take less than 1s locally.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/757165" title="short permalink to this answer" class="short-link" id="link-post-757165">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/757165/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/757165/revisions" title="show all edits to this post">edited <span title="2009-07-03 22:14:10Z" class="relativetime">Jul 3 '09 at 22:14</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-04-16 17:20:12Z" class="relativetime">Apr 16 '09 at 17:20</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/16417/paolo-bergantino"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/80ae8ec34e9e3e66c5be50733afaa44e" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/16417/paolo-bergantino">Paolo Bergantino</a><br>
        <span class="reputation-score" title="reputation score 202265" dir="ltr">202k</span><span title="50 gold badges"><span class="badge1"></span><span class="badgecount">50</span></span><span title="395 silver badges"><span class="badge2"></span><span class="badgecount">395</span></span><span title="381 bronze badges"><span class="badge3"></span><span class="badgecount">381</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-757165" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="14" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-569928" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">+1 @ "and my inability to comprehend just what the hell is going on didn't help at all." lol. I love honesty!</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/32540/dna123" title="258 reputation" class="comment-user">dna123</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment569928_757165"><span title="2009-04-16 21:45:24Z" class="relativetime-clean">Apr 16 '09 at 21:45</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-571199" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I don't know PHP, but the first thing I'd try is hoisting '/[' . implode('', $alphabet) . ']{3,}$/' out of the loop. That is, set a variable to that and use the variable instead inside the loop.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/27024/darius-bacon" title="9801 reputation" class="comment-user">Darius Bacon</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment571199_757165"><span title="2009-04-17 06:32:14Z" class="relativetime-clean">Apr 17 '09 at 6:32</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-572552" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I'm pretty sure that PHP keeps a per-thread global cache of compiled regular expressions, but I'll try that anyways.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment572552_757165"><span title="2009-04-17 14:50:24Z" class="relativetime-clean">Apr 17 '09 at 14:50</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-894118" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@Daniel: Apparently it's my web server. It doesn't happen when I run locally. Shrug. Don't really feel like hunting it down.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment894118_757165"><span title="2009-07-03 22:14:55Z" class="relativetime-clean">Jul 3 '09 at 22:14</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-18279385" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">What should be set as the 7. parameter in the find_words function in the end?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1279334/mikkop" title="826 reputation" class="comment-user">MikkoP</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment18279385_757165"><span title="2012-11-14 17:58:07Z" class="relativetime-clean">Nov 14 '12 at 17:58</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-757165" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>14</b> more comments</a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="750722"></a>
<div id="answer-750722" class="answer" data-answerid="750722" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="750722">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">14</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Not interested in VB? :) I couldn't resist. I've solved this differently than many of the solutions presented here.</p>

<p>My times are:</p>

<ul>
<li>Loading the dictionary and word prefixes into a hashtable: .5 to 1 seconds.</li>
<li>Finding the words: averaging under 10 milliseconds.</li>
</ul>

<p>EDIT: Dictionary load times on the web host server are running about 1 to 1.5 seconds longer than my home computer.</p>

<p>I don't know how badly the times will deteriorate with a load on the server.</p>

<p>I wrote my solution as a web page in .Net. <a href="http://www.myvrad.com/boggle/default.aspx">myvrad.com/boggle</a></p>

<p>I'm using the dictionary referenced in the original question.</p>

<p>Letters are not reused in a word. Only words 3 characters or longer are found.</p>

<p>I'm using a hashtable of all unique word prefixes and words instead of a trie. I didn't know about trie's so I learned something there. The idea of creating a list of prefixes of words in addition to the complete words is what finally got my times down to a respectable number.</p>

<p>Read the code comments for additional details.</p>

<p>Here's the code:</p>

<pre><code>Imports System.Collections.Generic
Imports System.IO

Partial Class boggle_Default

    'Bob Archer, 4/15/2009

    'To avoid using a 2 dimensional array in VB I'm not using typical X,Y
    'coordinate iteration to find paths.
    '
    'I have locked the code into a 4 by 4 grid laid out like so:
    ' abcd
    ' efgh
    ' ijkl
    ' mnop
    ' 
    'To find paths the code starts with a letter from a to p then
    'explores the paths available around it. If a neighboring letter
    'already exists in the path then we don't go there.
    '
    'Neighboring letters (grid points) are hard coded into
    'a Generic.Dictionary below.



    'Paths is a list of only valid Paths found. 
    'If a word prefix or word is not found the path is not
    'added and extending that path is terminated.
    Dim Paths As New Generic.List(Of String)

    'NeighborsOf. The keys are the letters a to p.
    'The value is a string of letters representing neighboring letters.
    'The string of neighboring letters is split and iterated later.
    Dim NeigborsOf As New Generic.Dictionary(Of String, String)

    'BoggleLetters. The keys are mapped to the lettered grid of a to p.
    'The values are what the user inputs on the page.
    Dim BoggleLetters As New Generic.Dictionary(Of String, String)

    'Used to store last postition of path. This will be a letter
    'from a to p.
    Dim LastPositionOfPath As String = ""

    'I found a HashTable was by far faster than a Generic.Dictionary 
    ' - about 10 times faster. This stores prefixes of words and words.
    'I determined 792773 was the number of words and unique prefixes that
    'will be generated from the dictionary file. This is a max number and
    'the final hashtable will not have that many.
    Dim HashTableOfPrefixesAndWords As New Hashtable(792773)

    'Stores words that are found.
    Dim FoundWords As New Generic.List(Of String)

    'Just to validate what the user enters in the grid.
    Dim ErrorFoundWithSubmittedLetters As Boolean = False

    Public Sub BuildAndTestPathsAndFindWords(ByVal ThisPath As String)
        'Word is the word correlating to the ThisPath parameter.
        'This path would be a series of letters from a to p.
        Dim Word As String = ""

        'The path is iterated through and a word based on the actual
        'letters in the Boggle grid is assembled.
        For i As Integer = 0 To ThisPath.Length - 1
            Word += Me.BoggleLetters(ThisPath.Substring(i, 1))
        Next

        'If my hashtable of word prefixes and words doesn't contain this Word
        'Then this isn't a word and any further extension of ThisPath will not
        'yield any words either. So exit sub to terminate exploring this path.
        If Not HashTableOfPrefixesAndWords.ContainsKey(Word) Then Exit Sub

        'The value of my hashtable is a boolean representing if the key if a word (true) or
        'just a prefix (false). If true and at least 3 letters long then yay! word found.
        If HashTableOfPrefixesAndWords(Word) AndAlso Word.Length &gt; 2 Then Me.FoundWords.Add(Word)

        'If my List of Paths doesn't contain ThisPath then add it.
        'Remember only valid paths will make it this far. Paths not found
        'in the HashTableOfPrefixesAndWords cause this sub to exit above.
        If Not Paths.Contains(ThisPath) Then Paths.Add(ThisPath)

        'Examine the last letter of ThisPath. We are looking to extend the path
        'to our neighboring letters if any are still available.
        LastPositionOfPath = ThisPath.Substring(ThisPath.Length - 1, 1)

        'Loop through my list of neighboring letters (representing grid points).
        For Each Neighbor As String In Me.NeigborsOf(LastPositionOfPath).ToCharArray()
            'If I find a neighboring grid point that I haven't already used
            'in ThisPath then extend ThisPath and feed the new path into
            'this recursive function. (see recursive.)
            If Not ThisPath.Contains(Neighbor) Then Me.BuildAndTestPathsAndFindWords(ThisPath &amp; Neighbor)
        Next
    End Sub

    Protected Sub ButtonBoggle_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles ButtonBoggle.Click

        'User has entered the 16 letters and clicked the go button.

        'Set up my Generic.Dictionary of grid points, I'm using letters a to p -
        'not an x,y grid system.  The values are neighboring points.
        NeigborsOf.Add("a", "bfe")
        NeigborsOf.Add("b", "cgfea")
        NeigborsOf.Add("c", "dhgfb")
        NeigborsOf.Add("d", "hgc")
        NeigborsOf.Add("e", "abfji")
        NeigborsOf.Add("f", "abcgkjie")
        NeigborsOf.Add("g", "bcdhlkjf")
        NeigborsOf.Add("h", "cdlkg")
        NeigborsOf.Add("i", "efjnm")
        NeigborsOf.Add("j", "efgkonmi")
        NeigborsOf.Add("k", "fghlponj")
        NeigborsOf.Add("l", "ghpok")
        NeigborsOf.Add("m", "ijn")
        NeigborsOf.Add("n", "ijkom")
        NeigborsOf.Add("o", "jklpn")
        NeigborsOf.Add("p", "klo")

        'Retrieve letters the user entered.
        BoggleLetters.Add("a", Me.TextBox1.Text.ToLower.Trim())
        BoggleLetters.Add("b", Me.TextBox2.Text.ToLower.Trim())
        BoggleLetters.Add("c", Me.TextBox3.Text.ToLower.Trim())
        BoggleLetters.Add("d", Me.TextBox4.Text.ToLower.Trim())
        BoggleLetters.Add("e", Me.TextBox5.Text.ToLower.Trim())
        BoggleLetters.Add("f", Me.TextBox6.Text.ToLower.Trim())
        BoggleLetters.Add("g", Me.TextBox7.Text.ToLower.Trim())
        BoggleLetters.Add("h", Me.TextBox8.Text.ToLower.Trim())
        BoggleLetters.Add("i", Me.TextBox9.Text.ToLower.Trim())
        BoggleLetters.Add("j", Me.TextBox10.Text.ToLower.Trim())
        BoggleLetters.Add("k", Me.TextBox11.Text.ToLower.Trim())
        BoggleLetters.Add("l", Me.TextBox12.Text.ToLower.Trim())
        BoggleLetters.Add("m", Me.TextBox13.Text.ToLower.Trim())
        BoggleLetters.Add("n", Me.TextBox14.Text.ToLower.Trim())
        BoggleLetters.Add("o", Me.TextBox15.Text.ToLower.Trim())
        BoggleLetters.Add("p", Me.TextBox16.Text.ToLower.Trim())

        'Validate user entered something with a length of 1 for all 16 textboxes.
        For Each S As String In BoggleLetters.Keys
            If BoggleLetters(S).Length &lt;&gt; 1 Then
                ErrorFoundWithSubmittedLetters = True
                Exit For
            End If
        Next

        'If input is not valid then...
        If ErrorFoundWithSubmittedLetters Then
            'Present error message.
        Else
            'Else assume we have 16 letters to work with and start finding words.
            Dim SB As New StringBuilder

            Dim Time As String = String.Format("{0}:{1}:{2}:{3}", Date.Now.Hour.ToString(), Date.Now.Minute.ToString(), Date.Now.Second.ToString(), Date.Now.Millisecond.ToString())

            Dim NumOfLetters As Integer = 0
            Dim Word As String = ""
            Dim TempWord As String = ""
            Dim Letter As String = ""
            Dim fr As StreamReader = Nothing
            fr = New System.IO.StreamReader(HttpContext.Current.Request.MapPath("~/boggle/dic.txt"))

            'First fill my hashtable with word prefixes and words.
            'HashTable(PrefixOrWordString, BooleanTrueIfWordFalseIfPrefix)
            While fr.Peek &lt;&gt; -1
                Word = fr.ReadLine.Trim()
                TempWord = ""
                For i As Integer = 0 To Word.Length - 1
                    Letter = Word.Substring(i, 1)
                    'This optimization helped quite a bit. Words in the dictionary that begin
                    'with letters that the user did not enter in the grid shouldn't go in my hashtable.
                    '
                    'I realize most of the solutions went with a Trie. I'd never heard of that before,
                    'which is one of the neat things about SO, seeing how others approach challenges
                    'and learning some best practices.
                    '
                    'However, I didn't code a Trie in my solution. I just have a hashtable with 
                    'all words in the dicitonary file and all possible prefixes for those words.
                    'A Trie might be faster but I'm not coding it now. I'm getting good times with this.
                    If i = 0 AndAlso Not BoggleLetters.ContainsValue(Letter) Then Continue While
                    TempWord += Letter
                    If Not HashTableOfPrefixesAndWords.ContainsKey(TempWord) Then
                        HashTableOfPrefixesAndWords.Add(TempWord, TempWord = Word)
                    End If
                Next
            End While

            SB.Append("Number of Word Prefixes and Words in Hashtable: " &amp; HashTableOfPrefixesAndWords.Count.ToString())
            SB.Append("&lt;br /&gt;")

            SB.Append("Loading Dictionary: " &amp; Time &amp; " - " &amp; String.Format("{0}:{1}:{2}:{3}", Date.Now.Hour.ToString(), Date.Now.Minute.ToString(), Date.Now.Second.ToString(), Date.Now.Millisecond.ToString()))
            SB.Append("&lt;br /&gt;")

            Time = String.Format("{0}:{1}:{2}:{3}", Date.Now.Hour.ToString(), Date.Now.Minute.ToString(), Date.Now.Second.ToString(), Date.Now.Millisecond.ToString())

            'This starts a path at each point on the grid an builds a path until 
            'the string of letters correlating to the path is not found in the hashtable
            'of word prefixes and words.
            Me.BuildAndTestPathsAndFindWords("a")
            Me.BuildAndTestPathsAndFindWords("b")
            Me.BuildAndTestPathsAndFindWords("c")
            Me.BuildAndTestPathsAndFindWords("d")
            Me.BuildAndTestPathsAndFindWords("e")
            Me.BuildAndTestPathsAndFindWords("f")
            Me.BuildAndTestPathsAndFindWords("g")
            Me.BuildAndTestPathsAndFindWords("h")
            Me.BuildAndTestPathsAndFindWords("i")
            Me.BuildAndTestPathsAndFindWords("j")
            Me.BuildAndTestPathsAndFindWords("k")
            Me.BuildAndTestPathsAndFindWords("l")
            Me.BuildAndTestPathsAndFindWords("m")
            Me.BuildAndTestPathsAndFindWords("n")
            Me.BuildAndTestPathsAndFindWords("o")
            Me.BuildAndTestPathsAndFindWords("p")

            SB.Append("Finding Words: " &amp; Time &amp; " - " &amp; String.Format("{0}:{1}:{2}:{3}", Date.Now.Hour.ToString(), Date.Now.Minute.ToString(), Date.Now.Second.ToString(), Date.Now.Millisecond.ToString()))
            SB.Append("&lt;br /&gt;")

            SB.Append("Num of words found: " &amp; FoundWords.Count.ToString())
            SB.Append("&lt;br /&gt;")
            SB.Append("&lt;br /&gt;")

            FoundWords.Sort()
            SB.Append(String.Join("&lt;br /&gt;", FoundWords.ToArray()))

            'Output results.
            Me.LiteralBoggleResults.Text = SB.ToString()
            Me.PanelBoggleResults.Visible = True

        End If

    End Sub

End Class
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/750722" title="short permalink to this answer" class="short-link" id="link-post-750722">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/750722/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/750722/revisions" title="show all edits to this post">edited <span title="2009-04-15 08:14:01Z" class="relativetime">Apr 15 '09 at 8:14</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2009-04-15 08:02:46Z" class="relativetime">Apr 15 '09 at 8:02</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/22828/rvarcher"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/0c7487b5f106838e58fa8f40d2ac5e0e" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/22828/rvarcher">rvarcher</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">1,029</span><span title="8 silver badges"><span class="badge2"></span><span class="badgecount">8</span></span><span title="11 bronze badges"><span class="badge3"></span><span class="badgecount">11</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-750722" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-562759" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Oooh, VB. Very nice.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment562759_750722"><span title="2009-04-15 12:36:52Z" class="relativetime-clean">Apr 15 '09 at 12:36</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-567276" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I'm going to assume here you used the a-p system instead of [x][y] because the latter is rather complex in VB? I spent a day trying to get a 2-way-dynamic array in that once, ie: array( array( 1, "hello"), 1, "hello" , array() ) , still don't know how to do that :P</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment567276_750722"><span title="2009-04-16 12:39:56Z" class="relativetime-clean">Apr 16 '09 at 12:39</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-567897" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">In PHP and Perl 2 dim arrays are fun. It can be done in VB but I wouldn't call it a fun process. Dim Arr(, ) As Integer = {{1,1},{0,0}}. The A-P process grew out of me putting myself on the grid and asking, 'where can I go from here?' I know it's a rigid solution but it works here.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/22828/rvarcher" title="1029 reputation" class="comment-user">rvarcher</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment567897_750722"><span title="2009-04-16 15:00:21Z" class="relativetime-clean">Apr 16 '09 at 15:00</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-750722" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="1047525"></a>
<div id="answer-1047525" class="answer" data-answerid="1047525" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1047525">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">11</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>As soon as I saw the problem statement, I thought "Trie". But seeing as several other posters made use of that approach, I looked for another approach just to be different. Alas, the Trie approach performs better. I ran Kent's Perl solution on my machine and it took <strong>0.31</strong> seconds to run, after adapting it to use my dictionary file. My own perl implementation required <strong>0.54</strong> seconds to run. <br><br></p>

<p>This was my approach:</p>

<ol>
<li><p>Create a transition hash to model the legal transitions.</p></li>
<li><p>Iterate through all 16^3 possible three letter combinations.</p>

<ul>
<li>In the loop, exclude illegal transitions and repeat visits to the
same square. Form all the legal 3-letter sequences and store them in a hash.</li>
</ul></li>
<li><p>Then loop through all words in the dictionary.</p>

<ul>
<li>Exclude words that are too long or short</li>
<li>Slide a 3-letter window across each word and see if it is among the 3-letter combos from step 2. Exclude words that fail. This eliminates most non-matches.</li>
<li>If still not eliminated, use a recursive algorithm to see if the word can be formed by making paths through the puzzle. (This part is slow, but called infrequently.)</li>
</ul></li>
<li><p>Print out the words I found.</p>

<p>I tried 3-letter and 4-letter sequences, but 4-letter sequences slowed the program down.</p></li>
</ol>

<p>In my code, I use /usr/share/dict/words for my dictionary. It comes standard on MAC OS X and many Unix systems. You can use another file if you want. To crack a different puzzle, just change the variable @puzzle. This would be easy to adapt for larger matrices. You would just need to change the %transitions hash and %legalTransitions hash. <br><br></p>

<p>The strength of this solution is that the code is short, and the data structures simple.</p>

<p>Here is the Perl code (which uses too many global variables, I know):</p>

<pre><code>#!/usr/bin/perl
use Time::HiRes  qw{ time };

sub readFile($);
sub findAllPrefixes($);
sub isWordTraceable($);
sub findWordsInPuzzle(@);

my $startTime = time;

# Puzzle to solve

my @puzzle = ( 
    F, X, I, E,
    A, M, L, O,
    E, W, B, X,
    A, S, T, U
);

my $minimumWordLength = 3;
my $maximumPrefixLength = 3; # I tried four and it slowed down.

# Slurp the word list.
my $wordlistFile = "/usr/share/dict/words";

my @words = split(/\n/, uc(readFile($wordlistFile)));
print "Words loaded from word list: " . scalar @words . "\n";

print "Word file load time: " . (time - $startTime) . "\n";
my $postLoad = time;

# Define the legal transitions from one letter position to another. 
# Positions are numbered 0-15.
#     0  1  2  3
#     4  5  6  7
#     8  9 10 11
#    12 13 14 15
my %transitions = ( 
   -1 =&gt; [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],
    0 =&gt; [1,4,5], 
    1 =&gt; [0,2,4,5,6],
    2 =&gt; [1,3,5,6,7],
    3 =&gt; [2,6,7],
    4 =&gt; [0,1,5,8,9],
    5 =&gt; [0,1,2,4,6,8,9,10],
    6 =&gt; [1,2,3,5,7,9,10,11],
    7 =&gt; [2,3,6,10,11],
    8 =&gt; [4,5,9,12,13],
    9 =&gt; [4,5,6,8,10,12,13,14],
    10 =&gt; [5,6,7,9,11,13,14,15],
    11 =&gt; [6,7,10,14,15],
    12 =&gt; [8,9,13],
    13 =&gt; [8,9,10,12,14],
    14 =&gt; [9,10,11,13,15],
    15 =&gt; [10,11,14]
);

# Convert the transition matrix into a hash for easy access.
my %legalTransitions = ();
foreach my $start (keys %transitions) {
    my $legalRef = $transitions{$start};
    foreach my $stop (@$legalRef) {
    	my $index = ($start + 1) * (scalar @puzzle) + ($stop + 1);
    	$legalTransitions{$index} = 1;
    }
}

my %prefixesInPuzzle = findAllPrefixes($maximumPrefixLength);

print "Find prefixes time: " . (time - $postLoad) . "\n";
my $postPrefix = time;

my @wordsFoundInPuzzle = findWordsInPuzzle(@words);

print "Find words in puzzle time: " . (time - $postPrefix) . "\n";

print "Unique prefixes found: " . (scalar keys %prefixesInPuzzle) . "\n";
print "Words found (" . (scalar @wordsFoundInPuzzle) . ") :\n    " . join("\n    ", @wordsFoundInPuzzle) . "\n";

print "Total Elapsed time: " . (time - $startTime) . "\n";

###########################################

sub readFile($) {
    my ($filename) = @_;
    my $contents;
    if (-e $filename) {
    	# This is magic: it opens and reads a file into a scalar in one line of code. 
    	# See http://www.perl.com/pub/a/2003/11/21/slurp.html
    	$contents = do { local( @ARGV, $/ ) = $filename ; &lt;&gt; } ; 
    }
    else {
    	$contents = '';
    }
    return $contents;
}

# Is it legal to move from the first position to the second? They must be adjacent.
sub isLegalTransition($$) {
    my ($pos1,$pos2) = @_;
    my $index = ($pos1 + 1) * (scalar @puzzle) + ($pos2 + 1);
    return $legalTransitions{$index};
}

# Find all prefixes where $minimumWordLength &lt;= length &lt;= $maxPrefixLength
#
#   $maxPrefixLength ... Maximum length of prefix we will store. Three gives best performance. 
sub findAllPrefixes($) {
    my ($maxPrefixLength) = @_;
    my %prefixes = ();
    my $puzzleSize = scalar @puzzle;

    # Every possible N-letter combination of the letters in the puzzle 
    # can be represented as an integer, though many of those combinations
    # involve illegal transitions, duplicated letters, etc.
    # Iterate through all those possibilities and eliminate the illegal ones.
    my $maxIndex = $puzzleSize ** $maxPrefixLength;

    for (my $i = 0; $i &lt; $maxIndex; $i++) {
    	my @path;
    	my $remainder = $i;
    	my $prevPosition = -1;
    	my $prefix = '';
    	my %usedPositions = ();
    	for (my $prefixLength = 1; $prefixLength &lt;= $maxPrefixLength; $prefixLength++) {
    		my $position = $remainder % $puzzleSize;

    		# Is this a valid step?
    		#  a. Is the transition legal (to an adjacent square)?
    		if (! isLegalTransition($prevPosition, $position)) {
    			last;
    		}

    		#  b. Have we repeated a square?
    		if ($usedPositions{$position}) {
    			last;
    		}
    		else {
    			$usedPositions{$position} = 1;
    		}

    		# Record this prefix if length &gt;= $minimumWordLength.
    		$prefix .= $puzzle[$position];
    		if ($prefixLength &gt;= $minimumWordLength) {
    			$prefixes{$prefix} = 1;
    		}

    		push @path, $position;
    		$remainder -= $position;
    		$remainder /= $puzzleSize;
    		$prevPosition = $position;
    	} # end inner for
    } # end outer for
    return %prefixes;
}

# Loop through all words in dictionary, looking for ones that are in the puzzle.
sub findWordsInPuzzle(@) {
    my @allWords = @_;
    my @wordsFound = ();
    my $puzzleSize = scalar @puzzle;
WORD: foreach my $word (@allWords) {
    	my $wordLength = length($word);
    	if ($wordLength &gt; $puzzleSize || $wordLength &lt; $minimumWordLength) {
    		# Reject word as too short or too long.
    	}
    	elsif ($wordLength &lt;= $maximumPrefixLength ) {
    		# Word should be in the prefix hash.
    		if ($prefixesInPuzzle{$word}) {
    			push @wordsFound, $word;
    		}
    	}
    	else {
    		# Scan through the word using a window of length $maximumPrefixLength, looking for any strings not in our prefix list.
    		# If any are found that are not in the list, this word is not possible.
    		# If no non-matches are found, we have more work to do.
    		my $limit = $wordLength - $maximumPrefixLength + 1;
    		for (my $startIndex = 0; $startIndex &lt; $limit; $startIndex ++) {
    			if (! $prefixesInPuzzle{substr($word, $startIndex, $maximumPrefixLength)}) {
    				next WORD;
    			}
    		}
    		if (isWordTraceable($word)) {
    			# Additional test necessary: see if we can form this word by following legal transitions
    			push @wordsFound, $word;
    		}
    	}

    }
    return @wordsFound;
}

# Is it possible to trace out the word using only legal transitions?
sub isWordTraceable($) {
    my $word = shift;
    return traverse([split(//, $word)], [-1]); # Start at special square -1, which may transition to any square in the puzzle.
}

# Recursively look for a path through the puzzle that matches the word.
sub traverse($$) {
    my ($lettersRef, $pathRef) = @_;
    my $index = scalar @$pathRef - 1;
    my $position = $pathRef-&gt;[$index];
    my $letter = $lettersRef-&gt;[$index];
    my $branchesRef =  $transitions{$position};
BRANCH: foreach my $branch (@$branchesRef) {
    		if ($puzzle[$branch] eq $letter) {
    			# Have we used this position yet?
    			foreach my $usedBranch (@$pathRef) {
    				if ($usedBranch == $branch) {
    					next BRANCH;
    				}
    			}
    			if (scalar @$lettersRef == $index + 1) {
    				return 1; # End of word and success.
    			}
    			push @$pathRef, $branch;
    			if (traverse($lettersRef, $pathRef)) {
    				return 1; # Recursive success.
    			}
    			else {
    				pop @$pathRef;
    			}
    		}
    	}
    return 0; # No path found. Failed.
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/1047525" title="short permalink to this answer" class="short-link" id="link-post-1047525">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/1047525/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/1047525/revisions" title="show all edits to this post">edited <span title="2009-06-26 05:43:29Z" class="relativetime">Jun 26 '09 at 5:43</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-06-26 05:37:53Z" class="relativetime">Jun 26 '09 at 5:37</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/127251/paul-chernoch"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/9b6273d6505f5cead55793f95dbe7873" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/127251/paul-chernoch">Paul Chernoch</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">1,631</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="15 silver badges"><span class="badge2"></span><span class="badgecount">15</span></span><span title="31 bronze badges"><span class="badge3"></span><span class="badgecount">31</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1047525" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-1047525" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="13338904"></a>
<div id="answer-13338904" class="answer" data-answerid="13338904" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="13338904">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">11</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


<div class="bounty-award-container"><span class="bounty-award" title="This answer has been awarded bounties worth 25 reputation by Community">+25</span></div></div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I think you will probably spend most of your time trying to match words that can't possibly be built by your letter grid. So, the first thing I would do is try to speed up that step and that should get you most of the way there.</p>

<p>For this, I would re-express the grid as a table of possible "moves" that you index by the letter-transition you are looking at.</p>

<p>Start by assigning each letter a number from your entire alphabet (A=0, B=1, C=2, ... and so forth). </p>

<p>Let's take this example:</p>

<pre><code>h b c d
e e g h
l l k l
m o f p
</code></pre>

<p>And for now, lets use the alphabet of the letters we have (usually you'd probably want to use the same whole alphabet every time):</p>

<pre><code> b | c | d | e | f | g | h | k | l | m |  o |  p
---+---+---+---+---+---+---+---+---+---+----+----
 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11
</code></pre>

<p>Then you make a 2D boolean array that tells whether you have a certain letter transition available:</p>

<pre><code>     |  0  1  2  3  4  5  6  7  8  9 10 11  &lt;- from letter
     |  b  c  d  e  f  g  h  k  l  m  o  p
-----+--------------------------------------
 0 b |     T     T     T  T     
 1 c |  T     T  T     T  T
 2 d |     T           T  T
 3 e |  T  T     T     T  T  T  T
 4 f |                       T  T     T  T
 5 g |  T  T  T  T        T  T  T
 6 h |  T  T  T  T     T     T  T
 7 k |           T  T  T  T     T     T  T
 8 l |           T  T  T  T  T  T  T  T  T
 9 m |                          T     T
10 o |              T        T  T  T
11 p |              T        T  T
 ^
 to letter
</code></pre>

<p>Now go through your word list and convert the words to transitions:</p>

<pre><code>hello (6, 3, 8, 8, 10):
6 -&gt; 3, 3 -&gt; 8, 8 -&gt; 8, 8 -&gt; 10
</code></pre>

<p>Then check if these transitions are allowed by looking them up in your table:</p>

<pre><code>[6][ 3] : T
[3][ 8] : T
[8][ 8] : T
[8][10] : T
</code></pre>

<p>If they are all allowed, there's a chance that this word might be found.</p>

<p>For example the word "helmet" can be ruled out on the 4th transition (m to e: helMEt), since that entry in your table is false.</p>

<p>And the word hamster can be ruled out, since the first (h to a) transition is not allowed (doesn't even exist in your table).</p>

<p>Now, for the probably very few remaining words that you didn't eliminate, try to actually find them in the grid the way you're doing it now or as suggested in some of the other answers here. This is to avoid false positives that result from jumps between identical letters in your grid. For example the word "help" is allowed by the table, but not by the grid.</p>

<p><strong>Some further performance improvement tips on this idea:</strong></p>

<ol>
<li><p>Instead of using a 2D array, use a 1D array and simply compute the index of the second letter yourself. So, instead of a 12x12 array like above, make a 1D array of length 144. If you then always use the same alphabet (i.e. a 26x26 = 676x1 array for the standard english alphabet), even if not all letters show up in your grid, you can pre-compute the indices into this 1D array that you need to test to match your dictionary words. For example, the indices for 'hello' in the example above would be</p>

<pre><code>hello (6, 3, 8, 8, 10):
42 (from 6 + 3x12), 99, 104, 128
-&gt; "hello" will be stored as 42, 99, 104, 128 in the dictionary
</code></pre></li>
<li><p>Extend the idea to a 3D table (expressed as a 1D array), i.e. all allowed 3-letter combinations. That way you can eliminate even more words immediately and you reduce the number of array lookups for each word by 1: For 'hello', you only need 3 array lookups: hel, ell, llo. It will be very quick to build this table, by the way, as there are only 400 possible 3-letter-moves in your grid.</p></li>
<li><p>Pre-compute the indices of the moves in your grid that you need to include in your table. For the example above, you need to set the following entries to 'True':</p>

<pre><code>(0,0) (0,1) -&gt; here: h, b : [6][0]
(0,0) (1,0) -&gt; here: h, e : [6][3]
(0,0) (1,1) -&gt; here: h, e : [6][3]
(0,1) (0,0) -&gt; here: b, h : [0][6]
(0,1) (0,2) -&gt; here: b, c : [0][1]
.
:
</code></pre></li>
<li>Also represent your game grid in a 1-D array with 16 entries and have the table pre-computed in 3. contain the indices into this array.</li>
</ol>

<p>I'm sure if you use this approach you can get your code to run insanely fast, if you have the dictionary pre-computed and already loaded into memory.</p>

<p>BTW: Another nice thing to do, if you are building a game, is to run these sort of things immediately in the background. Start generating and solving the first game while the user is still looking at the title screen on your app and getting his finger into position to press "Play". Then generate and solve the next game as the user plays the previous one. That should give you a lot of time to run your code.</p>

<p>(I like this problem, so I'll probably be tempted to implement my proposal in Java sometime in the next days to see how it would actually perform... I'll post the code here once I do.)</p>

<p><strong>UPDATE:</strong></p>

<p>Ok, I had some time today and implemented this idea in Java:</p>

<pre class="lang-java prettyprint prettyprinted"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">DictionaryEntry</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> letters</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> triplets</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">BoggleSolver</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

  </span><span class="com">// Constants</span><span class="pln">
  </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> ALPHABET_SIZE </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pun">;</span><span class="pln">  </span><span class="com">// up to 2^5 = 32 letters</span><span class="pln">
  </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> BOARD_SIZE    </span><span class="pun">=</span><span class="pln"> </span><span class="lit">4</span><span class="pun">;</span><span class="pln">  </span><span class="com">// 4x4 board</span><span class="pln">
  </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> moves </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{-</span><span class="pln">BOARD_SIZE</span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="pln">BOARD_SIZE</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="pln">BOARD_SIZE</span><span class="pun">+</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> 
                                  </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln">                         </span><span class="pun">+</span><span class="lit">1</span><span class="pun">,</span><span class="pln">
                       </span><span class="pun">+</span><span class="pln">BOARD_SIZE</span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="pun">+</span><span class="pln">BOARD_SIZE</span><span class="pun">,</span><span class="pln"> </span><span class="pun">+</span><span class="pln">BOARD_SIZE</span><span class="pun">+</span><span class="lit">1</span><span class="pun">};</span><span class="pln">


  </span><span class="com">// Technically constant (calculated here for flexibility, but should be fixed)</span><span class="pln">
  </span><span class="typ">DictionaryEntry</span><span class="pun">[]</span><span class="pln"> dictionary</span><span class="pun">;</span><span class="pln"> </span><span class="com">// Processed word list</span><span class="pln">
  </span><span class="kwd">int</span><span class="pln"> maxWordLength </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> boardTripletIndices</span><span class="pun">;</span><span class="pln"> </span><span class="com">// List of all 3-letter moves in board coordinates</span><span class="pln">

  </span><span class="typ">DictionaryEntry</span><span class="pun">[]</span><span class="pln"> buildDictionary</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> fileName</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">BufferedReader</span><span class="pln"> fileReader </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BufferedReader</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileReader</span><span class="pun">(</span><span class="pln">fileName</span><span class="pun">));</span><span class="pln">
    </span><span class="typ">String</span><span class="pln"> word </span><span class="pun">=</span><span class="pln"> fileReader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span><span class="pln">
    </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">DictionaryEntry</span><span class="pun">&gt;</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">DictionaryEntry</span><span class="pun">&gt;();</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">word</span><span class="pun">!=</span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">word</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()&gt;=</span><span class="lit">3</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        word </span><span class="pun">=</span><span class="pln"> word</span><span class="pun">.</span><span class="pln">toUpperCase</span><span class="pun">();</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">word</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()&gt;</span><span class="pln">maxWordLength</span><span class="pun">)</span><span class="pln"> maxWordLength </span><span class="pun">=</span><span class="pln"> word</span><span class="pun">.</span><span class="pln">length</span><span class="pun">();</span><span class="pln">
        </span><span class="typ">DictionaryEntry</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DictionaryEntry</span><span class="pun">();</span><span class="pln">
        entry</span><span class="pun">.</span><span class="pln">letters  </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="pln">word</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()</span><span class="pln">  </span><span class="pun">];</span><span class="pln">
        entry</span><span class="pun">.</span><span class="pln">triplets </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="pln">word</span><span class="pun">.</span><span class="pln">length</span><span class="pun">()-</span><span class="lit">2</span><span class="pun">];</span><span class="pln">
        </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">char</span><span class="pln"> letter</span><span class="pun">:</span><span class="pln"> word</span><span class="pun">.</span><span class="pln">toCharArray</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          entry</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">byte</span><span class="pun">)</span><span class="pln"> letter </span><span class="pun">-</span><span class="pln"> </span><span class="lit">65</span><span class="pun">;</span><span class="pln"> </span><span class="com">// Convert ASCII to 0..25</span><span class="pln">
          </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">&gt;=</span><span class="lit">2</span><span class="pun">)</span><span class="pln">
            entry</span><span class="pun">.</span><span class="pln">triplets</span><span class="pun">[</span><span class="pln">i</span><span class="pun">-</span><span class="lit">2</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(((</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">[</span><span class="pln">i</span><span class="pun">-</span><span class="lit">2</span><span class="pun">]</span><span class="pln">  </span><span class="pun">&lt;&lt;</span><span class="pln"> ALPHABET_SIZE</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
                                     entry</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">[</span><span class="pln">i</span><span class="pun">-</span><span class="lit">1</span><span class="pun">])</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> ALPHABET_SIZE</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
                                     entry</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
          i</span><span class="pun">++;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">entry</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      word </span><span class="pun">=</span><span class="pln"> fileReader</span><span class="pun">.</span><span class="pln">readLine</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> result</span><span class="pun">.</span><span class="pln">toArray</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DictionaryEntry</span><span class="pun">[</span><span class="pln">result</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()]);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">boolean</span><span class="pln"> isWrap</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// Checks if move a-&gt;b wraps board edge (like 3-&gt;4)</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">Math</span><span class="pun">.</span><span class="pln">abs</span><span class="pun">(</span><span class="pln">a</span><span class="pun">%</span><span class="pln">BOARD_SIZE</span><span class="pun">-</span><span class="pln">b</span><span class="pun">%</span><span class="pln">BOARD_SIZE</span><span class="pun">)&gt;</span><span class="lit">1</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> buildTripletIndices</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;();</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> a</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> a</span><span class="pun">&lt;</span><span class="pln">BOARD_SIZE</span><span class="pun">*</span><span class="pln">BOARD_SIZE</span><span class="pun">;</span><span class="pln"> a</span><span class="pun">++)</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> bm</span><span class="pun">:</span><span class="pln"> moves</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">int</span><span class="pln"> b</span><span class="pun">=</span><span class="pln">a</span><span class="pun">+</span><span class="pln">bm</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">((</span><span class="pln">b</span><span class="pun">&gt;=</span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">b</span><span class="pun">&lt;</span><span class="pln">board</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!</span><span class="pln">isWrap</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln"> b</span><span class="pun">))</span><span class="pln">
          </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> cm</span><span class="pun">:</span><span class="pln"> moves</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">int</span><span class="pln"> c</span><span class="pun">=</span><span class="pln">b</span><span class="pun">+</span><span class="pln">cm</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">((</span><span class="pln">c</span><span class="pun">&gt;=</span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c</span><span class="pun">&lt;</span><span class="pln">board</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c</span><span class="pun">!=</span><span class="pln">a</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!</span><span class="pln">isWrap</span><span class="pun">(</span><span class="pln">b</span><span class="pun">,</span><span class="pln"> c</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
              result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">a</span><span class="pun">);</span><span class="pln">
              result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">b</span><span class="pun">);</span><span class="pln">
              result</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">c</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> result2 </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="pln">result</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()];</span><span class="pln">
    </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Integer</span><span class="pln"> r</span><span class="pun">:</span><span class="pln"> result</span><span class="pun">)</span><span class="pln"> result2</span><span class="pun">[</span><span class="pln">i</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> r</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> result2</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">


  </span><span class="com">// Variables that depend on the actual game layout</span><span class="pln">
  </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> board </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="pln">BOARD_SIZE</span><span class="pun">*</span><span class="pln">BOARD_SIZE</span><span class="pun">];</span><span class="pln"> </span><span class="com">// Letters in board</span><span class="pln">
  </span><span class="kwd">boolean</span><span class="pun">[]</span><span class="pln"> possibleTriplets </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pun">[</span><span class="lit">1</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">ALPHABET_SIZE</span><span class="pun">*</span><span class="lit">3</span><span class="pun">)];</span><span class="pln">

  </span><span class="typ">DictionaryEntry</span><span class="pun">[]</span><span class="pln"> candidateWords</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">int</span><span class="pln"> candidateCount</span><span class="pun">;</span><span class="pln">

  </span><span class="kwd">int</span><span class="pun">[]</span><span class="pln"> usedBoardPositions</span><span class="pun">;</span><span class="pln">

  </span><span class="typ">DictionaryEntry</span><span class="pun">[]</span><span class="pln"> foundWords</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">int</span><span class="pln"> foundCount</span><span class="pun">;</span><span class="pln">

  </span><span class="kwd">void</span><span class="pln"> initializeBoard</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> letters</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> row</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> row</span><span class="pun">&lt;</span><span class="pln">BOARD_SIZE</span><span class="pun">;</span><span class="pln"> row</span><span class="pun">++)</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> col</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> col</span><span class="pun">&lt;</span><span class="pln">BOARD_SIZE</span><span class="pun">;</span><span class="pln"> col</span><span class="pun">++)</span><span class="pln">
        board</span><span class="pun">[</span><span class="pln">row</span><span class="pun">*</span><span class="pln">BOARD_SIZE </span><span class="pun">+</span><span class="pln"> col</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">byte</span><span class="pun">)</span><span class="pln"> letters</span><span class="pun">[</span><span class="pln">row</span><span class="pun">].</span><span class="pln">charAt</span><span class="pun">(</span><span class="pln">col</span><span class="pun">)</span><span class="pln"> </span><span class="pun">-</span><span class="pln"> </span><span class="lit">65</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">void</span><span class="pln"> setPossibleTriplets</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">Arrays</span><span class="pun">.</span><span class="pln">fill</span><span class="pun">(</span><span class="pln">possibleTriplets</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln"> </span><span class="com">// Reset list</span><span class="pln">
    </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">boardTripletIndices</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">int</span><span class="pln"> triplet </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(((</span><span class="pln">board</span><span class="pun">[</span><span class="pln">boardTripletIndices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">++]]</span><span class="pln">  </span><span class="pun">&lt;&lt;</span><span class="pln"> ALPHABET_SIZE</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
                       board</span><span class="pun">[</span><span class="pln">boardTripletIndices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">++]])</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> ALPHABET_SIZE</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
                       board</span><span class="pun">[</span><span class="pln">boardTripletIndices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">++]];</span><span class="pln">
      possibleTriplets</span><span class="pun">[</span><span class="pln">triplet</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln"> 
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">void</span><span class="pln"> checkWordTriplets</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    candidateCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">DictionaryEntry</span><span class="pln"> entry</span><span class="pun">:</span><span class="pln"> dictionary</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">boolean</span><span class="pln"> ok </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">int</span><span class="pln"> len </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">triplets</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> t</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">t</span><span class="pun">&lt;</span><span class="pln">len</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> ok</span><span class="pun">;</span><span class="pln"> t</span><span class="pun">++)</span><span class="pln">
        ok </span><span class="pun">=</span><span class="pln"> possibleTriplets</span><span class="pun">[</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">triplets</span><span class="pun">[</span><span class="pln">t</span><span class="pun">]];</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">ok</span><span class="pun">)</span><span class="pln"> candidateWords</span><span class="pun">[</span><span class="pln">candidateCount</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> entry</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">void</span><span class="pln"> checkWords</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// Can probably be optimized a lot</span><span class="pln">
    foundCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">&lt;</span><span class="pln">candidateCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="typ">DictionaryEntry</span><span class="pln"> candidate </span><span class="pun">=</span><span class="pln"> candidateWords</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> j</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> j</span><span class="pun">&lt;</span><span class="pln">board</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> j</span><span class="pun">++)</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">board</span><span class="pun">[</span><span class="pln">j</span><span class="pun">]==</span><span class="pln">candidate</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">[</span><span class="lit">0</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
          usedBoardPositions</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> j</span><span class="pun">;</span><span class="pln">
          </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">checkNextLetters</span><span class="pun">(</span><span class="pln">candidate</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> j</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            foundWords</span><span class="pun">[</span><span class="pln">foundCount</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> candidate</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
          </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">boolean</span><span class="pln"> checkNextLetters</span><span class="pun">(</span><span class="typ">DictionaryEntry</span><span class="pln"> candidate</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> letter</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> pos</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">letter</span><span class="pun">==</span><span class="pln">candidate</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">int</span><span class="pln"> match </span><span class="pun">=</span><span class="pln"> candidate</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">[</span><span class="pln">letter</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> move</span><span class="pun">:</span><span class="pln"> moves</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">int</span><span class="pln"> next</span><span class="pun">=</span><span class="pln">pos</span><span class="pun">+</span><span class="pln">move</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">((</span><span class="pln">next</span><span class="pun">&gt;=</span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">next</span><span class="pun">&lt;</span><span class="pln">board</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">board</span><span class="pun">[</span><span class="pln">next</span><span class="pun">]==</span><span class="pln">match</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!</span><span class="pln">isWrap</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">,</span><span class="pln"> next</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">boolean</span><span class="pln"> ok </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">letter</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> ok</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln">
          ok </span><span class="pun">=</span><span class="pln"> usedBoardPositions</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]!=</span><span class="pln">next</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">ok</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          usedBoardPositions</span><span class="pun">[</span><span class="pln">letter</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> next</span><span class="pun">;</span><span class="pln">
          </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">checkNextLetters</span><span class="pun">(</span><span class="pln">candidate</span><span class="pun">,</span><span class="pln"> letter</span><span class="pun">+</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> next</span><span class="pun">))</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">   
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">


  </span><span class="com">// Just some helper functions</span><span class="pln">
  </span><span class="typ">String</span><span class="pln"> formatTime</span><span class="pun">(</span><span class="kwd">long</span><span class="pln"> start</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> end</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> repetitions</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">long</span><span class="pln"> time </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">end</span><span class="pun">-</span><span class="pln">start</span><span class="pun">)/</span><span class="pln">repetitions</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> time</span><span class="pun">/</span><span class="lit">1000000</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"."</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">time</span><span class="pun">/</span><span class="lit">100000</span><span class="pun">)</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">10</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">""</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">time</span><span class="pun">/</span><span class="lit">10000</span><span class="pun">)</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">10</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"ms"</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="typ">String</span><span class="pln"> getWord</span><span class="pun">(</span><span class="typ">DictionaryEntry</span><span class="pln"> entry</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">char</span><span class="pun">[]</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">char</span><span class="pun">[</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">.</span><span class="pln">length</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> letter</span><span class="pun">:</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">letters</span><span class="pun">)</span><span class="pln">
      result</span><span class="pun">[</span><span class="pln">i</span><span class="pun">++]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">char</span><span class="pun">)</span><span class="pln"> </span><span class="pun">(</span><span class="pln">letter</span><span class="pun">+</span><span class="lit">97</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">(</span><span class="pln">result</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">void</span><span class="pln"> run</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">long</span><span class="pln"> start </span><span class="pun">=</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="pln">nanoTime</span><span class="pun">();</span><span class="pln">

    </span><span class="com">// The following can be pre-computed and should be replaced by constants</span><span class="pln">
    dictionary </span><span class="pun">=</span><span class="pln"> buildDictionary</span><span class="pun">(</span><span class="str">"C:/TWL06.txt"</span><span class="pun">);</span><span class="pln">
    boardTripletIndices </span><span class="pun">=</span><span class="pln"> buildTripletIndices</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">long</span><span class="pln"> precomputed </span><span class="pun">=</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="pln">nanoTime</span><span class="pun">();</span><span class="pln">


    </span><span class="com">// The following only needs to run once at the beginning of the program</span><span class="pln">
    candidateWords     </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DictionaryEntry</span><span class="pun">[</span><span class="pln">dictionary</span><span class="pun">.</span><span class="pln">length</span><span class="pun">];</span><span class="pln"> </span><span class="com">// WAAAY too generous</span><span class="pln">
    foundWords         </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DictionaryEntry</span><span class="pun">[</span><span class="pln">dictionary</span><span class="pun">.</span><span class="pln">length</span><span class="pun">];</span><span class="pln"> </span><span class="com">// WAAAY too generous</span><span class="pln">
    usedBoardPositions </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="pln">maxWordLength</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">long</span><span class="pln"> initialized </span><span class="pun">=</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="pln">nanoTime</span><span class="pun">();</span><span class="pln"> 

    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> n</span><span class="pun">=</span><span class="lit">1</span><span class="pun">;</span><span class="pln"> n</span><span class="pun">&lt;=</span><span class="lit">100</span><span class="pun">;</span><span class="pln"> n</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// The following needs to run again for every new board</span><span class="pln">
      initializeBoard</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="str">"DGHI"</span><span class="pun">,</span><span class="pln">
                                    </span><span class="str">"KLPS"</span><span class="pun">,</span><span class="pln">
                                    </span><span class="str">"YEUT"</span><span class="pun">,</span><span class="pln">
                                    </span><span class="str">"EORN"</span><span class="pun">});</span><span class="pln">
      setPossibleTriplets</span><span class="pun">();</span><span class="pln">
      checkWordTriplets</span><span class="pun">();</span><span class="pln">
      checkWords</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">long</span><span class="pln"> solved </span><span class="pun">=</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="pln">nanoTime</span><span class="pun">();</span><span class="pln">


    </span><span class="com">// Print out result and statistics</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Precomputation finished in "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> formatTime</span><span class="pun">(</span><span class="pln">start</span><span class="pun">,</span><span class="pln"> precomputed</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)+</span><span class="str">":"</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"  Words in the dictionary: "</span><span class="pun">+</span><span class="pln">dictionary</span><span class="pun">.</span><span class="pln">length</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"  Longest word:            "</span><span class="pun">+</span><span class="pln">maxWordLength</span><span class="pun">+</span><span class="str">" letters"</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"  Number of triplet-moves: "</span><span class="pun">+</span><span class="pln">boardTripletIndices</span><span class="pun">.</span><span class="pln">length</span><span class="pun">/</span><span class="lit">3</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">();</span><span class="pln">

    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Initialization finished in "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> formatTime</span><span class="pun">(</span><span class="pln">precomputed</span><span class="pun">,</span><span class="pln"> initialized</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">));</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">();</span><span class="pln">

    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Board solved in "</span><span class="pun">+</span><span class="pln">formatTime</span><span class="pun">(</span><span class="pln">initialized</span><span class="pun">,</span><span class="pln"> solved</span><span class="pun">,</span><span class="pln"> </span><span class="lit">100</span><span class="pun">)+</span><span class="str">":"</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"  Number of candidates: "</span><span class="pun">+</span><span class="pln">candidateCount</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"  Number of actual words: "</span><span class="pun">+</span><span class="pln">foundCount</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">();</span><span class="pln">

    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Words found:"</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">int</span><span class="pln"> w</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">print</span><span class="pun">(</span><span class="str">"  "</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">&lt;</span><span class="pln">foundCount</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">print</span><span class="pun">(</span><span class="pln">getWord</span><span class="pun">(</span><span class="pln">foundWords</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]));</span><span class="pln">
      w</span><span class="pun">++;</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">w</span><span class="pun">==</span><span class="lit">10</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        w</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">();</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">print</span><span class="pun">(</span><span class="str">"  "</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">foundCount</span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">print</span><span class="pun">(</span><span class="str">", "</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">();</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BoggleSolver</span><span class="pun">().</span><span class="pln">run</span><span class="pun">();</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>

<p><strong>Here are some results:</strong></p>

<p>For the grid from the picture posted in the original question (DGHI...):</p>

<pre><code>Precomputation finished in 239.59ms:
  Words in the dictionary: 178590
  Longest word:            15 letters
  Number of triplet-moves: 408

Initialization finished in 0.22ms

Board solved in 3.70ms:
  Number of candidates: 230
  Number of actual words: 163 

Words found:
  eek, eel, eely, eld, elhi, elk, ern, erupt, erupts, euro
  eye, eyer, ghi, ghis, glee, gley, glue, gluer, gluey, glut
  gluts, hip, hiply, hips, his, hist, kelp, kelps, kep, kepi
  kepis, keps, kept, kern, key, kye, lee, lek, lept, leu
  ley, lunt, lunts, lure, lush, lust, lustre, lye, nus, nut
  nuts, ore, ort, orts, ouph, ouphs, our, oust, out, outre
  outs, oyer, pee, per, pert, phi, phis, pis, pish, plus
  plush, ply, plyer, psi, pst, pul, pule, puler, pun, punt
  punts, pur, pure, puree, purely, pus, push, put, puts, ree
  rely, rep, reply, reps, roe, roue, roup, roups, roust, rout
  routs, rue, rule, ruly, run, runt, runts, rupee, rush, rust
  rut, ruts, ship, shlep, sip, sipe, spue, spun, spur, spurn
  spurt, strep, stroy, stun, stupe, sue, suer, sulk, sulker, sulky
  sun, sup, supe, super, sure, surely, tree, trek, trey, troupe
  troy, true, truly, tule, tun, tup, tups, turn, tush, ups
  urn, uts, yeld, yelk, yelp, yelps, yep, yeps, yore, you
  your, yourn, yous
</code></pre>

<p>For the letters posted as the example in the original question (FXIE...)</p>

<pre><code>Precomputation finished in 239.68ms:
  Words in the dictionary: 178590
  Longest word:            15 letters
  Number of triplet-moves: 408

Initialization finished in 0.21ms

Board solved in 3.69ms:
  Number of candidates: 87
  Number of actual words: 76

Words found:
  amble, ambo, ami, amie, asea, awa, awe, awes, awl, axil
  axile, axle, boil, bole, box, but, buts, east, elm, emboli
  fame, fames, fax, lei, lie, lima, limb, limbo, limbs, lime
  limes, lob, lobs, lox, mae, maes, maw, maws, max, maxi
  mesa, mew, mewl, mews, mil, mile, milo, mix, oil, ole
  sae, saw, sea, seam, semi, sew, stub, swam, swami, tub
  tubs, tux, twa, twae, twaes, twas, uts, wae, waes, wamble
  wame, wames, was, wast, wax, west
</code></pre>

<p>For the following 5x5-grid:</p>

<pre><code>R P R I T
A H H L N
I E T E P
Z R Y S G
O G W E Y
</code></pre>

<p>it gives this:</p>

<pre><code>Precomputation finished in 240.39ms:
  Words in the dictionary: 178590
  Longest word:            15 letters
  Number of triplet-moves: 768

Initialization finished in 0.23ms

Board solved in 3.85ms:
  Number of candidates: 331
  Number of actual words: 240

Words found:
  aero, aery, ahi, air, airt, airth, airts, airy, ear, egest
  elhi, elint, erg, ergo, ester, eth, ether, eye, eyen, eyer
  eyes, eyre, eyrie, gel, gelt, gelts, gen, gent, gentil, gest
  geste, get, gets, gey, gor, gore, gory, grey, greyest, greys
  gyre, gyri, gyro, hae, haet, haets, hair, hairy, hap, harp
  heap, hear, heh, heir, help, helps, hen, hent, hep, her
  hero, hes, hest, het, hetero, heth, hets, hey, hie, hilt
  hilts, hin, hint, hire, hit, inlet, inlets, ire, leg, leges
  legs, lehr, lent, les, lest, let, lethe, lets, ley, leys
  lin, line, lines, liney, lint, lit, neg, negs, nest, nester
  net, nether, nets, nil, nit, ogre, ore, orgy, ort, orts
  pah, pair, par, peg, pegs, peh, pelt, pelter, peltry, pelts
  pen, pent, pes, pest, pester, pesty, pet, peter, pets, phi
  philter, philtre, phiz, pht, print, pst, rah, rai, rap, raphe
  raphes, reap, rear, rei, ret, rete, rets, rhaphe, rhaphes, rhea
  ria, rile, riles, riley, rin, rye, ryes, seg, sel, sen
  sent, senti, set, sew, spelt, spelter, spent, splent, spline, splint
  split, stent, step, stey, stria, striae, sty, stye, tea, tear
  teg, tegs, tel, ten, tent, thae, the, their, then, these
  thesp, they, thin, thine, thir, thirl, til, tile, tiles, tilt
  tilter, tilth, tilts, tin, tine, tines, tirl, trey, treys, trog
  try, tye, tyer, tyes, tyre, tyro, west, wester, wry, wryest
  wye, wyes, wyte, wytes, yea, yeah, year, yeh, yelp, yelps
  yen, yep, yeps, yes, yester, yet, yew, yews, zero, zori
</code></pre>

<p>For this I used the <a href="http://www.isc.ro/lists/twl06.zip" rel="nofollow">TWL06 Tournament Scrabble Word List</a>, since the link in the original question no longer works. This file is 1.85MB, so it's a little bit shorter. And the <code>buildDictionary</code> function throws out all words with less than 3 letters.</p>

<p>Here are a couple of observations about the performance of this:</p>

<ul>
<li><p>It's about 10 times slower than the reported performance of Victor Nicollet's OCaml implementation. Whether this is caused by the different algorithm, the shorter dictionary he used, the fact that his code is compiled and mine runs in a Java virtual machine, or the performance of our computers (mine is an Intel Q6600 @ 2.4MHz running WinXP), I don't know. But it's much faster than the results for the other implementations quoted at the end of the original question. So, whether this algorithm is superior to the trie dictionary or not, I don't know at this point.</p></li>
<li><p>The table method used in <code>checkWordTriplets()</code> yields a very good approximation to the actual answers. Only 1 in 3-5 words passed by it will fail the <code>checkWords()</code> test (See <em>number of candidates</em> vs. <em>number of actual words</em> above).</p></li>
<li><p>Something you can't see above: The <code>checkWordTriplets()</code> function takes about 3.65ms and is therefore fully dominant in the search process. The <code>checkWords()</code> function takes up pretty much the remaining 0.05-0.20 ms.</p></li>
<li><p>The execution time of the <code>checkWordTriplets()</code> function depends linearly on the dictionary size and is virtually <strong>independent of board size!</strong></p></li>
<li><p>The execution time of <code>checkWords()</code> depends on the board size and the number of words not ruled out by <code>checkWordTriplets()</code>.</p></li>
<li><p>The <code>checkWords()</code> implementation above is the dumbest first version I came up with. It is basically not optimized at all. But compared to <code>checkWordTriplets()</code> it is irrelevant for the total performance of the application, so I didn't worry about it. <strong>But</strong>, if the board size gets bigger, this function will get slower and slower and will eventually start to matter. Then, it would need to be optimized as well.</p></li>
<li><p>One nice thing about this code is its flexibility:</p>

<ul>
<li>You can easily change the board size: Update line 10 and the String array passed to <code>initializeBoard()</code>.</li>
<li>It can support larger/different alphabets and can handle things like treating 'Qu' as one letter without any performance overhead. To do this, one would need to update line 9 and the couple of places where characters are converted to numbers (currently simply by subtracting 65 from the ASCII value)</li>
</ul></li>
</ul>

<p>Ok, but I think by now this post is waaaay long enough. I can definitely answer any questions you might have, but let's move that to the comments.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/13338904" title="short permalink to this answer" class="short-link" id="link-post-13338904">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/13338904/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/13338904/revisions" title="show all edits to this post">edited <span title="2014-05-20 22:10:35Z" class="relativetime">May 20 at 22:10</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Nov 12 &#39;12 at 5:42. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-13338904" href="http://stackoverflow.com/posts/13338904/revisions" title="show revision history for this post">
        8 revs<br></a><a href="http://stackoverflow.com/users/1217178">Markus A.</a>
        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-13338904" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="4" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-18270074" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Nice answer. I'd like to see your implementation in Java.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1279334/mikkop" title="826 reputation" class="comment-user">MikkoP</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment18270074_13338904"><span title="2012-11-14 12:47:27Z" class="relativetime-clean">Nov 14 '12 at 12:47</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-18352078" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@MikkoP Done! :) Took about 3 hours and 220 lines of code. Good way to pass an afternoon. Let me know if you have any questions about how it works... :)</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1217178/markus-a" title="4020 reputation" class="comment-user">Markus A.</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment18352078_13338904"><span title="2012-11-17 02:14:45Z" class="relativetime-clean">Nov 17 '12 at 2:14</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-18362619" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Thanks for posting the code! I tried it with my own dictionary after I had added the missing imports. I get an ArrayIndexOutOfBoundException on the line <code>ok = possibleTriplets[entry.triplets[t]];</code>. hmm?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1279334/mikkop" title="826 reputation" class="comment-user">MikkoP</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment18362619_13338904"><span title="2012-11-17 18:14:41Z" class="relativetime-clean">Nov 17 '12 at 18:14</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-18363725" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@MikkoP This code is currently written to assume the dictionary to only contain upper case letters A-Z. The crux is in line 34: <code>entry.letters[i] = (byte) letter - 65;</code> It simply takes the ASCII value and subtracts 65 ("A"). If you have Umlauts or lower-case letters in your dictionary, this will give values greater than 31, which aren't planned for by the setting of the alphabet size in line 9. To support other letters, you would have to expand this line to map them into the range allowed by the alphabet size.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1217178/markus-a" title="4020 reputation" class="comment-user">Markus A.</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment18363725_13338904"><span title="2012-11-17 19:25:09Z" class="relativetime-clean">Nov 17 '12 at 19:25</span></a></span>
                    <span class="edited-yes" title="this comment was edited 2 times"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-36554219" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@AlexanderN You are probably understanding the logic correctly. I made a mistake copying letter grid... Sorry... (fixed)</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1217178/markus-a" title="4020 reputation" class="comment-user">Markus A.</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment36554219_13338904"><span title="2014-05-20 22:11:21Z" class="relativetime-clean">May 20 at 22:11</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-13338904" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link " title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick="">show <b>4</b> more comments</a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="1531492"></a>
<div id="answer-1531492" class="answer" data-answerid="1531492" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1531492">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">9</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I know I'm super late but I made one of these a while ago in <strong>PHP</strong> - just for fun too...</p>

<p><a href="http://www.lostsockdesign.com.au/sandbox/boggle/index.php?letters=fxieamloewbxastu">http://www.lostsockdesign.com.au/sandbox/boggle/index.php?letters=fxieamloewbxastu</a>
Found 75 words (133 pts) in <strong>0.90108 seconds</strong></p>

<p><code>F.........X..I..............E...............
A......................................M..............................L............................O...............................
E....................W............................B..........................X
A..................S..................................................T.................U....</code></p>

<p>Gives some indication of what the program is actually doing - each letter is where it starts looking through the patterns while each '.' shows a path that it has tried to take. The more '.' there are the further it has searched.</p>

<p>Let me know if you want the code... it is a horrible mix of PHP and HTML that was never meant to see the light of day so I dare not post it here :P</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/1531492" title="short permalink to this answer" class="short-link" id="link-post-1531492">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/1531492/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/1531492/revisions" title="show all edits to this post"><span title="2009-10-07 12:59:10Z" class="relativetime">Oct 7 '09 at 12:59</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Oct 7 &#39;09 at 12:59. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1531492" href="http://stackoverflow.com/posts/1531492/revisions" title="show revision history for this post">
        Danny
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1531492" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-5418514" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Good job.......!</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/300204/zaf" title="12370 reputation" class="comment-user">zaf</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment5418514_1531492"><span title="2011-02-02 11:12:47Z" class="relativetime-clean">Feb 2 '11 at 11:12</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-1531492" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="1761429"></a>
<div id="answer-1761429" class="answer" data-answerid="1761429" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1761429">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">9</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I spent 3 months working on a solution to the 10 best point dense 5x5 Boggle boards problem.</p>

<p>The problem is now solved and laid out with full disclosure on 5 web pages.  Please contact me with questions.</p>

<p>The board analysis algorithm uses an explicit stack to pseudo-recursively traverse the board squares through a Directed Acyclic Word Graph with direct child information, and a time stamp tracking mechanism.  This may very well be the world's most advanced lexicon data structure.</p>

<p>The scheme evaluates some 10,000 very good boards per second on a quad core. (9500+ points)</p>

<p>Parent Web Page:</p>

<p>DeepSearch.c - <a href="http://www.pathcom.com/~vadco/deep.html" rel="nofollow">http://www.pathcom.com/~vadco/deep.html</a></p>

<p>Component Web Pages:</p>

<p>Optimal Scoreboard - <a href="http://www.pathcom.com/~vadco/binary.html" rel="nofollow">http://www.pathcom.com/~vadco/binary.html</a></p>

<p>Advanced Lexicon Structure - <a href="http://www.pathcom.com/~vadco/adtdawg.html" rel="nofollow">http://www.pathcom.com/~vadco/adtdawg.html</a></p>

<p>Board Analysis Algorithm - <a href="http://www.pathcom.com/~vadco/guns.html" rel="nofollow">http://www.pathcom.com/~vadco/guns.html</a></p>

<p>Parallel Batch Processing - <a href="http://www.pathcom.com/~vadco/parallel.html" rel="nofollow">http://www.pathcom.com/~vadco/parallel.html</a></p>

<p>-
This comprehensive body of work will only interest a person who demands the very best.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/1761429" title="short permalink to this answer" class="short-link" id="link-post-1761429">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/1761429/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/1761429/revisions" title="show all edits to this post">edited <span title="2012-01-27 06:03:39Z" class="relativetime">Jan 27 '12 at 6:03</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Nov 19 &#39;09 at 7:06. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1761429" href="http://stackoverflow.com/posts/1761429/revisions" title="show revision history for this post">
        2 revs, 2 users 92%<br></a><a href="http://stackoverflow.com/users/214374">JohnPaul Adamovsky</a>

        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1761429" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-11275127" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Your analysis is interesting, but your results are not technically Boggle boards. The 5x5 boggle game includes one die that contains the faces BJKQXZ, your implementation is explicitly excluding all of these letters and so the board position is not actually possible in a real Boggle game.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/190371/mark" title="7315 reputation" class="comment-user">Mark</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment11275127_1761429"><span title="2012-01-25 00:43:59Z" class="relativetime-clean">Jan 25 '12 at 0:43</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-1761429" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746094"></a>
<div id="answer-746094" class="answer" data-answerid="746094" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746094">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">4</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Does your search algorithm continually decrease the word list as your search continues?</p>

<p>For instance, in the search above there are only 13 letters that your words can start with (effectively reducing to half as many starting letters).</p>

<p>As you add more letter permutations it would further decrease the available word sets decreasing the searching necessary.</p>

<p>I'd start there.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746094" title="short permalink to this answer" class="short-link" id="link-post-746094">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746094/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-04-14 02:16:28Z" class="relativetime">Apr 14 '09 at 2:16</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/42979/jerebear"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/cadfa4834352944afca3f25611879fc5" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/42979/jerebear">jerebear</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">3,246</span><span title="2 gold badges"><span class="badge1"></span><span class="badgecount">2</span></span><span title="18 silver badges"><span class="badge2"></span><span class="badgecount">18</span></span><span title="31 bronze badges"><span class="badge3"></span><span class="badgecount">31</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746094" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746094" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746110"></a>
<div id="answer-746110" class="answer" data-answerid="746110" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746110">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">4</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I'd have to give more thought to a complete solution, but as a handy optimisation, I wonder whether it might be worth pre-computing a table of frequencies of digrams and trigrams (2- and 3-letter combinations) based on all the words from your dictionary, and use this to prioritise your search. I'd go with the starting letters of words. So if your dictionary contained the words "India", "Water", "Extreme", and "Extraordinary", then your pre-computed table might be:</p>

<pre><code>'IN': 1
'WA': 1
'EX': 2
</code></pre>

<p>Then search for these digrams in the order of commonality (first EX, then WA/IN)</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746110" title="short permalink to this answer" class="short-link" id="link-post-746110">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746110/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-04-14 02:20:32Z" class="relativetime">Apr 14 '09 at 2:20</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/14902/smashery"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/04c4396f3d538f5aad32adb496467de3" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/14902/smashery">Smashery</a><br>
        <span class="reputation-score" title="reputation score 13458" dir="ltr">13.5k</span><span title="11 gold badges"><span class="badge1"></span><span class="badgecount">11</span></span><span title="46 silver badges"><span class="badge2"></span><span class="badgecount">46</span></span><span title="101 bronze badges"><span class="badge3"></span><span class="badgecount">101</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746110" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746110" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746090"></a>
<div id="answer-746090" class="answer" data-answerid="746090" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746090">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">4</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>First, read how one of the C# language designers solved a related problem: 
<a href="http://blogs.msdn.com/ericlippert/archive/2009/02/04/a-nasality-talisman-for-the-sultana-analyst.aspx" rel="nofollow">http://blogs.msdn.com/ericlippert/archive/2009/02/04/a-nasality-talisman-for-the-sultana-analyst.aspx</a>.</p>

<p>Like him, you can start with a dictionary and the canonacalize words by creating a dictionary from an array of letters sorted alphabetically to a list of words that can be spelled from those letters. </p>

<p>Next, start creating the possible words from the board and looking them up. I suspect that will get you pretty far, but there are certainly more tricks that might speed things up. </p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746090" title="short permalink to this answer" class="short-link" id="link-post-746090">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746090/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/746090/revisions" title="show all edits to this post">edited <span title="2009-04-14 02:22:17Z" class="relativetime">Apr 14 '09 at 2:22</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2009-04-14 02:15:05Z" class="relativetime">Apr 14 '09 at 2:15</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/20754/rossfabricant"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/d44852253c0c6573171c28a084f8db43" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/20754/rossfabricant">RossFabricant</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">7,805</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="23 silver badges"><span class="badge2"></span><span class="badgecount">23</span></span><span title="46 bronze badges"><span class="badge3"></span><span class="badgecount">46</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746090" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746090" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746117"></a>
<div id="answer-746117" class="answer" data-answerid="746117" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746117">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">4</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I suggest making a tree of letters based on words.  The tree would be composed of a letter structs, like this:</p>

<pre><code>letter: char
isWord: boolean
</code></pre>

<p>Then you build up the tree, with each depth adding a new letter.  In other words, on the first level there'd be the alphabet; then from each of those trees, there'd be another another 26 entries, and so on, until you've spelled out all the words.  Hang onto this parsed tree, and it'll make all possible answers faster to look up.</p>

<p>With this parsed tree, you can very quickly find solutions.  Here's the pseudo-code:</p>

<pre><code>BEGIN: 
    For each letter:
        if the struct representing it on the current depth has isWord == true, enter it as an answer.
        Cycle through all its neighbors; if there is a child of the current node corresponding to the letter, recursively call BEGIN on it.
</code></pre>

<p>This could be sped up with a bit of dynamic programming.  For example, in your sample, the two 'A's are both next to an 'E' and a 'W', which (from the point they hit them on) would be identical.  I don't have enough time to really spell out the code for this, but I think you can gather the idea.</p>

<p>Also, I'm sure you'll find other solutions if you Google for "Boggle solver".</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746117" title="short permalink to this answer" class="short-link" id="link-post-746117">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746117/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2009-04-14 02:25:19Z" class="relativetime">Apr 14 '09 at 2:25</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/60261/daniel-lew"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/d225ebf0faa666ac7655cc7e4689283c" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/60261/daniel-lew">Daniel Lew</a><br>
        <span class="reputation-score" title="reputation score 39734" dir="ltr">39.7k</span><span title="14 gold badges"><span class="badge1"></span><span class="badgecount">14</span></span><span title="123 silver badges"><span class="badge2"></span><span class="badgecount">123</span></span><span title="144 bronze badges"><span class="badge3"></span><span class="badgecount">144</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746117" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-558825" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received" class="cool">4</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">You just defined a "Trie" <a href="http://en.wikipedia.org/wiki/Trie" rel="nofollow">en.wikipedia.org/wiki/Trie</a></span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/15614/kent-fredric" title="35910 reputation" class="comment-user">Kent Fredric</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment558825_746117"><span title="2009-04-14 13:16:41Z" class="relativetime-clean">Apr 14 '09 at 13:16</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746117" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="3553522"></a>
<div id="answer-3553522" class="answer" data-answerid="3553522" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="3553522">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">4</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Just for fun, I implemented one in bash. 
It is not super fast, but reasonable. </p>

<p><a href="http://dev.xkyle.com/bashboggle/" rel="nofollow">http://dev.xkyle.com/bashboggle/</a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/3553522" title="short permalink to this answer" class="short-link" id="link-post-3553522">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/3553522/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/3553522/revisions" title="show all edits to this post"><span title="2010-08-24 04:12:00Z" class="relativetime">Aug 24 '10 at 4:12</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Aug 24 &#39;10 at 4:12. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-3553522" href="http://stackoverflow.com/posts/3553522/revisions" title="show revision history for this post">
        Kyle
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-3553522" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-3553522" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="746277"></a>
<div id="answer-746277" class="answer" data-answerid="746277" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="746277">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">3</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Hilarious. I nearly posted the same question a few days ago due to the same damn game! I did not however because just searched google for <a href="http://www.google.com/search?client=safari&rls=en-us&q=boggle%2Bsolver%2Bpython&ie=UTF-8&oe=UTF-8" rel="nofollow">boggle solver python</a> and got all the answers I could want.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/746277" title="short permalink to this answer" class="short-link" id="link-post-746277">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/746277/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-04-14 03:53:51Z" class="relativetime">Apr 14 '09 at 3:53</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/51532/physicsmichael"><div class="gravatar-wrapper-32"><img src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/a64e7e9ae03137ff89a0a2f39a20c86b" alt="" class="hoverZoomLink"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/51532/physicsmichael">physicsmichael</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">1,383</span><span title="5 gold badges"><span class="badge1"></span><span class="badgecount">5</span></span><span title="21 silver badges"><span class="badge2"></span><span class="badgecount">21</span></span><span title="37 bronze badges"><span class="badge3"></span><span class="badgecount">37</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-746277" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-557830" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I wasn't aware the popular name of it was "boggle", but I did find some stuff on google, I was just curious to see what people would come up with on SO. :)</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment557830_746277"><span title="2009-04-14 04:37:11Z" class="relativetime-clean">Apr 14 '09 at 4:37</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-746277" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="1995907"></a>
<div id="answer-1995907" class="answer" data-answerid="1995907" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1995907">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">3</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I realize this question's time has come and gone, but since I was working on a solver myself, and stumbled onto this while googling about, I thought I should post a reference to mine as it seems a bit different from some of the others.</p>

<p>I chose to go with a flat array for the game board, and to do recursive hunts from each letter on the board, traversing from valid neighbor to valid neighbor, extending the hunt if the current list of letters if a valid prefix in an index. While traversing the notion of the current word is list of indexes into board, not letters that make up a word. When checking the index, the indexes are translated to letters and the check done.</p>

<p>The index is a brute force dictionary that's a bit like a trie, but allows for Pythonic queries of the index. If the words 'cat' and 'cater' are in the list, you'll get this in the dictionary:</p>

<pre><code>   d = { 'c': ['cat','cater'],
     'ca': ['cat','cater'],
     'cat': ['cat','cater'],
     'cate': ['cater'],
     'cater': ['cater'],
   }
</code></pre>

<p>So if the current_word is 'ca' you know that it is a valid prefix because <code>'ca' in d</code> returns True (so continue the board traversal). And if the current_word is 'cat' then you know that it is a valid word because it is a valid prefix and <code>'cat' in d['cat']</code> returns True too.</p>

<p>If felt like this allowed for some readable code that doesn't seem too slow. Like everyone else the expense in this system is reading/building the index. Solving the board is pretty much noise.</p>

<p>The code is at <a href="http://gist.github.com/268079" rel="nofollow">http://gist.github.com/268079</a>. It is intentionally vertical and naive with lots of explicit validity checking because I wanted to understand the problem without crufting it up with a bunch of magic or obscurity.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/1995907" title="short permalink to this answer" class="short-link" id="link-post-1995907">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/1995907/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/1995907/revisions" title="show all edits to this post"><span title="2010-01-03 19:04:29Z" class="relativetime">Jan 3 '10 at 19:04</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Jan 3 &#39;10 at 19:04. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1995907" href="http://stackoverflow.com/posts/1995907/revisions" title="show revision history for this post">
        cdent
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1995907" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-1995907" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="9236303"></a>
<div id="answer-9236303" class="answer" data-answerid="9236303" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="9236303">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">3</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I built three different solutions to the Boggle problem. They are described here:</p>

<p><a href="http://exceptional-code.blogspot.com/2012/02/solving-boggle-game-recursion-prefix.html" rel="nofollow">http://exceptional-code.blogspot.com/2012/02/solving-boggle-game-recursion-prefix.html</a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/9236303" title="short permalink to this answer" class="short-link" id="link-post-9236303">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/9236303/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/9236303/revisions" title="show all edits to this post"><span title="2012-02-10 23:29:57Z" class="relativetime">Feb 10 '12 at 23:29</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Feb 10 &#39;12 at 23:29. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-9236303" href="http://stackoverflow.com/posts/9236303/revisions" title="show revision history for this post">
        Golam Kawsar
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-9236303" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-9236303" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="15869457"></a>
<div id="answer-15869457" class="answer" data-answerid="15869457" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="15869457">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">3</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I wrote my solver in C++. I implemented a custom tree structure. I'm not sure it can be considered a trie but it's similar. Each node has 26 branches, 1 for each letter of the alphabet. I traverse the branches of the boggle board in parallel with the branches of my dictionary. If the branch does not exist in the dictionary, I stop searching it on the Boggle board. I convert all the letters on the board to ints. So 'A' = 0. Since it's just arrays, lookup is always O(1). Each node stores if it completes a word and how many words exist in its children. The tree is pruned as words are found to reduce repeatedly searching for the same words. I believe pruning is also O(1).</p>

<p>CPU: Pentium SU2700 1.3GHz<br>
RAM: 3gb  </p>

<p>Loads dictionary of 178,590 words in &lt; 1 second.<br>
Solves 100x100 Boggle (boggle.txt) in 4 seconds. ~44,000 words found.<br>
Solving a 4x4 Boggle is too fast to provide a meaningful benchmark. :)</p>

<p><a href="https://github.com/themachineswillwin/fast-boggle-solver" rel="nofollow">Fast Boggle Solver GitHub Repo</a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/15869457" title="short permalink to this answer" class="short-link" id="link-post-15869457">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/15869457/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/15869457/revisions" title="show all edits to this post">edited <span title="2013-04-16 03:51:30Z" class="relativetime">Apr 16 '13 at 3:51</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Apr 8 &#39;13 at 0:19. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-15869457" href="http://stackoverflow.com/posts/15869457/revisions" title="show revision history for this post">
        3 revs<br></a><a href="http://stackoverflow.com/users/2201048">Will</a>
        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-15869457" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-15869457" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="10571532"></a>
<div id="answer-10571532" class="answer" data-answerid="10571532" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="10571532">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">1</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I have <a href="https://github.com/VictorNicollet/Boggle" rel="nofollow">implemented a solution in OCaml</a>. It pre-compiles a dictionary as a trie, and uses two-letter sequence frequencies to eliminate edges that could never appear in a word to further speed up processing. </p>

<p>It solves your example board in 0.35ms (with an additional 6ms start-up time which is mostly related to loading the trie into memory). </p>

<p>The solutions found: </p>

<pre><code>["swami"; "emile"; "limbs"; "limbo"; "limes"; "amble"; "tubs"; "stub";
 "swam"; "semi"; "seam"; "awes"; "buts"; "bole"; "boil"; "west"; "east";
 "emil"; "lobs"; "limb"; "lime"; "lima"; "mesa"; "mews"; "mewl"; "maws";
 "milo"; "mile"; "awes"; "amie"; "axle"; "elma"; "fame"; "ubs"; "tux"; "tub";
 "twa"; "twa"; "stu"; "saw"; "sea"; "sew"; "sea"; "awe"; "awl"; "but"; "btu";
 "box"; "bmw"; "was"; "wax"; "oil"; "lox"; "lob"; "leo"; "lei"; "lie"; "mes";
 "mew"; "mae"; "maw"; "max"; "mil"; "mix"; "awe"; "awl"; "elm"; "eli"; "fax"]
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/10571532" title="short permalink to this answer" class="short-link" id="link-post-10571532">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/10571532/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/10571532/revisions" title="show all edits to this post"><span title="2012-05-13 12:01:07Z" class="relativetime">May 13 '12 at 12:01</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of May 13 &#39;12 at 12:01. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-10571532" href="http://stackoverflow.com/posts/10571532/revisions" title="show revision history for this post">
        Victor Nicollet
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-10571532" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-13689822" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">This is nice, but all the times posted here involve any "start-up" time to load the dictionary into memory, so comparing the 0.35 to the other times is pretty far from accurate. Also, are you using a different dictionary? You're missing some words. Either way, +1</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/16417/paolo-bergantino" title="202265 reputation" class="comment-user owner">Paolo Bergantino</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment13689822_10571532"><span title="2012-05-13 16:40:00Z" class="relativetime-clean">May 13 '12 at 16:40</span></a></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-13704454" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The start-up time takes 6ms, so you're looking at 6.35ms for a complete run. I am using my local <code>/usr/share/dict</code> dictionary, and some of the words are indeed missing (such as EMBOLE).</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/236047/victor-nicollet" title="16954 reputation" class="comment-user">Victor Nicollet</a>
                <span class="comment-date" dir="ltr"><a class="comment-link" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#comment13704454_10571532"><span title="2012-05-14 12:00:52Z" class="relativetime-clean">May 14 '12 at 12:00</span></a></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-10571532" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="11698898"></a>
<div id="answer-11698898" class="answer" data-answerid="11698898" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="11698898">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Here is my java implementation: <a href="https://github.com/zouzhile/interview/blob/master/src/com/interview/algorithms/tree/BoggleSolver.java" rel="nofollow">https://github.com/zouzhile/interview/blob/master/src/com/interview/algorithms/tree/BoggleSolver.java</a></p>

<p>Trie build took 0 hours, 0 minutes, 1 seconds, 532 milliseconds<br>
Word searching took 0 hours, 0 minutes, 0 seconds, 92 milliseconds</p>

<pre><code>eel eeler eely eer eke eker eld eleut elk ell 
elle epee epihippus ere erept err error erupt eurus eye 
eyer eyey hip hipe hiper hippish hipple hippus his hish 
hiss hist hler hsi ihi iphis isis issue issuer ist 
isurus kee keek keeker keel keeler keep keeper keld kele 
kelek kelep kelk kell kelly kelp kelper kep kepi kept 
ker kerel kern keup keuper key kyl kyle lee leek 
leeky leep leer lek leo leper leptus lepus ler leu 
ley lleu lue lull luller lulu lunn lunt lunule luo 
lupe lupis lupulus lupus lur lure lurer lush lushly lust 
lustrous lut lye nul null nun nupe nurture nurturer nut 
oer ore ort ouphish our oust out outpeep outpeer outpipe 
outpull outpush output outre outrun outrush outspell outspue outspurn outspurt 
outstrut outstunt outsulk outturn outusure oyer pee peek peel peele 
peeler peeoy peep peeper peepeye peer pele peleus pell peller 
pelu pep peplus pepper pepperer pepsis per pern pert pertussis 
peru perule perun peul phi pip pipe piper pipi pipistrel 
pipistrelle pipistrellus pipper pish piss pist plup plus plush ply 
plyer psi pst puerer pul pule puler pulk pull puller 
pulley pullus pulp pulper pulu puly pun punt pup puppis 
pur pure puree purely purer purr purre purree purrel purrer 
puru purupuru pus push puss pustule put putt puture ree 
reek reeker reeky reel reeler reeper rel rely reoutput rep 
repel repeller repipe reply repp reps reree rereel rerun reuel 
roe roer roey roue rouelle roun roup rouper roust rout 
roy rue ruelle ruer rule ruler rull ruller run runt 
rupee rupert rupture ruru rus rush russ rust rustre rut 
shi shih ship shipper shish shlu sip sipe siper sipper 
sis sish sisi siss sissu sist sistrurus speel speer spelk 
spell speller splurt spun spur spurn spurrer spurt sput ssi 
ssu stre stree streek streel streeler streep streke streperous strepsis 
strey stroup stroy stroyer strue strunt strut stu stue stull 
stuller stun stunt stupe stupeous stupp sturnus sturt stuss stut 
sue suer suerre suld sulk sulker sulky sull sully sulu 
sun sunn sunt sunup sup supe super superoutput supper supple 
supplely supply sur sure surely surrey sus susi susu susurr 
susurrous susurrus sutu suture suu tree treey trek trekker trey 
troupe trouper trout troy true truer trull truller truly trun 
trush truss trust tshi tst tsun tsutsutsi tue tule tulle 
tulu tun tunu tup tupek tupi tur turn turnup turr 
turus tush tussis tussur tut tuts tutu tutulus ule ull 
uller ulu ululu unreel unrule unruly unrun unrust untrue untruly 
untruss untrust unturn unurn upper upperer uppish uppishly uppull uppush 
upspurt upsun upsup uptree uptruss upturn ure urn uro uru 
urus urushi ush ust usun usure usurer utu yee yeel 
yeld yelk yell yeller yelp yelper yeo yep yer yere 
yern yoe yor yore you youl youp your yourn yoy 
</code></pre>

<p><strong>Note:</strong>
I used the dictionary and character matrix at the beginning of this thread. The code was run on my MacBookPro, below is some information about the machine. </p>

<p>Model Name:   MacBook Pro<br>
  Model Identifier: MacBookPro8,1<br>
  Processor Name:   Intel Core i5<br>
  Processor Speed:  2.3 GHz<br>
  Number Of Processors: 1<br>
  Total Number Of Cores:    2<br>
  L2 Cache (per core):  256 KB<br>
  L3 Cache: 3 MB<br>
  Memory:   4 GB<br>
  Boot ROM Version: MBP81.0047.B0E<br>
  SMC Version (system): 1.68f96<br></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/11698898" title="short permalink to this answer" class="short-link" id="link-post-11698898">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/11698898/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/11698898/revisions" title="show all edits to this post">edited <span title="2012-11-01 08:14:34Z" class="relativetime">Nov 1 '12 at 8:14</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Jul 28 &#39;12 at 6:34. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-11698898" href="http://stackoverflow.com/posts/11698898/revisions" title="show revision history for this post">
        3 revs, 2 users 75%<br></a><a href="http://stackoverflow.com/users/1103353">Robin Zou</a>

        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-11698898" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-11698898" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="13454947"></a>
<div id="answer-13454947" class="answer" data-answerid="13454947" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="13454947">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I solved this too, with Java. My implementation is 269 lines long and pretty easy to use. First you need to create a new instance of the Boggler class and then call the solve function with the grid as a parameter. It takes about 100 ms to load the dictionary of 50 000 words on my computer and it finds the words in about 10-20 ms. The found words are stored in an ArrayList, <code>foundWords</code>.</p>

<pre><code>import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;

public class Boggler {
    private ArrayList&lt;String&gt; words = new ArrayList&lt;String&gt;();      
    private ArrayList&lt;String&gt; roundWords = new ArrayList&lt;String&gt;(); 
    private ArrayList&lt;Word&gt; foundWords = new ArrayList&lt;Word&gt;();     
    private char[][] letterGrid = new char[4][4];                   
    private String letters;                                         

    public Boggler() throws FileNotFoundException, IOException, URISyntaxException {
        long startTime = System.currentTimeMillis();

        URL path = GUI.class.getResource("words.txt");
        BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(path.toURI()).getAbsolutePath()), "iso-8859-1"));
        String line;
        while((line = br.readLine()) != null) {
            if(line.length() &lt; 3 || line.length() &gt; 10) {
                continue;
            }

            this.words.add(line);
        }
    }

    public ArrayList&lt;Word&gt; getWords() {
        return this.foundWords;
    }

    public void solve(String letters) {
        this.letters = "";
        this.foundWords = new ArrayList&lt;Word&gt;();

        for(int i = 0; i &lt; letters.length(); i++) {
            if(!this.letters.contains(letters.substring(i, i + 1))) {
                this.letters += letters.substring(i, i + 1);
            }
        }

        for(int i = 0; i &lt; 4; i++) {
            for(int j = 0; j &lt; 4; j++) {
                this.letterGrid[i][j] = letters.charAt(i * 4 + j);
            }
        }

        System.out.println(Arrays.deepToString(this.letterGrid));               

        this.roundWords = new ArrayList&lt;String&gt;();      
        String pattern = "[" + this.letters + "]+";     

        for(int i = 0; i &lt; this.words.size(); i++) {

            if(this.words.get(i).matches(pattern)) {
                this.roundWords.add(this.words.get(i));
            }
        }

        for(int i = 0; i &lt; this.roundWords.size(); i++) {
            Word word = checkForWord(this.roundWords.get(i));

            if(word != null) {
                System.out.println(word);
                this.foundWords.add(word);
            }
        }       
    }

    private Word checkForWord(String word) {
        char initial = word.charAt(0);
        ArrayList&lt;LetterCoord&gt; startPoints = new ArrayList&lt;LetterCoord&gt;();

        int x = 0;  
        int y = 0;
        for(char[] row: this.letterGrid) {
            x = 0;

            for(char letter: row) {
                if(initial == letter) {
                    startPoints.add(new LetterCoord(x, y));
                }

                x++;
            }

            y++;
        }

        ArrayList&lt;LetterCoord&gt; letterCoords = null;
        for(int initialTry = 0; initialTry &lt; startPoints.size(); initialTry++) {
            letterCoords = new ArrayList&lt;LetterCoord&gt;();    

            x = startPoints.get(initialTry).getX(); 
            y = startPoints.get(initialTry).getY();

            LetterCoord initialCoord = new LetterCoord(x, y);
            letterCoords.add(initialCoord);

            letterLoop: for(int letterIndex = 1; letterIndex &lt; word.length(); letterIndex++) {
                LetterCoord lastCoord = letterCoords.get(letterCoords.size() - 1);  
                char currentChar = word.charAt(letterIndex);                        

                ArrayList&lt;LetterCoord&gt; letterLocations = getNeighbours(currentChar, lastCoord.getX(), lastCoord.getY());

                if(letterLocations == null) {
                    return null;    
                }       

                for(int foundIndex = 0; foundIndex &lt; letterLocations.size(); foundIndex++) {
                    if(letterIndex != word.length() - 1 &amp;&amp; true == false) {
                        char nextChar = word.charAt(letterIndex + 1);
                        int lastX = letterCoords.get(letterCoords.size() - 1).getX();
                        int lastY = letterCoords.get(letterCoords.size() - 1).getY();

                        ArrayList&lt;LetterCoord&gt; possibleIndex = getNeighbours(nextChar, lastX, lastY);
                        if(possibleIndex != null) {
                            if(!letterCoords.contains(letterLocations.get(foundIndex))) {
                                letterCoords.add(letterLocations.get(foundIndex));
                            }
                            continue letterLoop;
                        } else {
                            return null;
                        }
                    } else {
                        if(!letterCoords.contains(letterLocations.get(foundIndex))) {
                            letterCoords.add(letterLocations.get(foundIndex));

                            continue letterLoop;
                        }
                    }
                }
            }

            if(letterCoords != null) {
                if(letterCoords.size() == word.length()) {
                    Word w = new Word(word);
                    w.addList(letterCoords);
                    return w;
                } else {
                    return null;
                }
            }
        }

        if(letterCoords != null) {
            Word foundWord = new Word(word);
            foundWord.addList(letterCoords);

            return foundWord;
        }

        return null;
    }

    public ArrayList&lt;LetterCoord&gt; getNeighbours(char letterToSearch, int x, int y) {
        ArrayList&lt;LetterCoord&gt; neighbours = new ArrayList&lt;LetterCoord&gt;();

        for(int _y = y - 1; _y &lt;= y + 1; _y++) {
            for(int _x = x - 1; _x &lt;= x + 1; _x++) {
                if(_x &lt; 0 || _y &lt; 0 || (_x == x &amp;&amp; _y == y) || _y &gt; 3 || _x &gt; 3) {
                    continue;
                }

                if(this.letterGrid[_y][_x] == letterToSearch &amp;&amp; !neighbours.contains(new LetterCoord(_x, _y))) {
                    neighbours.add(new LetterCoord(_x, _y));
                }
            }
        }

        if(neighbours.isEmpty()) {
            return null;
        } else {
            return neighbours;
        }
    }
}

class Word {
    private String word;    
    private ArrayList&lt;LetterCoord&gt; letterCoords = new ArrayList&lt;LetterCoord&gt;();

    public Word(String word) {
        this.word = word;
    }

    public boolean addCoords(int x, int y) {
        LetterCoord lc = new LetterCoord(x, y);

        if(!this.letterCoords.contains(lc)) {
            this.letterCoords.add(lc);

            return true;
        }

        return false;
    }

    public void addList(ArrayList&lt;LetterCoord&gt; letterCoords) {
        this.letterCoords = letterCoords;
    } 

    @Override
    public String toString() {
        String outputString = this.word + " ";
        for(int i = 0; i &lt; letterCoords.size(); i++) {
            outputString += "(" + letterCoords.get(i).getX() + ", " + letterCoords.get(i).getY() + ") ";
        }

        return outputString;
    }

    public String getWord() {
        return this.word;
    }

    public ArrayList&lt;LetterCoord&gt; getList() {
        return this.letterCoords;
    }
}

class LetterCoord extends ArrayList {
    private int x;          
    private int y;          

    public LetterCoord(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public int getX() {
        return this.x;
    }

    public int getY() {
        return this.y;
    }

    @Override
    public boolean equals(Object o) {
        if(!(o instanceof LetterCoord)) {
            return false;
        }

        LetterCoord lc = (LetterCoord) o;

        if(this.x == lc.getX() &amp;&amp;
                this.y == lc.getY()) {
            return true;
        }

        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 29 * hash + this.x;
        hash = 24 * hash + this.y;
        return hash;
    }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/13454947" title="short permalink to this answer" class="short-link" id="link-post-13454947">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/13454947/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/13454947/revisions" title="show all edits to this post">edited <span title="2012-12-01 13:48:23Z" class="relativetime">Dec 1 '12 at 13:48</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Nov 19 &#39;12 at 13:36. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-13454947" href="http://stackoverflow.com/posts/13454947/revisions" title="show revision history for this post">
        2 revs<br></a><a href="http://stackoverflow.com/users/1279334">MikkoP</a>
        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-13454947" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-13454947" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="13810740"></a>
<div id="answer-13810740" class="answer" data-answerid="13810740" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="13810740">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I solved this in c. It takes around 48 ms to run on my machine (with around 98% of the time spent loading the dictionary from disk and creating the trie). The dictionary is /usr/share/dict/american-english which has 62886 words.</p>

<p><a href="https://github.com/ealter/Boggle-Solver" rel="nofollow">Source code</a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/13810740" title="short permalink to this answer" class="short-link" id="link-post-13810740">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/13810740/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/13810740/revisions" title="show all edits to this post"><span title="2012-12-10 22:56:06Z" class="relativetime">Dec 10 '12 at 22:56</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 10 &#39;12 at 22:56. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-13810740" href="http://stackoverflow.com/posts/13810740/revisions" title="show revision history for this post">
        matzahboy
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-13810740" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-13810740" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="15286112"></a>
<div id="answer-15286112" class="answer" data-answerid="15286112" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="15286112">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I solved this perfectly and very fast. I put it into an android app. View the video at the play store link to see it in action. </p>

<p>Word Cheats is an app that "cracks" any matrix style word game. This app was built
to to help me cheat at word scrambler. It can be used for word searches,
ruzzle, words, word finder, word crack, boggle, and more!</p>

<p>It can be seen here
<a href="https://play.google.com/store/apps/details?id=com.harris.wordcracker" rel="nofollow">https://play.google.com/store/apps/details?id=com.harris.wordcracker</a></p>

<p>View the app in action in the video
<a href="https://www.youtube.com/watch?v=DL2974WmNAI" rel="nofollow">https://www.youtube.com/watch?v=DL2974WmNAI</a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/15286112" title="short permalink to this answer" class="short-link" id="link-post-15286112">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/15286112/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/15286112/revisions" title="show all edits to this post">edited <span title="2013-03-18 23:47:52Z" class="relativetime">Mar 18 '13 at 23:47</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Mar 8 &#39;13 at 3:17. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-15286112" href="http://stackoverflow.com/posts/15286112/revisions" title="show revision history for this post">
        2 revs<br></a><a href="http://stackoverflow.com/users/2146912">Josh Harris</a>
        
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-15286112" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-15286112" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="18954173"></a>
<div id="answer-18954173" class="answer" data-answerid="18954173" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="18954173">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I have solved this in C#, using a DFA algorithm. You can check out my code at</p>

<p><a href="https://github.com/attilabicsko/wordshuffler/" rel="nofollow">https://github.com/attilabicsko/wordshuffler/</a></p>

<p>In addition to finding words in a matrix, my algorithm saves the actual paths for the words, so for designing a word finder game, you can check wether there is a word on an actual path. </p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/18954173" title="short permalink to this answer" class="short-link" id="link-post-18954173">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/18954173/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/18954173/revisions" title="show all edits to this post"><span title="2013-09-23 07:49:19Z" class="relativetime">Sep 23 '13 at 7:49</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Sep 23 &#39;13 at 7:49. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-18954173" href="http://stackoverflow.com/posts/18954173/revisions" title="show revision history for this post">
        Attila Bicskó
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-18954173" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-18954173" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>

  
<a name="20957734"></a>
<div id="answer-20957734" class="answer" data-answerid="20957734" itemscope="" itemtype="http://schema.org/Answer">
    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="20957734">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span itemprop="upvoteCount" class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>How about simple sorting and using the <strong>binary search</strong> in the dictionary?</p>

<p>Returns whole list in <strong>0.35 sec</strong> and can be further optimized (by for instance removing words with unused letters etc.).</p>

<pre><code>from bisect import bisect_left

f = open("dict.txt")
D.extend([line.strip() for line in f.readlines()])
D = sorted(D)

def neibs(M,x,y):
    n = len(M)
    for i in xrange(-1,2):
        for j in xrange(-1,2):
            if (i == 0 and j == 0) or (x + i &lt; 0 or x + i &gt;= n or y + j &lt; 0 or y + j &gt;= n):
                continue
            yield (x + i, y + j)

def findWords(M,D,x,y,prefix):
    prefix = prefix + M[x][y]

    # find word in dict by binary search
    found = bisect_left(D,prefix)

    # if found then yield
    if D[found] == prefix: 
        yield prefix

    # if what we found is not even a prefix then return
    # (there is no point in going further)
    if len(D[found]) &lt; len(prefix) or D[found][:len(prefix)] != prefix:
        return

    # recourse
    for neib in neibs(M,x,y):
        for word in findWords(M,D,neib[0], neib[1], prefix):
            yield word

def solve(M,D):
    # check each starting point
    for x in xrange(0,len(M)):
        for y in xrange(0,len(M)):
            for word in findWords(M,D,x,y,""):
                yield word

grid = "fxie amlo ewbx astu".split()
print [x for x in solve(grid,D)]
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/20957734" title="short permalink to this answer" class="short-link" id="link-post-20957734">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/20957734/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="http://stackoverflow.com/posts/20957734/revisions" title="show all edits to this post"><span title="2014-01-06 19:30:23Z" class="relativetime">Jan 6 at 19:30</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Jan 6 at 19:30. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-20957734" href="http://stackoverflow.com/posts/20957734/revisions" title="show revision history for this post">
        Łukasz Kidziński
        </a>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-20957734" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>
            <div id="comments-link-20957734" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span><a class="js-show-link comments-link dno" title="expand to show all comments on this post, or add one of your own" href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" onclick=""></a>
            </div>
    </td>
</tr>    </tbody></table>
</div>
									<a name="new-answer"></a>
						<form id="post-form" action="http://stackoverflow.com/questions/746082/answer/submit" method="post" class="post-form">
						    <input type="hidden" id="post-id" value="746082">
                            <input type="hidden" id="qualityBanWarningShown" name="qualityBanWarningShown" value="false">
							<h2 class="space">Your Answer</h2>



        

<script>
    StackExchange.ready(function() {
        initTagRenderer("".split(" "), "".split(" "));
         
        prepareEditor({
            heartbeatType: 'answer',
            bindNavPrevention: true,
            postfix: "",
            onDemand: true,
            discardSelector: ".discard-answer"
            ,immediatelyShowMarkdownHelp:true
        });
        

    });  
</script>


<div id="post-editor" class="post-editor">

    <div style="position: relative;">     
        <div class="wmd-container">
            <div id="wmd-button-bar" class="wmd-button-bar"><ul id="wmd-button-row" class="wmd-button-row"><li id="wmd-bold-button" class="wmd-button" style="left: 0px;"><span style="background-position: 0px -20px;"></span></li><li id="wmd-italic-button" class="wmd-button" style="left: 25px;"><span style="background-position: -20px -20px;"></span></li><li id="wmd-spacer1" class="wmd-spacer" style="left: 50px;"><span style="background-position: -40px -20px;"></span></li><li id="wmd-link-button" class="wmd-button" style="left: 75px;"><span style="background-position: -40px -20px;"></span></li><li id="wmd-quote-button" class="wmd-button" style="left: 100px;"><span style="background-position: -60px -20px;"></span></li><li id="wmd-code-button" class="wmd-button" style="left: 125px;"><span style="background-position: -80px -20px;"></span></li><li id="wmd-image-button" class="wmd-button" style="left: 150px;"><span style="background-position: -100px -20px;"></span></li><li id="wmd-spacer2" class="wmd-spacer" style="left: 175px;"><span style="background-position: -120px -20px;"></span></li><li id="wmd-olist-button" class="wmd-button" style="left: 200px;"><span style="background-position: -120px -20px;"></span></li><li id="wmd-ulist-button" class="wmd-button" style="left: 225px;"><span style="background-position: -140px -20px;"></span></li><li id="wmd-heading-button" class="wmd-button" style="left: 250px;"><span style="background-position: -160px -20px;"></span></li><li id="wmd-hr-button" class="wmd-button" style="left: 275px;"><span style="background-position: -180px -20px;"></span></li><li id="wmd-spacer3" class="wmd-spacer" style="left: 300px;"><span style="background-position: -200px -20px;"></span></li><li id="wmd-undo-button" class="wmd-button" style="left: 325px;"><span style="background-position: -200px -20px;"></span></li><li id="wmd-redo-button" class="wmd-button" style="left: 350px;"><span style="background-position: -220px -20px;"></span></li></ul></div>
            <textarea id="wmd-input" class="wmd-input" name="post-text" cols="92" rows="15" tabindex="101" data-min-length=""></textarea>
        </div>
    </div>

    <div class="fl" style="margin-top: 8px; height:24px;">&nbsp;</div>
    <div id="draft-saved" class="draft-saved community-option fl" style="margin-top: 8px; height:24px; display:none;">draft saved</div>

    <div id="draft-discarded" class="draft-discarded community-option fl" style="margin-top: 8px; height:24px; display:none;">draft discarded</div>



    <div id="wmd-preview" class="wmd-preview"></div>
    <div></div>
    <div class="edit-block">
        <input id="fkey" name="fkey" type="hidden" value="5c93136ff0ff9b8bc296d89cc67f2c5b">
        <input id="author" name="author" type="text">
    </div>
</div>
							<div style="position: relative;">
								
            <div class="form-item new-post-login">
        
                <div class="new-login-form">
                    <div class="new-login-left">
                        <h3>Sign up or <a id="login-link" href="http://stackoverflow.com/users/login?returnurl=%2fquestions%2f746082%2fhow-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver%23new-answer">log in</a></h3>
                        <script>
                            StackExchange.ready(function () {
                                StackExchange.helpers.onClickDraftSave('#login-link');
                            });
                        </script>
                        <div class="preferred-login google-login">
                            <p><span class="icon"></span><span>Sign up using Google</span></p>
                        </div>
                        <div class="preferred-login facebook-login">
                            <p><span class="icon"></span><span>Sign up using Facebook</span></p>
                        </div>
                        <div class="preferred-login stackexchange-login">
                            <p><span class="icon"></span><span>Sign up using Stack Exchange</span></p>
                        </div>
                    </div>
                    <input type="hidden" name="manual-openid" class="manual-openid">
                    <input type="hidden" name="use-facebook" class="use-facebook" value="false">
                    <input type="hidden" name="use-google-oauth2" class="use-google-oauth2" value="false">
                    <input type="button" class="submit-openid" value="Submit" style="display:none">
                    <div class="new-login-right">
                                <h3>Post as a guest</h3>
    <div class="form-item">
        <table>
        <tbody><tr>
                    <script>
                StackExchange.ready(function () {
                    StackExchange.helpers.bindHelpOverlayEvents($('.vm input'));
                });
            </script>
            <td class="vm">
                <div>
                    <label for="display-name">Name</label>
                    <input id="display-name" name="display-name" type="text" size="30" maxlength="30" value="" tabindex="105">
                </div>
                <div>
                    <label for="m-address">Email</label>
                    <input id="m-address" name="m-address" type="text" size="30" maxlength="100" value="" tabindex="106">
                    <span class="edit-field-overlay">required, but not shown</span>
                </div>
            </td>
        </tr>
        </tbody></table>
    </div>

                    </div>
                </div>
            </div>
            <script>
                StackExchange.ready(
                    function () {
                        StackExchange.openid.initPostLogin('.new-post-login', '%2fquestions%2f746082%2fhow-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver%23new-answer');
                    }
                );
            </script>
            <noscript>
                        &lt;h3&gt;Post as a guest&lt;/h3&gt;
    &lt;div class="form-item"&gt;
        &lt;table&gt;
        &lt;tr&gt;
                    &lt;script&gt;
                StackExchange.ready(function () {
                    StackExchange.helpers.bindHelpOverlayEvents($('.vm input'));
                });
            &lt;/script&gt;
            &lt;td class="vm"&gt;
                &lt;div&gt;
                    &lt;label for="display-name"&gt;Name&lt;/label&gt;
                    &lt;input id="display-name" name="display-name" type="text" size="30" maxlength="30" value="" tabindex="105"&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;label for="m-address"&gt;Email&lt;/label&gt;
                    &lt;input id="m-address" name="m-address" type="text" size="30" maxlength="100" value="" tabindex="106"&gt;
                    &lt;span class="edit-field-overlay"&gt;required, but not shown&lt;/span&gt;
                &lt;/div&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
    &lt;/div&gt;

            </noscript>
							</div>
           
															<div class="form-submit cbt">
									<input id="submit-button" type="submit" value="Post Your Answer" tabindex="110">
									<a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver#" class="discard-answer dno">discard</a>

<p class="privacy-policy-agreement">
By posting your answer, you agree to the <a href="http://stackexchange.com/legal/privacy-policy" target="_blank">privacy policy</a> and <a href="http://stackexchange.com/legal/terms-of-service" target="_blank">terms of service</a>.</p>
<input type="hidden" name="legalLinksShown" value="1">								</div>
						</form>



						<h2 class="bottom-notice" data-loc="1">
Not the answer you're looking for?							Browse other questions tagged <a href="http://stackoverflow.com/questions/tagged/algorithm" class="post-tag" title="show questions tagged &#39;algorithm&#39;" rel="tag">algorithm</a> <a href="http://stackoverflow.com/questions/tagged/puzzle" class="post-tag" title="show questions tagged &#39;puzzle&#39;" rel="tag">puzzle</a>  or <a href="http://stackoverflow.com/questions/ask">ask your own question</a>.						</h2>
			</div>
		</div>
				<div id="sidebar" class="show-votes">
						    <div class="module question-stats">
			        <table id="qinfo">
			            <tbody><tr>
			                <td>
			                    <p class="label-key">asked</p>
			                </td>
			                <td style="padding-left: 10px">
			                    <p class="label-key" title="2009-04-14 02:11:33Z"><b>5 years ago</b></p>
			                </td>
			            </tr>
			            <tr>
			                <td>
			                    <p class="label-key">viewed</p>
			                </td>

			                <td style="padding-left: 10px">
			                    <p class="label-key">
			                        <b>87000 times</b>
			                    </p>
			                </td>
			            </tr>
			                <tr>
			                    <td>
			                        <p class="label-key">active</p>
			                    </td>
			                    <td style="padding-left: 10px">
			                        <p class="label-key"><b><a href="http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver?lastactivity" class="lastactivity-link" title="2014-05-20 22:10:35Z">3 months ago</a></b></p>
			                    </td>
			                </tr>
			        </tbody></table>
			    </div>
						
			<script>
                var ados = ados || {};ados.run = ados.run || [];
                ados.run.push(function() { ados_add_placement(22,8277,"adzerk622716349",[17,2221]).setZone(45) ; });                    
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk622716349">
            </div>  
        <div id="hireme">
            <script>
window.careers_adurl="//careers.stackoverflow.com/gethired/js",window.careers_cssurl="//cdn-careers.sstatic.net/careers/gethired/sidebar.min.css?v=871145189bac",window.careers_leaderboardcssurl="{leaderboardcssurl}",window.careers_companycssurl="//cdn-careers.sstatic.net/careers/gethired/company",window.careers_adselector="div#hireme",StackExchange.ready(function(){$.ajax({url:"//cdn-careers.sstatic.net/careers/gethired/loader.min.js?v=d64e9774c474",dataType:"script",cache:!0})});            </script>
            
        </div>
			  
    
            <div class="module sidebar-linked">
	<h4 id="h-linked">Linked</h4>
	<div class="linked" data-tracker="lq=1">
<div class="spacer">
	<a href="http://stackoverflow.com/q/13326439?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">1</div>
	</a>
	<a href="http://stackoverflow.com/questions/13326439/searching-words-in-array?lq=1" class="question-hyperlink">Searching words in array</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/10512724?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">0</div>
	</a>
	<a href="http://stackoverflow.com/questions/10512724/anagram-find-the-word-solver?lq=1" class="question-hyperlink">Anagram - find the word solver</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/209906?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">44</div>
	</a>
	<a href="http://stackoverflow.com/questions/209906/compile-regex-in-php?lq=1" class="question-hyperlink">Compile regex in PHP</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/772922?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">13</div>
	</a>
	<a href="http://stackoverflow.com/questions/772922/free-word-list-for-use-programatically?lq=1" class="question-hyperlink">Free word list for use programatically?</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/813366?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">16</div>
	</a>
	<a href="http://stackoverflow.com/questions/813366/solving-nonograms-picross?lq=1" class="question-hyperlink">Solving Nonograms (Picross)</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/2013902?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">16</div>
	</a>
	<a href="http://stackoverflow.com/questions/2013902/select-cells-on-a-table-by-dragging?lq=1" class="question-hyperlink">Select Cells On A Table By Dragging</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/4313971?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">12</div>
	</a>
	<a href="http://stackoverflow.com/questions/4313971/how-can-i-find-words-in-matrix-of-letters?lq=1" class="question-hyperlink">How can I find words in matrix of letters</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/9138239?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">7</div>
	</a>
	<a href="http://stackoverflow.com/questions/9138239/java-string-permutations-and-combinations?lq=1" class="question-hyperlink">java string permutations and combinations</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/9041293?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">2</div>
	</a>
	<a href="http://stackoverflow.com/questions/9041293/4x4-word-grid-java?lq=1" class="question-hyperlink">4x4 Word Grid - Java</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/8483829?lq=1" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">-3</div>
	</a>
	<a href="http://stackoverflow.com/questions/8483829/optimize-boggle-algorithm?lq=1" class="question-hyperlink">Optimize boggle algorithm</a>
</div>					<div class="spacer more">
				<a href="http://stackoverflow.com/questions/linked/746082?lq=1">see more linked questions…</a>
			</div>
	</div>
</div>

				<div class="module sidebar-related">
					<h4 id="h-related">Related</h4>
                    <div class="related js-gps-related-questions" data-tracker="rq=1">
                        <div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/8268013?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">3
    </div>
</a><a href="http://stackoverflow.com/questions/8268013/an-algorithm-to-tell-how-many-distinct-leading-characters-are-necessary-to-disc?rq=1" class="question-hyperlink">An algorithm to tell how many distinct, leading characters are necessary to discern a word from a list?</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/8704829?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">3
    </div>
</a><a href="http://stackoverflow.com/questions/8704829/find-the-best-element-from-the-given-list?rq=1" class="question-hyperlink">Find the 'Best' element from the given list</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/8873368?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">7
    </div>
</a><a href="http://stackoverflow.com/questions/8873368/how-many-common-english-words-of-4-letters-or-more-can-you-make-from-the-letters?rq=1" class="question-hyperlink">How many common English words of 4 letters or more can you make from the letters of a given word (each letter can only be used once)</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/10512724?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">0
    </div>
</a><a href="http://stackoverflow.com/questions/10512724/anagram-find-the-word-solver?rq=1" class="question-hyperlink">Anagram - find the word solver</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/11348467?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">5
    </div>
</a><a href="http://stackoverflow.com/questions/11348467/solve-the-word-game-ghost-as-seen-on-xkcd-spelling-letters-without-making-a?rq=1" class="question-hyperlink">Solve the word game Ghost (as seen on xkcd) - spelling letters without making a word</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/17134583?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">-1
    </div>
</a><a href="http://stackoverflow.com/questions/17134583/how-to-find-the-combination-of-words-that-includes-all-the-letters-in-the-input?rq=1" class="question-hyperlink">How to find the combination of words that includes all the letters in the input with Python</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/17435030?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">-3
    </div>
</a><a href="http://stackoverflow.com/questions/17435030/how-to-find-all-possible-n-elements-subsets-of-a-set?rq=1" class="question-hyperlink">How to find all possible n-elements subsets of a set?</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/18177639?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">6
    </div>
</a><a href="http://stackoverflow.com/questions/18177639/how-to-generate-letter-grids-with-lots-of-words?rq=1" class="question-hyperlink">How to generate letter grids with lots of words</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/20349087?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">0
    </div>
</a><a href="http://stackoverflow.com/questions/20349087/finding-the-counterfeit-coin-from-a-list-of-9-coins?rq=1" class="question-hyperlink">Finding the counterfeit coin from a list of 9 coins</a>
</div>
<div class="spacer js-gps-track">
<a href="http://stackoverflow.com/q/21593925?rq=1" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">4
    </div>
</a><a href="http://stackoverflow.com/questions/21593925/how-to-create-a-boggle-board-from-a-list-of-words-reverse-boggle-solver?rq=1" class="question-hyperlink">How to create a Boggle Board from a list of Words? (reverse Boggle solver!)</a>
</div>

                    </div>
				</div>
            
<div id="hot-network-questions" class="module">
    <h4>
        <a href="http://stackexchange.com/questions?tab=hot" class="js-gps-track" data-gps-track="posts_hot_network.click({ item_type:1, location:11 })">
            Hot Network Questions
        </a>
    </h4>
    <ul>
            <li>
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/917488/how-to-graph-visualize-complicated-inequalities" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to graph/visualize complicated inequalities
                </a>

            </li>
            <li>
                <div class="favicon favicon-english" title="English Language &amp; Usage Stack Exchange"></div><a href="http://english.stackexchange.com/questions/194482/neutral-alternative-to-deny-to-mean-assert-the-untruth-of-a-claim" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:97 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Neutral alternative to "deny" to mean "assert the untruth [of a claim]"
                </a>

            </li>
            <li>
                <div class="favicon favicon-english" title="English Language &amp; Usage Stack Exchange"></div><a href="http://english.stackexchange.com/questions/194533/is-there-a-word-for-someone-who-youve-not-physically-met-but-know-well" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:97 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is there a word for someone who you've not physically met but know well?
                </a>

            </li>
            <li>
                <div class="favicon favicon-crypto" title="Cryptography Stack Exchange"></div><a href="http://crypto.stackexchange.com/questions/18935/are-ssl-tls-used-for-maintaining-data-confidentiality" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:281 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Are SSL/TLS used for maintaining data confidentiality?
                </a>

            </li>
            <li>
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/917164/get-5-by-doing-any-operations-with-four-7" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Get 5 by doing any operations with four 7
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-ux" title="User Experience Stack Exchange"></div><a href="http://ux.stackexchange.com/questions/63880/should-i-clear-a-form-after-the-user-submits-data" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:102 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Should I clear a form after the user submits data?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-music" title="Musical Practice &amp; Performance Stack Exchange"></div><a href="http://music.stackexchange.com/questions/23265/what-do-we-call-music-which-is-not-played-on-the-beat" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:240 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What do we call music which is not played on the beat?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-academia" title="Academia Stack Exchange"></div><a href="http://academia.stackexchange.com/questions/27934/when-and-why-should-you-write-numbers-less-than-10-in-words" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:415 }); posts_hot_network.click({ item_type:2, location:11 })">
                    When and why should you write numbers less than 10 in words?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-codereview" title="Code Review Stack Exchange"></div><a href="http://codereview.stackexchange.com/questions/61801/managing-student-budgets" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:196 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Managing student budgets
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-mathematica" title="Mathematica Stack Exchange"></div><a href="http://mathematica.stackexchange.com/questions/58657/how-to-blend-two-photos-in-mathematica" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:387 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to blend two photos in Mathematica?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-ell" title="English Language Learners Stack Exchange"></div><a href="http://ell.stackexchange.com/questions/32695/must-be-presented-and-must-be-existed" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:481 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Must be presented and must be existed
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/917302/evaluating-a-polynomial-of-degree-4-given-some-values-of-the-polynomial" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Evaluating a polynomial of degree 4, given some values of the polynomial
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-mathoverflow" title="MathOverflow"></div><a href="http://mathoverflow.net/questions/179955/is-there-a-straightedge-and-compass-construction-of-incommensurables-in-the-hype" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:504 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is there a straightedge and compass construction of incommensurables in the hyperbolic plane?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-moderators" title="Moderators Stack Exchange"></div><a href="http://moderators.stackexchange.com/questions/632/ending-a-community-with-dignity" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:571 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Ending a community with dignity?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/916854/taking-calculus-in-a-few-days-and-i-still-dont-know-how-to-factorize-quadratics" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Taking Calculus in a few days and I still don't know how to factorize quadratics
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-cooking" title="Seasoned Advice"></div><a href="http://cooking.stackexchange.com/questions/46803/is-a-steak-ok-to-eat-if-it-fell-down-but-i-cooked-it-afterwards" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:49 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is a steak OK to eat if it fell down, but I cooked it afterwards?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-ell" title="English Language Learners Stack Exchange"></div><a href="http://ell.stackexchange.com/questions/32737/correct-form-of-verb" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:481 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Correct form of verb
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-linguistics" title="Linguistics Stack Exchange"></div><a href="http://linguistics.stackexchange.com/questions/8893/what-languages-use-numbers-to-name-the-week-days-and-months" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:312 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What languages use numbers to name the week days and months?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-english" title="English Language &amp; Usage Stack Exchange"></div><a href="http://english.stackexchange.com/questions/194456/single-word-for-more-than-once" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:97 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Single word for "more than once"
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-judaism" title="Mi Yodeya"></div><a href="http://judaism.stackexchange.com/questions/45048/does-sorcery-black-magic-exist-today" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:248 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Does sorcery/black magic exist today?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-english" title="English Language &amp; Usage Stack Exchange"></div><a href="http://english.stackexchange.com/questions/194266/what-do-you-call-a-disgusting-mixture-you-dont-want-to-drink" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:97 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What do you call a disgusting mixture you don't want to drink?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-music" title="Musical Practice &amp; Performance Stack Exchange"></div><a href="http://music.stackexchange.com/questions/23293/diffrence-between-polychords-and-extended-chords" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:240 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Diffrence between Polychords and Extended chords
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-sharepoint" title="SharePoint Stack Exchange"></div><a href="http://sharepoint.stackexchange.com/questions/113847/submit-a-document-on-a-document-library-but-not-have-it-visible-after-that-is-t" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:232 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Submit a document on a document library but not have it visible after that, is that possible?
                </a>

            </li>
            <li class="dno js-hidden" style="display: list-item;">
                <div class="favicon favicon-scifi" title="Science Fiction &amp; Fantasy Stack Exchange"></div><a href="http://scifi.stackexchange.com/questions/66963/why-was-the-mcu-super-soldier-program-considered-a-failure" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:186 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why was the MCU Super Soldier program considered a failure?
                </a>

            </li>
    </ul>

        
</div>
		</div>
	
<div id="feed-link">
    <div id="feed-link-text">
        <a href="http://stackoverflow.com/feeds/question/746082" title="feed of this question and its answers">
            <span class="feed-icon"></span>question feed
        </a>
    </div>
</div>	<script>
StackExchange.ready(function(){$.get('/posts/746082/ivc/73d6');});
</script>
<noscript>
    &lt;div&gt;&lt;img src="/posts/746082/ivc/73d6" class="dno" alt="" width="0" height="0"&gt;&lt;/div&gt;
</noscript><div style="display:none" id="prettify-lang"></div></div>



        </div>
    </div>
    <div id="footer" class="categories">
        <div class="footerwrap">
            <div id="footer-menu">
                <div class="top-footer-links">
                        <a href="http://stackoverflow.com/tour">tour</a>
                    <a href="http://stackoverflow.com/help">help</a>
                        <a href="http://stackoverflow.com/help/badges">badges</a>
                    <a href="http://blog.stackoverflow.com/?blb=1">blog</a>
                        <a href="http://chat.stackoverflow.com/">chat</a>
                    <a href="http://data.stackexchange.com/">data</a>
                    <a href="http://stackexchange.com/legal">legal</a>
                    <a href="http://stackexchange.com/legal/privacy-policy">privacy policy</a>
                    <a href="http://stackexchange.com/work-here">work here</a>
                    <a href="http://stackexchange.com/mediakit">advertising info</a>

                    <a onclick="StackExchange.switchMobile(&quot;on&quot;)">mobile</a>
                    <b><a href="http://stackoverflow.com/contact">contact us</a></b>
                        <b><a href="http://meta.stackoverflow.com/">feedback</a></b>
                    
                </div>
                <div id="footer-sites">
                    <table>
    <tbody><tr>
            <th colspan="3">
                Technology
            </th>
            <th>
                Life / Arts
            </th>
            <th>
                Culture / Recreation
            </th>
            <th>
                Science
            </th>
            <th>
                Other
            </th>
    </tr>
    <tr>
            <td>
                <ol>
                        <li><a href="http://stackoverflow.com/" title="professional and enthusiast programmers">Stack Overflow</a></li>
                        <li><a href="http://serverfault.com/" title="professional system and network administrators">Server Fault</a></li>
                        <li><a href="http://superuser.com/" title="computer enthusiasts and power users">Super User</a></li>
                        <li><a href="http://webapps.stackexchange.com/" title="power users of web applications">Web Applications</a></li>
                        <li><a href="http://askubuntu.com/" title="Ubuntu users and developers">Ask Ubuntu</a></li>
                        <li><a href="http://webmasters.stackexchange.com/" title="pro webmasters">Webmasters</a></li>
                        <li><a href="http://gamedev.stackexchange.com/" title="professional and independent game developers">Game Development</a></li>
                        <li><a href="http://tex.stackexchange.com/" title="users of TeX, LaTeX, ConTeXt, and related typesetting systems">TeX - LaTeX</a></li>
                            </ol></td><td><ol>
                        <li><a href="http://programmers.stackexchange.com/" title="professional programmers interested in conceptual questions about software development">Programmers</a></li>
                        <li><a href="http://unix.stackexchange.com/" title="users of Linux, FreeBSD and other Un*x-like operating systems.">Unix &amp; Linux</a></li>
                        <li><a href="http://apple.stackexchange.com/" title="power users of Apple hardware and software">Ask Different (Apple)</a></li>
                        <li><a href="http://wordpress.stackexchange.com/" title="WordPress developers and administrators">WordPress Development</a></li>
                        <li><a href="http://gis.stackexchange.com/" title="cartographers, geographers and GIS professionals">Geographic Information Systems</a></li>
                        <li><a href="http://electronics.stackexchange.com/" title="electronics and electrical engineering professionals, students, and enthusiasts">Electrical Engineering</a></li>
                        <li><a href="http://android.stackexchange.com/" title="enthusiasts and power users of the Android operating system">Android Enthusiasts</a></li>
                        <li><a href="http://security.stackexchange.com/" title="Information security professionals">Information Security</a></li>
                            </ol></td><td><ol>
                        <li><a href="http://dba.stackexchange.com/" title="database professionals who wish to improve their database skills and learn from others in the community">Database Administrators</a></li>
                        <li><a href="http://drupal.stackexchange.com/" title="Drupal developers and administrators">Drupal Answers</a></li>
                        <li><a href="http://sharepoint.stackexchange.com/" title="SharePoint enthusiasts">SharePoint</a></li>
                        <li><a href="http://ux.stackexchange.com/" title="user experience researchers and experts">User Experience</a></li>
                        <li><a href="http://mathematica.stackexchange.com/" title="users of Mathematica">Mathematica</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#technology" class="more">
                                more (14)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://photo.stackexchange.com/" title="professional, enthusiast and amateur photographers">Photography</a></li>
                        <li><a href="http://scifi.stackexchange.com/" title="science fiction and fantasy enthusiasts">Science Fiction &amp; Fantasy</a></li>
                        <li><a href="http://graphicdesign.stackexchange.com/" title="Graphic Design professionals, students, and enthusiasts">Graphic Design</a></li>
                        <li><a href="http://cooking.stackexchange.com/" title="professional and amateur chefs">Seasoned Advice (cooking)</a></li>
                        <li><a href="http://diy.stackexchange.com/" title="contractors and serious DIYers">Home Improvement</a></li>
                        <li><a href="http://money.stackexchange.com/" title="people who want to be financially literate">Personal Finance &amp; Money</a></li>
                        <li><a href="http://academia.stackexchange.com/" title="academics and those enrolled in higher education">Academia</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#lifearts" class="more">
                                more (10)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://english.stackexchange.com/" title="linguists, etymologists, and serious English language enthusiasts">English Language &amp; Usage</a></li>
                        <li><a href="http://skeptics.stackexchange.com/" title="scientific skepticism">Skeptics</a></li>
                        <li><a href="http://judaism.stackexchange.com/" title="those who base their lives on Jewish law and tradition and anyone interested in learning more">Mi Yodeya (Judaism)</a></li>
                        <li><a href="http://travel.stackexchange.com/" title="road warriors and seasoned travelers">Travel</a></li>
                        <li><a href="http://christianity.stackexchange.com/" title="committed Christians, experts in Christianity and those interested in learning more">Christianity</a></li>
                        <li><a href="http://gaming.stackexchange.com/" title="passionate videogamers on all platforms">Arqade (gaming)</a></li>
                        <li><a href="http://bicycles.stackexchange.com/" title="people who build and repair bicycles, people who train cycling, or commute on bicycles">Bicycles</a></li>
                        <li><a href="http://rpg.stackexchange.com/" title="gamemasters and players of tabletop, paper-and-pencil role-playing games">Role-playing Games</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#culturerecreation" class="more">
                                more (21)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://math.stackexchange.com/" title="people studying math at any level and professionals in related fields">Mathematics</a></li>
                        <li><a href="http://stats.stackexchange.com/" title="people interested in statistics, machine learning, data analysis, data mining, and data visualization">Cross Validated (stats)</a></li>
                        <li><a href="http://cstheory.stackexchange.com/" title="theoretical computer scientists and researchers in related fields">Theoretical Computer Science</a></li>
                        <li><a href="http://physics.stackexchange.com/" title="active researchers, academics and students of physics">Physics</a></li>
                        <li><a href="http://mathoverflow.net/" title="professional mathematicians">MathOverflow</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#science" class="more">
                                more (7)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://stackapps.com/" title="apps, scripts, and development with the Stack Exchange API">Stack Apps</a></li>
                        <li><a href="http://meta.stackexchange.com/" title="meta-discussion of the Stack Exchange family of Q&amp;A websites">Meta Stack Exchange</a></li>
                        <li><a href="http://area51.stackexchange.com/" title="proposing new sites in the Stack Exchange network">Area 51</a></li>
                        <li><a href="http://careers.stackoverflow.com/">Stack Overflow Careers</a></li>
                    
                </ol>
            </td>
    </tr>
</tbody></table>
                </div>
            </div>

            <div id="copyright">
                site design / logo © 2014 stack exchange inc; user contributions licensed under <a href="http://creativecommons.org/licenses/by-sa/3.0/" rel="license">cc by-sa 3.0</a> 
                with <a href="http://blog.stackoverflow.com/2009/06/attribution-required/" rel="license">attribution required</a>
            </div>
            <div id="svnrev">
                rev 2014.9.2.1810
            </div>
            
        </div>
    <iframe id="global-auth-frame" style="display:none" src="./algorithm - How to find list of possible words from a letter matrix [Boggle Solver] - Stack Overflow_files/read.htm"></iframe></div>
    <noscript>
        &lt;div id="noscript-warning"&gt;Stack Overflow works best with JavaScript enabled&lt;img src="http://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif" alt="" class="dno"&gt;&lt;/div&gt;
    </noscript>
<script>var p = "http", d = "static"; if (document.location.protocol == "https:") { p += "s"; d = "engine"; } var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = p + "://" + d + ".adzerk.net/ados.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script>
<script>
    var ados = ados || {};
    ados.run = ados.run || [];
    ados.run.push(function () { ados_setKeywords('algorithm,puzzle');; ados_load(); });         
</script>

    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
        ga('create', 'UA-5620270-1');        
        
        ga('set', 'dimension2', '|algorithm|puzzle|');         
        ga('send', 'pageview');
        var _qevents = _qevents || [],
            _comscore = _comscore || [];
        (function () {
            var ssl='https:'==document.location.protocol,
                s=document.getElementsByTagName('script')[0],
                qc=document.createElement('script');
            qc.async=true;
            qc.src=(ssl?'https://secure':'http://edge')+'.quantserve.com/quant.js';
            s.parentNode.insertBefore(qc, s);
            var sc=document.createElement('script');
            sc.async=true;
            sc.src=(ssl?'https://sb':'http://b') + '.scorecardresearch.com/beacon.js';
            s.parentNode.insertBefore(sc, s);
        })();
        _comscore.push({ c1: "2", c2: "17440561" });
        _qevents.push({ qacct: "p-c1rF4kxgLUzNc" });
    </script>        
    
    
</body></html>